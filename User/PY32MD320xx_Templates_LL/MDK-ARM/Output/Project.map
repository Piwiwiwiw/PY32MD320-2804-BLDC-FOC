Component: ARM Compiler 6.16 Tool: armlink [5dfeaa00]

==============================================================================

Section Cross References

    system_py32md3xx.o(.text.SystemCoreClockUpdate) refers to system_py32md3xx.o(.rodata.HSIFreqTable) for HSIFreqTable
    system_py32md3xx.o(.text.SystemCoreClockUpdate) refers to system_py32md3xx.o(.data.SystemCoreClock) for SystemCoreClock
    system_py32md3xx.o(.text.SystemCoreClockUpdate) refers to system_py32md3xx.o(.rodata.AHBPrescTable) for AHBPrescTable
    system_py32md3xx.o(.ARM.exidx.text.SystemCoreClockUpdate) refers to system_py32md3xx.o(.text.SystemCoreClockUpdate) for [Anonymous Symbol]
    system_py32md3xx.o(.ARM.exidx.text.SystemInit) refers to system_py32md3xx.o(.text.SystemInit) for [Anonymous Symbol]
    system_py32md3xx.o(.text.$Sub$$main) refers to main.o(.text.main) for $Super$$main
    system_py32md3xx.o(.text.$Sub$$main) refers to system_py32md3xx.o(.ARM.__at_0x20000000) for VECT_SRAM_TAB
    system_py32md3xx.o(.ARM.exidx.text.$Sub$$main) refers to system_py32md3xx.o(.text.$Sub$$main) for [Anonymous Symbol]
    startup_py32md320xx.o(RESET) refers to startup_py32md320xx.o(STACK) for __initial_sp
    startup_py32md320xx.o(RESET) refers to startup_py32md320xx.o(.text) for Reset_Handler
    startup_py32md320xx.o(RESET) refers to py32md3xx_it.o(.text.NMI_Handler) for NMI_Handler
    startup_py32md320xx.o(RESET) refers to py32md3xx_it.o(.text.HardFault_Handler) for HardFault_Handler
    startup_py32md320xx.o(RESET) refers to py32md3xx_it.o(.text.SVC_Handler) for SVC_Handler
    startup_py32md320xx.o(RESET) refers to py32md3xx_it.o(.text.PendSV_Handler) for PendSV_Handler
    startup_py32md320xx.o(RESET) refers to py32md3xx_it.o(.text.SysTick_Handler) for SysTick_Handler
    startup_py32md320xx.o(RESET) refers to py32md3xx_it.o(.text.TIM1_BRK_UP_TRG_COM_IRQHandler) for TIM1_BRK_UP_TRG_COM_IRQHandler
    startup_py32md320xx.o(RESET) refers to py32md3xx_it.o(.text.USART2_IRQHandler) for USART2_IRQHandler
    startup_py32md320xx.o(.text) refers to system_py32md3xx.o(.text.SystemInit) for SystemInit
    startup_py32md320xx.o(.text) refers to entry.o(.ARM.Collect$$$$00000000) for __main
    main.o(.text.Save_MotorConf) refers to main.o(.text.LL_FLASH_Unlock) for LL_FLASH_Unlock
    main.o(.text.Save_MotorConf) refers to main.o(.text.LL_FLASH_IsActiveFlag_BUSY) for LL_FLASH_IsActiveFlag_BUSY
    main.o(.text.Save_MotorConf) refers to main.o(.text.LL_FLASH_EnableIT_EOP) for LL_FLASH_EnableIT_EOP
    main.o(.text.Save_MotorConf) refers to main.o(.text.LL_FLASH_EnablePageErase) for LL_FLASH_EnablePageErase
    main.o(.text.Save_MotorConf) refers to main.o(.text.LL_FLASH_SetEraseAddress) for LL_FLASH_SetEraseAddress
    main.o(.text.Save_MotorConf) refers to main.o(.text.LL_FLASH_IsActiveFlag_EOP) for LL_FLASH_IsActiveFlag_EOP
    main.o(.text.Save_MotorConf) refers to main.o(.text.LL_FLASH_ClearFlag_EOP) for LL_FLASH_ClearFlag_EOP
    main.o(.text.Save_MotorConf) refers to main.o(.text.LL_FLASH_DisableIT_EOP) for LL_FLASH_DisableIT_EOP
    main.o(.text.Save_MotorConf) refers to main.o(.text.LL_FLASH_DisablePageErase) for LL_FLASH_DisablePageErase
    main.o(.text.Save_MotorConf) refers to memseta.o(.text) for __aeabi_memclr4
    main.o(.text.Save_MotorConf) refers to main.o(.text.LL_FLASH_EnablePageProgram) for LL_FLASH_EnablePageProgram
    main.o(.text.Save_MotorConf) refers to main.o(.text.LL_FLASH_PageProgram) for LL_FLASH_PageProgram
    main.o(.text.Save_MotorConf) refers to main.o(.text.LL_FLASH_DisablePageProgram) for LL_FLASH_DisablePageProgram
    main.o(.text.Save_MotorConf) refers to main.o(.text.LL_FLASH_Lock) for LL_FLASH_Lock
    main.o(.text.Save_MotorConf) refers to main.o(.bss.flash_buffer) for flash_buffer
    main.o(.text.Save_MotorConf) refers to main.o(.bss.conf) for conf
    main.o(.ARM.exidx.text.Save_MotorConf) refers to main.o(.text.Save_MotorConf) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.LL_FLASH_Unlock) refers to main.o(.text.LL_FLASH_Unlock) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.LL_FLASH_IsActiveFlag_BUSY) refers to main.o(.text.LL_FLASH_IsActiveFlag_BUSY) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.LL_FLASH_EnableIT_EOP) refers to main.o(.text.LL_FLASH_EnableIT_EOP) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.LL_FLASH_EnablePageErase) refers to main.o(.text.LL_FLASH_EnablePageErase) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.LL_FLASH_SetEraseAddress) refers to main.o(.text.LL_FLASH_SetEraseAddress) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.LL_FLASH_IsActiveFlag_EOP) refers to main.o(.text.LL_FLASH_IsActiveFlag_EOP) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.LL_FLASH_ClearFlag_EOP) refers to main.o(.text.LL_FLASH_ClearFlag_EOP) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.LL_FLASH_DisableIT_EOP) refers to main.o(.text.LL_FLASH_DisableIT_EOP) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.LL_FLASH_DisablePageErase) refers to main.o(.text.LL_FLASH_DisablePageErase) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.LL_FLASH_EnablePageProgram) refers to main.o(.text.LL_FLASH_EnablePageProgram) for [Anonymous Symbol]
    main.o(.text.LL_FLASH_PageProgram) refers to main.o(.text.LL_FLASH_EnablePageProgramStart) for LL_FLASH_EnablePageProgramStart
    main.o(.text.LL_FLASH_PageProgram) refers to main.o(.bss.flash_buffer) for flash_buffer
    main.o(.ARM.exidx.text.LL_FLASH_PageProgram) refers to main.o(.text.LL_FLASH_PageProgram) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.LL_FLASH_DisablePageProgram) refers to main.o(.text.LL_FLASH_DisablePageProgram) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.LL_FLASH_Lock) refers to main.o(.text.LL_FLASH_Lock) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.Load_MotorConf) refers to main.o(.text.Load_MotorConf) for [Anonymous Symbol]
    main.o(.text.main) refers to main.o(.text.APP_SystemClockConfig) for APP_SystemClockConfig
    main.o(.text.main) refers to main.o(.text.NVIC_Config) for NVIC_Config
    main.o(.text.main) refers to main.o(.text.APP_GPIOConfig) for APP_GPIOConfig
    main.o(.text.main) refers to main.o(.text.APP_ADCConfig) for APP_ADCConfig
    main.o(.text.main) refers to main.o(.text.APP_SPI1Config) for APP_SPI1Config
    main.o(.text.main) refers to main.o(.text.APP_USARTConfig) for APP_USARTConfig
    main.o(.text.main) refers to main.o(.text.APP_PWMChannelConfig) for APP_PWMChannelConfig
    main.o(.text.main) refers to main.o(.text.APP_TIM1BaseConfig) for APP_TIM1BaseConfig
    main.o(.text.main) refers to main.o(.text.Load_MotorConf) for Load_MotorConf
    main.o(.text.main) refers to foc.o(.text.setZero) for setZero
    main.o(.text.main) refers to main.o(.text.LL_GPIO_ResetOutputPin) for LL_GPIO_ResetOutputPin
    main.o(.text.main) refers to main.o(.text.LL_TIM_EnableIT_UPDATE) for LL_TIM_EnableIT_UPDATE
    main.o(.text.main) refers to main.o(.text.LL_TIM_EnableAllOutputs) for LL_TIM_EnableAllOutputs
    main.o(.text.main) refers to main.o(.text.LL_TIM_EnableCounter) for LL_TIM_EnableCounter
    main.o(.text.main) refers to main.o(.bss.motor) for motor
    main.o(.text.main) refers to main.o(.bss.conf) for conf
    main.o(.text.main) refers to py32md3xx_it.o(.bss.position) for position
    main.o(.text.main) refers to py32md3xx_it.o(.bss.speed) for speed
    main.o(.ARM.exidx.text.main) refers to main.o(.text.main) for [Anonymous Symbol]
    main.o(.text.APP_SystemClockConfig) refers to main.o(.text.LL_RCC_HSI_Enable) for LL_RCC_HSI_Enable
    main.o(.text.APP_SystemClockConfig) refers to main.o(.text.LL_RCC_HSI_SetCalibFreq) for LL_RCC_HSI_SetCalibFreq
    main.o(.text.APP_SystemClockConfig) refers to main.o(.text.LL_RCC_HSI_IsReady) for LL_RCC_HSI_IsReady
    main.o(.text.APP_SystemClockConfig) refers to py32md3xx_ll_utils.o(.text.LL_PLL_ConfigSystemClock_HSI) for LL_PLL_ConfigSystemClock_HSI
    main.o(.text.APP_SystemClockConfig) refers to py32md3xx_ll_utils.o(.text.LL_Init1msTick) for LL_Init1msTick
    main.o(.text.APP_SystemClockConfig) refers to py32md3xx_ll_utils.o(.text.LL_SetSystemCoreClock) for LL_SetSystemCoreClock
    main.o(.text.APP_SystemClockConfig) refers to main.o(.text.LL_RCC_SetAHBPrescaler) for LL_RCC_SetAHBPrescaler
    main.o(.text.APP_SystemClockConfig) refers to main.o(.text.LL_RCC_SetAPB1Prescaler) for LL_RCC_SetAPB1Prescaler
    main.o(.ARM.exidx.text.APP_SystemClockConfig) refers to main.o(.text.APP_SystemClockConfig) for [Anonymous Symbol]
    main.o(.text.NVIC_Config) refers to main.o(.text.__NVIC_SetPriority) for __NVIC_SetPriority
    main.o(.text.NVIC_Config) refers to main.o(.text.__NVIC_EnableIRQ) for __NVIC_EnableIRQ
    main.o(.ARM.exidx.text.NVIC_Config) refers to main.o(.text.NVIC_Config) for [Anonymous Symbol]
    main.o(.text.APP_GPIOConfig) refers to main.o(.text.LL_IOP_GRP1_EnableClock) for LL_IOP_GRP1_EnableClock
    main.o(.text.APP_GPIOConfig) refers to py32md3xx_ll_gpio.o(.text.LL_GPIO_Init) for LL_GPIO_Init
    main.o(.ARM.exidx.text.APP_GPIOConfig) refers to main.o(.text.APP_GPIOConfig) for [Anonymous Symbol]
    main.o(.text.APP_ADCConfig) refers to py32md3xx_ll_gpio.o(.text.LL_GPIO_Init) for LL_GPIO_Init
    main.o(.text.APP_ADCConfig) refers to main.o(.text.LL_ADC_Reset) for LL_ADC_Reset
    main.o(.text.APP_ADCConfig) refers to main.o(.text.LL_APB1_GRP2_EnableClock) for LL_APB1_GRP2_EnableClock
    main.o(.text.APP_ADCConfig) refers to main.o(.text.LL_ADC_REG_GetDMATransfer) for LL_ADC_REG_GetDMATransfer
    main.o(.text.APP_ADCConfig) refers to main.o(.text.LL_ADC_REG_SetDMATransfer) for LL_ADC_REG_SetDMATransfer
    main.o(.text.APP_ADCConfig) refers to main.o(.text.LL_ADC_StartCalibration) for LL_ADC_StartCalibration
    main.o(.text.APP_ADCConfig) refers to main.o(.text.LL_ADC_IsCalibrationOnGoing) for LL_ADC_IsCalibrationOnGoing
    main.o(.text.APP_ADCConfig) refers to py32md3xx_ll_utils.o(.text.LL_mDelay) for LL_mDelay
    main.o(.text.APP_ADCConfig) refers to main.o(.text.LL_ADC_SetCommonPathInternalCh) for LL_ADC_SetCommonPathInternalCh
    main.o(.text.APP_ADCConfig) refers to main.o(.text.LL_ADC_SetClock) for LL_ADC_SetClock
    main.o(.text.APP_ADCConfig) refers to main.o(.text.LL_ADC_SetResolution) for LL_ADC_SetResolution
    main.o(.text.APP_ADCConfig) refers to main.o(.text.LL_ADC_SetDataAlignment) for LL_ADC_SetDataAlignment
    main.o(.text.APP_ADCConfig) refers to main.o(.text.LL_ADC_SetLowPowerMode) for LL_ADC_SetLowPowerMode
    main.o(.text.APP_ADCConfig) refers to main.o(.text.LL_ADC_SetSamplingTimeCommonChannels) for LL_ADC_SetSamplingTimeCommonChannels
    main.o(.text.APP_ADCConfig) refers to main.o(.text.LL_ADC_REG_SetTriggerSource) for LL_ADC_REG_SetTriggerSource
    main.o(.text.APP_ADCConfig) refers to main.o(.text.LL_ADC_REG_SetTriggerEdge) for LL_ADC_REG_SetTriggerEdge
    main.o(.text.APP_ADCConfig) refers to main.o(.text.LL_ADC_REG_SetContinuousMode) for LL_ADC_REG_SetContinuousMode
    main.o(.text.APP_ADCConfig) refers to main.o(.text.LL_ADC_REG_SetOverrun) for LL_ADC_REG_SetOverrun
    main.o(.text.APP_ADCConfig) refers to main.o(.text.LL_ADC_REG_SetSequencerDiscont) for LL_ADC_REG_SetSequencerDiscont
    main.o(.text.APP_ADCConfig) refers to main.o(.text.LL_ADC_REG_SetSequencerChannels) for LL_ADC_REG_SetSequencerChannels
    main.o(.text.APP_ADCConfig) refers to main.o(.text.LL_ADC_Enable) for LL_ADC_Enable
    main.o(.text.APP_ADCConfig) refers to main.o(.text.LL_ADC_REG_StartConversion) for LL_ADC_REG_StartConversion
    main.o(.ARM.exidx.text.APP_ADCConfig) refers to main.o(.text.APP_ADCConfig) for [Anonymous Symbol]
    main.o(.text.APP_SPI1Config) refers to memseta.o(.text) for __aeabi_memclr4
    main.o(.text.APP_SPI1Config) refers to main.o(.text.LL_APB1_GRP2_EnableClock) for LL_APB1_GRP2_EnableClock
    main.o(.text.APP_SPI1Config) refers to main.o(.text.LL_IOP_GRP1_EnableClock) for LL_IOP_GRP1_EnableClock
    main.o(.text.APP_SPI1Config) refers to py32md3xx_ll_gpio.o(.text.LL_GPIO_Init) for LL_GPIO_Init
    main.o(.text.APP_SPI1Config) refers to main.o(.text.LL_GPIO_SetOutputPin) for LL_GPIO_SetOutputPin
    main.o(.text.APP_SPI1Config) refers to py32md3xx_ll_spi.o(.text.LL_SPI_Init) for LL_SPI_Init
    main.o(.text.APP_SPI1Config) refers to main.o(.text.LL_SPI_Enable) for LL_SPI_Enable
    main.o(.ARM.exidx.text.APP_SPI1Config) refers to main.o(.text.APP_SPI1Config) for [Anonymous Symbol]
    main.o(.text.APP_USARTConfig) refers to main.o(.text.LL_IOP_GRP1_EnableClock) for LL_IOP_GRP1_EnableClock
    main.o(.text.APP_USARTConfig) refers to main.o(.text.LL_APB1_GRP1_EnableClock) for LL_APB1_GRP1_EnableClock
    main.o(.text.APP_USARTConfig) refers to py32md3xx_ll_gpio.o(.text.LL_GPIO_Init) for LL_GPIO_Init
    main.o(.text.APP_USARTConfig) refers to py32md3xx_ll_usart.o(.text.LL_USART_Init) for LL_USART_Init
    main.o(.text.APP_USARTConfig) refers to main.o(.text.LL_USART_ConfigAsyncMode) for LL_USART_ConfigAsyncMode
    main.o(.text.APP_USARTConfig) refers to main.o(.text.APP_DMAConfig) for APP_DMAConfig
    main.o(.text.APP_USARTConfig) refers to main.o(.text.LL_USART_EnableIT_IDLE) for LL_USART_EnableIT_IDLE
    main.o(.text.APP_USARTConfig) refers to main.o(.text.LL_USART_Enable) for LL_USART_Enable
    main.o(.ARM.exidx.text.APP_USARTConfig) refers to main.o(.text.APP_USARTConfig) for [Anonymous Symbol]
    main.o(.text.APP_PWMChannelConfig) refers to main.o(.text.LL_APB1_GRP2_EnableClock) for LL_APB1_GRP2_EnableClock
    main.o(.text.APP_PWMChannelConfig) refers to main.o(.text.LL_IOP_GRP1_EnableClock) for LL_IOP_GRP1_EnableClock
    main.o(.text.APP_PWMChannelConfig) refers to py32md3xx_ll_gpio.o(.text.LL_GPIO_Init) for LL_GPIO_Init
    main.o(.text.APP_PWMChannelConfig) refers to py32md3xx_ll_tim.o(.text.LL_TIM_OC_Init) for LL_TIM_OC_Init
    main.o(.ARM.exidx.text.APP_PWMChannelConfig) refers to main.o(.text.APP_PWMChannelConfig) for [Anonymous Symbol]
    main.o(.text.APP_TIM1BaseConfig) refers to py32md3xx_ll_tim.o(.text.LL_TIM_Init) for LL_TIM_Init
    main.o(.text.APP_TIM1BaseConfig) refers to main.o(.text.LL_TIM_SetTriggerOutput) for LL_TIM_SetTriggerOutput
    main.o(.ARM.exidx.text.APP_TIM1BaseConfig) refers to main.o(.text.APP_TIM1BaseConfig) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.LL_GPIO_ResetOutputPin) refers to main.o(.text.LL_GPIO_ResetOutputPin) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.LL_TIM_EnableIT_UPDATE) refers to main.o(.text.LL_TIM_EnableIT_UPDATE) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.LL_TIM_EnableAllOutputs) refers to main.o(.text.LL_TIM_EnableAllOutputs) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.LL_TIM_EnableCounter) refers to main.o(.text.LL_TIM_EnableCounter) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.APP_ErrorHandler) refers to main.o(.text.APP_ErrorHandler) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.LL_FLASH_EnablePageProgramStart) refers to main.o(.text.LL_FLASH_EnablePageProgramStart) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.LL_RCC_HSI_Enable) refers to main.o(.text.LL_RCC_HSI_Enable) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.LL_RCC_HSI_SetCalibFreq) refers to main.o(.text.LL_RCC_HSI_SetCalibFreq) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.LL_RCC_HSI_IsReady) refers to main.o(.text.LL_RCC_HSI_IsReady) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.LL_RCC_SetAHBPrescaler) refers to main.o(.text.LL_RCC_SetAHBPrescaler) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.LL_RCC_SetAPB1Prescaler) refers to main.o(.text.LL_RCC_SetAPB1Prescaler) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.LL_IOP_GRP1_EnableClock) refers to main.o(.text.LL_IOP_GRP1_EnableClock) for [Anonymous Symbol]
    main.o(.text.LL_ADC_Reset) refers to main.o(.text.LL_APB1_GRP2_ForceReset) for LL_APB1_GRP2_ForceReset
    main.o(.text.LL_ADC_Reset) refers to main.o(.text.LL_APB1_GRP2_ReleaseReset) for LL_APB1_GRP2_ReleaseReset
    main.o(.ARM.exidx.text.LL_ADC_Reset) refers to main.o(.text.LL_ADC_Reset) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.LL_APB1_GRP2_EnableClock) refers to main.o(.text.LL_APB1_GRP2_EnableClock) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.LL_ADC_REG_GetDMATransfer) refers to main.o(.text.LL_ADC_REG_GetDMATransfer) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.LL_ADC_REG_SetDMATransfer) refers to main.o(.text.LL_ADC_REG_SetDMATransfer) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.LL_ADC_StartCalibration) refers to main.o(.text.LL_ADC_StartCalibration) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.LL_ADC_IsCalibrationOnGoing) refers to main.o(.text.LL_ADC_IsCalibrationOnGoing) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.LL_ADC_SetCommonPathInternalCh) refers to main.o(.text.LL_ADC_SetCommonPathInternalCh) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.LL_ADC_SetClock) refers to main.o(.text.LL_ADC_SetClock) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.LL_ADC_SetResolution) refers to main.o(.text.LL_ADC_SetResolution) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.LL_ADC_SetDataAlignment) refers to main.o(.text.LL_ADC_SetDataAlignment) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.LL_ADC_SetLowPowerMode) refers to main.o(.text.LL_ADC_SetLowPowerMode) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.LL_ADC_SetSamplingTimeCommonChannels) refers to main.o(.text.LL_ADC_SetSamplingTimeCommonChannels) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.LL_ADC_REG_SetTriggerSource) refers to main.o(.text.LL_ADC_REG_SetTriggerSource) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.LL_ADC_REG_SetTriggerEdge) refers to main.o(.text.LL_ADC_REG_SetTriggerEdge) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.LL_ADC_REG_SetContinuousMode) refers to main.o(.text.LL_ADC_REG_SetContinuousMode) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.LL_ADC_REG_SetOverrun) refers to main.o(.text.LL_ADC_REG_SetOverrun) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.LL_ADC_REG_SetSequencerDiscont) refers to main.o(.text.LL_ADC_REG_SetSequencerDiscont) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.LL_ADC_REG_SetSequencerChannels) refers to main.o(.text.LL_ADC_REG_SetSequencerChannels) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.LL_ADC_Enable) refers to main.o(.text.LL_ADC_Enable) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.LL_ADC_REG_StartConversion) refers to main.o(.text.LL_ADC_REG_StartConversion) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.LL_APB1_GRP2_ForceReset) refers to main.o(.text.LL_APB1_GRP2_ForceReset) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.LL_APB1_GRP2_ReleaseReset) refers to main.o(.text.LL_APB1_GRP2_ReleaseReset) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.LL_GPIO_SetOutputPin) refers to main.o(.text.LL_GPIO_SetOutputPin) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.LL_SPI_Enable) refers to main.o(.text.LL_SPI_Enable) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.LL_APB1_GRP1_EnableClock) refers to main.o(.text.LL_APB1_GRP1_EnableClock) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.LL_USART_ConfigAsyncMode) refers to main.o(.text.LL_USART_ConfigAsyncMode) for [Anonymous Symbol]
    main.o(.text.APP_DMAConfig) refers to main.o(.text.LL_AHB1_GRP1_EnableClock) for LL_AHB1_GRP1_EnableClock
    main.o(.text.APP_DMAConfig) refers to main.o(.text.LL_APB1_GRP2_EnableClock) for LL_APB1_GRP2_EnableClock
    main.o(.text.APP_DMAConfig) refers to main.o(.text.LL_DMA_ConfigTransfer) for LL_DMA_ConfigTransfer
    main.o(.text.APP_DMAConfig) refers to main.o(.text.LL_SYSCFG_SetDMARemap_CH1) for LL_SYSCFG_SetDMARemap_CH1
    main.o(.text.APP_DMAConfig) refers to main.o(.text.LL_SYSCFG_SetDMARemap_CH2) for LL_SYSCFG_SetDMARemap_CH2
    main.o(.text.APP_DMAConfig) refers to main.o(.text.LL_SYSCFG_SetDMARemap_CH3) for LL_SYSCFG_SetDMARemap_CH3
    main.o(.text.APP_DMAConfig) refers to main.o(.text.LL_DMA_SetMemoryAddress) for LL_DMA_SetMemoryAddress
    main.o(.text.APP_DMAConfig) refers to main.o(.text.LL_DMA_SetPeriphAddress) for LL_DMA_SetPeriphAddress
    main.o(.text.APP_DMAConfig) refers to main.o(.text.LL_USART_ClearFlag_ORE) for LL_USART_ClearFlag_ORE
    main.o(.text.APP_DMAConfig) refers to main.o(.text.LL_USART_ClearFlag_TC) for LL_USART_ClearFlag_TC
    main.o(.text.APP_DMAConfig) refers to main.o(.text.LL_USART_EnableDMAReq_TX) for LL_USART_EnableDMAReq_TX
    main.o(.text.APP_DMAConfig) refers to main.o(.text.LL_USART_EnableDMAReq_RX) for LL_USART_EnableDMAReq_RX
    main.o(.text.APP_DMAConfig) refers to main.o(.text.LL_DMA_SetDataLength) for LL_DMA_SetDataLength
    main.o(.text.APP_DMAConfig) refers to main.o(.text.LL_DMA_EnableChannel) for LL_DMA_EnableChannel
    main.o(.text.APP_DMAConfig) refers to main.o(.bss.motor) for motor
    main.o(.text.APP_DMAConfig) refers to py32md3xx_it.o(.bss.CommandBuffer) for CommandBuffer
    main.o(.ARM.exidx.text.APP_DMAConfig) refers to main.o(.text.APP_DMAConfig) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.LL_USART_EnableIT_IDLE) refers to main.o(.text.LL_USART_EnableIT_IDLE) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.LL_USART_Enable) refers to main.o(.text.LL_USART_Enable) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.LL_AHB1_GRP1_EnableClock) refers to main.o(.text.LL_AHB1_GRP1_EnableClock) for [Anonymous Symbol]
    main.o(.text.LL_DMA_ConfigTransfer) refers to main.o(.rodata.CHANNEL_OFFSET_TAB) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.LL_DMA_ConfigTransfer) refers to main.o(.text.LL_DMA_ConfigTransfer) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.LL_SYSCFG_SetDMARemap_CH1) refers to main.o(.text.LL_SYSCFG_SetDMARemap_CH1) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.LL_SYSCFG_SetDMARemap_CH2) refers to main.o(.text.LL_SYSCFG_SetDMARemap_CH2) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.LL_SYSCFG_SetDMARemap_CH3) refers to main.o(.text.LL_SYSCFG_SetDMARemap_CH3) for [Anonymous Symbol]
    main.o(.text.LL_DMA_SetMemoryAddress) refers to main.o(.rodata.CHANNEL_OFFSET_TAB) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.LL_DMA_SetMemoryAddress) refers to main.o(.text.LL_DMA_SetMemoryAddress) for [Anonymous Symbol]
    main.o(.text.LL_DMA_SetPeriphAddress) refers to main.o(.rodata.CHANNEL_OFFSET_TAB) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.LL_DMA_SetPeriphAddress) refers to main.o(.text.LL_DMA_SetPeriphAddress) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.LL_USART_ClearFlag_ORE) refers to main.o(.text.LL_USART_ClearFlag_ORE) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.LL_USART_ClearFlag_TC) refers to main.o(.text.LL_USART_ClearFlag_TC) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.LL_USART_EnableDMAReq_TX) refers to main.o(.text.LL_USART_EnableDMAReq_TX) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.LL_USART_EnableDMAReq_RX) refers to main.o(.text.LL_USART_EnableDMAReq_RX) for [Anonymous Symbol]
    main.o(.text.LL_DMA_SetDataLength) refers to main.o(.rodata.CHANNEL_OFFSET_TAB) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.LL_DMA_SetDataLength) refers to main.o(.text.LL_DMA_SetDataLength) for [Anonymous Symbol]
    main.o(.text.LL_DMA_EnableChannel) refers to main.o(.rodata.CHANNEL_OFFSET_TAB) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.LL_DMA_EnableChannel) refers to main.o(.text.LL_DMA_EnableChannel) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.LL_TIM_SetTriggerOutput) refers to main.o(.text.LL_TIM_SetTriggerOutput) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.__NVIC_SetPriority) refers to main.o(.text.__NVIC_SetPriority) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.__NVIC_EnableIRQ) refers to main.o(.text.__NVIC_EnableIRQ) for [Anonymous Symbol]
    py32md3xx_it.o(.ARM.exidx.text.NMI_Handler) refers to py32md3xx_it.o(.text.NMI_Handler) for [Anonymous Symbol]
    py32md3xx_it.o(.ARM.exidx.text.HardFault_Handler) refers to py32md3xx_it.o(.text.HardFault_Handler) for [Anonymous Symbol]
    py32md3xx_it.o(.ARM.exidx.text.SVC_Handler) refers to py32md3xx_it.o(.text.SVC_Handler) for [Anonymous Symbol]
    py32md3xx_it.o(.ARM.exidx.text.PendSV_Handler) refers to py32md3xx_it.o(.text.PendSV_Handler) for [Anonymous Symbol]
    py32md3xx_it.o(.ARM.exidx.text.SysTick_Handler) refers to py32md3xx_it.o(.text.SysTick_Handler) for [Anonymous Symbol]
    py32md3xx_it.o(.text.TIM1_BRK_UP_TRG_COM_IRQHandler) refers to py32md3xx_it.o(.text.LL_TIM_IsActiveFlag_UPDATE) for LL_TIM_IsActiveFlag_UPDATE
    py32md3xx_it.o(.text.TIM1_BRK_UP_TRG_COM_IRQHandler) refers to py32md3xx_it.o(.text.LL_TIM_ClearFlag_UPDATE) for LL_TIM_ClearFlag_UPDATE
    py32md3xx_it.o(.text.TIM1_BRK_UP_TRG_COM_IRQHandler) refers to foc.o(.text.Read_encoder) for Read_encoder
    py32md3xx_it.o(.text.TIM1_BRK_UP_TRG_COM_IRQHandler) refers to py32md3xx_it.o(.text.Q15_Multiply) for Q15_Multiply
    py32md3xx_it.o(.text.TIM1_BRK_UP_TRG_COM_IRQHandler) refers to py32md3xx_it.o(.text.fast_sin_q15_raw) for fast_sin_q15_raw
    py32md3xx_it.o(.text.TIM1_BRK_UP_TRG_COM_IRQHandler) refers to py32md3xx_it.o(.text.fast_cos_q15_raw) for fast_cos_q15_raw
    py32md3xx_it.o(.text.TIM1_BRK_UP_TRG_COM_IRQHandler) refers to foc.o(.text.set_PWM_level) for set_PWM_level
    py32md3xx_it.o(.text.TIM1_BRK_UP_TRG_COM_IRQHandler) refers to main.o(.bss.motor) for motor
    py32md3xx_it.o(.text.TIM1_BRK_UP_TRG_COM_IRQHandler) refers to py32md3xx_it.o(.bss.Speed_subCounter) for Speed_subCounter
    py32md3xx_it.o(.text.TIM1_BRK_UP_TRG_COM_IRQHandler) refers to py32md3xx_it.o(.bss.sign) for sign
    py32md3xx_it.o(.text.TIM1_BRK_UP_TRG_COM_IRQHandler) refers to py32md3xx_it.o(.bss.d_raw_angle) for d_raw_angle
    py32md3xx_it.o(.text.TIM1_BRK_UP_TRG_COM_IRQHandler) refers to main.o(.bss.conf) for conf
    py32md3xx_it.o(.text.TIM1_BRK_UP_TRG_COM_IRQHandler) refers to py32md3xx_it.o(.bss.position) for position
    py32md3xx_it.o(.text.TIM1_BRK_UP_TRG_COM_IRQHandler) refers to py32md3xx_it.o(.bss.speed) for speed
    py32md3xx_it.o(.text.TIM1_BRK_UP_TRG_COM_IRQHandler) refers to py32md3xx_it.o(.bss.electric_angle) for electric_angle
    py32md3xx_it.o(.ARM.exidx.text.TIM1_BRK_UP_TRG_COM_IRQHandler) refers to py32md3xx_it.o(.text.TIM1_BRK_UP_TRG_COM_IRQHandler) for [Anonymous Symbol]
    py32md3xx_it.o(.ARM.exidx.text.LL_TIM_IsActiveFlag_UPDATE) refers to py32md3xx_it.o(.text.LL_TIM_IsActiveFlag_UPDATE) for [Anonymous Symbol]
    py32md3xx_it.o(.ARM.exidx.text.LL_TIM_ClearFlag_UPDATE) refers to py32md3xx_it.o(.text.LL_TIM_ClearFlag_UPDATE) for [Anonymous Symbol]
    py32md3xx_it.o(.ARM.exidx.text.Q15_Multiply) refers to py32md3xx_it.o(.text.Q15_Multiply) for [Anonymous Symbol]
    py32md3xx_it.o(.text.fast_sin_q15_raw) refers to trig_q15_func.o(.rodata.sin_q15_table_512) for sin_q15_table_512
    py32md3xx_it.o(.ARM.exidx.text.fast_sin_q15_raw) refers to py32md3xx_it.o(.text.fast_sin_q15_raw) for [Anonymous Symbol]
    py32md3xx_it.o(.text.fast_cos_q15_raw) refers to py32md3xx_it.o(.text.fast_sin_q15_raw) for fast_sin_q15_raw
    py32md3xx_it.o(.ARM.exidx.text.fast_cos_q15_raw) refers to py32md3xx_it.o(.text.fast_cos_q15_raw) for [Anonymous Symbol]
    py32md3xx_it.o(.text.USART2_IRQHandler) refers to py32md3xx_it.o(.text.LL_USART_IsActiveFlag_IDLE) for LL_USART_IsActiveFlag_IDLE
    py32md3xx_it.o(.text.USART2_IRQHandler) refers to py32md3xx_it.o(.text.LL_USART_ClearFlag_IDLE) for LL_USART_ClearFlag_IDLE
    py32md3xx_it.o(.text.USART2_IRQHandler) refers to py32md3xx_it.o(.text.LL_DMA_DisableChannel) for LL_DMA_DisableChannel
    py32md3xx_it.o(.text.USART2_IRQHandler) refers to py32md3xx_it.o(.text.LL_TIM_DisableAllOutputs) for LL_TIM_DisableAllOutputs
    py32md3xx_it.o(.text.USART2_IRQHandler) refers to py32md3xx_it.o(.text.LL_TIM_EnableAllOutputs) for LL_TIM_EnableAllOutputs
    py32md3xx_it.o(.text.USART2_IRQHandler) refers to main.o(.text.Save_MotorConf) for Save_MotorConf
    py32md3xx_it.o(.text.USART2_IRQHandler) refers to py32md3xx_it.o(.text.Q15_Multiply) for Q15_Multiply
    py32md3xx_it.o(.text.USART2_IRQHandler) refers to foc.o(.text.Read_encoder) for Read_encoder
    py32md3xx_it.o(.text.USART2_IRQHandler) refers to foc.o(.text.setZero) for setZero
    py32md3xx_it.o(.text.USART2_IRQHandler) refers to py32md3xx_it.o(.text.LL_DMA_SetDataLength) for LL_DMA_SetDataLength
    py32md3xx_it.o(.text.USART2_IRQHandler) refers to py32md3xx_it.o(.text.LL_DMA_EnableChannel) for LL_DMA_EnableChannel
    py32md3xx_it.o(.text.USART2_IRQHandler) refers to py32md3xx_it.o(.text.LL_GPIO_TogglePin) for LL_GPIO_TogglePin
    py32md3xx_it.o(.text.USART2_IRQHandler) refers to py32md3xx_it.o(.text.LL_USART_IsActiveFlag_ORE) for LL_USART_IsActiveFlag_ORE
    py32md3xx_it.o(.text.USART2_IRQHandler) refers to py32md3xx_it.o(.text.LL_USART_ClearFlag_ORE) for LL_USART_ClearFlag_ORE
    py32md3xx_it.o(.text.USART2_IRQHandler) refers to py32md3xx_it.o(.bss.CommandBuffer) for CommandBuffer
    py32md3xx_it.o(.text.USART2_IRQHandler) refers to main.o(.bss.conf) for conf
    py32md3xx_it.o(.text.USART2_IRQHandler) refers to main.o(.bss.motor) for motor
    py32md3xx_it.o(.text.USART2_IRQHandler) refers to py32md3xx_it.o(.bss.position) for position
    py32md3xx_it.o(.text.USART2_IRQHandler) refers to py32md3xx_it.o(.bss.speed) for speed
    py32md3xx_it.o(.ARM.exidx.text.USART2_IRQHandler) refers to py32md3xx_it.o(.text.USART2_IRQHandler) for [Anonymous Symbol]
    py32md3xx_it.o(.ARM.exidx.text.LL_USART_IsActiveFlag_IDLE) refers to py32md3xx_it.o(.text.LL_USART_IsActiveFlag_IDLE) for [Anonymous Symbol]
    py32md3xx_it.o(.ARM.exidx.text.LL_USART_ClearFlag_IDLE) refers to py32md3xx_it.o(.text.LL_USART_ClearFlag_IDLE) for [Anonymous Symbol]
    py32md3xx_it.o(.text.LL_DMA_DisableChannel) refers to py32md3xx_it.o(.rodata.CHANNEL_OFFSET_TAB) for [Anonymous Symbol]
    py32md3xx_it.o(.ARM.exidx.text.LL_DMA_DisableChannel) refers to py32md3xx_it.o(.text.LL_DMA_DisableChannel) for [Anonymous Symbol]
    py32md3xx_it.o(.ARM.exidx.text.LL_TIM_DisableAllOutputs) refers to py32md3xx_it.o(.text.LL_TIM_DisableAllOutputs) for [Anonymous Symbol]
    py32md3xx_it.o(.ARM.exidx.text.LL_TIM_EnableAllOutputs) refers to py32md3xx_it.o(.text.LL_TIM_EnableAllOutputs) for [Anonymous Symbol]
    py32md3xx_it.o(.text.LL_DMA_SetDataLength) refers to py32md3xx_it.o(.rodata.CHANNEL_OFFSET_TAB) for [Anonymous Symbol]
    py32md3xx_it.o(.ARM.exidx.text.LL_DMA_SetDataLength) refers to py32md3xx_it.o(.text.LL_DMA_SetDataLength) for [Anonymous Symbol]
    py32md3xx_it.o(.text.LL_DMA_EnableChannel) refers to py32md3xx_it.o(.rodata.CHANNEL_OFFSET_TAB) for [Anonymous Symbol]
    py32md3xx_it.o(.ARM.exidx.text.LL_DMA_EnableChannel) refers to py32md3xx_it.o(.text.LL_DMA_EnableChannel) for [Anonymous Symbol]
    py32md3xx_it.o(.ARM.exidx.text.LL_GPIO_TogglePin) refers to py32md3xx_it.o(.text.LL_GPIO_TogglePin) for [Anonymous Symbol]
    py32md3xx_it.o(.ARM.exidx.text.LL_USART_IsActiveFlag_ORE) refers to py32md3xx_it.o(.text.LL_USART_IsActiveFlag_ORE) for [Anonymous Symbol]
    py32md3xx_it.o(.ARM.exidx.text.LL_USART_ClearFlag_ORE) refers to py32md3xx_it.o(.text.LL_USART_ClearFlag_ORE) for [Anonymous Symbol]
    foc.o(.text.Read_encoder) refers to foc.o(.text.LL_GPIO_ResetOutputPin) for LL_GPIO_ResetOutputPin
    foc.o(.text.Read_encoder) refers to foc.o(.text.LL_SPI_IsActiveFlag_TXE) for LL_SPI_IsActiveFlag_TXE
    foc.o(.text.Read_encoder) refers to foc.o(.text.LL_SPI_TransmitData16) for LL_SPI_TransmitData16
    foc.o(.text.Read_encoder) refers to foc.o(.text.LL_SPI_IsActiveFlag_RXNE) for LL_SPI_IsActiveFlag_RXNE
    foc.o(.text.Read_encoder) refers to foc.o(.text.LL_SPI_ReceiveData16) for LL_SPI_ReceiveData16
    foc.o(.text.Read_encoder) refers to foc.o(.text.LL_GPIO_SetOutputPin) for LL_GPIO_SetOutputPin
    foc.o(.ARM.exidx.text.Read_encoder) refers to foc.o(.text.Read_encoder) for [Anonymous Symbol]
    foc.o(.ARM.exidx.text.LL_GPIO_ResetOutputPin) refers to foc.o(.text.LL_GPIO_ResetOutputPin) for [Anonymous Symbol]
    foc.o(.ARM.exidx.text.LL_SPI_IsActiveFlag_TXE) refers to foc.o(.text.LL_SPI_IsActiveFlag_TXE) for [Anonymous Symbol]
    foc.o(.ARM.exidx.text.LL_SPI_TransmitData16) refers to foc.o(.text.LL_SPI_TransmitData16) for [Anonymous Symbol]
    foc.o(.ARM.exidx.text.LL_SPI_IsActiveFlag_RXNE) refers to foc.o(.text.LL_SPI_IsActiveFlag_RXNE) for [Anonymous Symbol]
    foc.o(.ARM.exidx.text.LL_SPI_ReceiveData16) refers to foc.o(.text.LL_SPI_ReceiveData16) for [Anonymous Symbol]
    foc.o(.ARM.exidx.text.LL_GPIO_SetOutputPin) refers to foc.o(.text.LL_GPIO_SetOutputPin) for [Anonymous Symbol]
    foc.o(.text.set_PWM_level) refers to foc.o(.text.Q15_Multiply) for Q15_Multiply
    foc.o(.text.set_PWM_level) refers to foc.o(.text.LL_TIM_OC_SetCompareCH1) for LL_TIM_OC_SetCompareCH1
    foc.o(.text.set_PWM_level) refers to foc.o(.text.LL_TIM_OC_SetCompareCH2) for LL_TIM_OC_SetCompareCH2
    foc.o(.text.set_PWM_level) refers to foc.o(.text.LL_TIM_OC_SetCompareCH3) for LL_TIM_OC_SetCompareCH3
    foc.o(.text.set_PWM_level) refers to foc.o(.bss.T1) for [Anonymous Symbol]
    foc.o(.text.set_PWM_level) refers to foc.o(.bss.T2) for [Anonymous Symbol]
    foc.o(.text.set_PWM_level) refers to foc.o(.bss.level_v) for [Anonymous Symbol]
    foc.o(.text.set_PWM_level) refers to foc.o(.bss.level_u) for [Anonymous Symbol]
    foc.o(.text.set_PWM_level) refers to foc.o(.bss.level_w) for [Anonymous Symbol]
    foc.o(.ARM.exidx.text.set_PWM_level) refers to foc.o(.text.set_PWM_level) for [Anonymous Symbol]
    foc.o(.ARM.exidx.text.LL_TIM_OC_SetCompareCH1) refers to foc.o(.text.LL_TIM_OC_SetCompareCH1) for [Anonymous Symbol]
    foc.o(.ARM.exidx.text.LL_TIM_OC_SetCompareCH2) refers to foc.o(.text.LL_TIM_OC_SetCompareCH2) for [Anonymous Symbol]
    foc.o(.ARM.exidx.text.LL_TIM_OC_SetCompareCH3) refers to foc.o(.text.LL_TIM_OC_SetCompareCH3) for [Anonymous Symbol]
    foc.o(.ARM.exidx.text.Q15_Multiply) refers to foc.o(.text.Q15_Multiply) for [Anonymous Symbol]
    foc.o(.text.setZero) refers to foc.o(.text.Read_encoder) for Read_encoder
    foc.o(.text.setZero) refers to main.o(.bss.motor) for motor
    foc.o(.text.setZero) refers to main.o(.bss.conf) for conf
    foc.o(.ARM.exidx.text.setZero) refers to foc.o(.text.setZero) for [Anonymous Symbol]
    py32md3xx_ll_utils.o(.text.LL_Init1msTick) refers to py32md3xx_ll_utils.o(.text.LL_InitTick) for LL_InitTick
    py32md3xx_ll_utils.o(.ARM.exidx.text.LL_Init1msTick) refers to py32md3xx_ll_utils.o(.text.LL_Init1msTick) for [Anonymous Symbol]
    py32md3xx_ll_utils.o(.text.LL_InitTick) refers to uidiv_div0.o(.text) for __aeabi_uidiv
    py32md3xx_ll_utils.o(.ARM.exidx.text.LL_InitTick) refers to py32md3xx_ll_utils.o(.text.LL_InitTick) for [Anonymous Symbol]
    py32md3xx_ll_utils.o(.ARM.exidx.text.LL_mDelay) refers to py32md3xx_ll_utils.o(.text.LL_mDelay) for [Anonymous Symbol]
    py32md3xx_ll_utils.o(.text.LL_SetSystemCoreClock) refers to system_py32md3xx.o(.data.SystemCoreClock) for SystemCoreClock
    py32md3xx_ll_utils.o(.ARM.exidx.text.LL_SetSystemCoreClock) refers to py32md3xx_ll_utils.o(.text.LL_SetSystemCoreClock) for [Anonymous Symbol]
    py32md3xx_ll_utils.o(.text.LL_PLL_ConfigSystemClock_HSI) refers to py32md3xx_ll_utils.o(.text.UTILS_PLL_IsBusy) for UTILS_PLL_IsBusy
    py32md3xx_ll_utils.o(.text.LL_PLL_ConfigSystemClock_HSI) refers to py32md3xx_ll_utils.o(.text.LL_RCC_HSI_GetFreq) for LL_RCC_HSI_GetFreq
    py32md3xx_ll_utils.o(.text.LL_PLL_ConfigSystemClock_HSI) refers to py32md3xx_ll_utils.o(.text.LL_RCC_HSI_IsReady) for LL_RCC_HSI_IsReady
    py32md3xx_ll_utils.o(.text.LL_PLL_ConfigSystemClock_HSI) refers to py32md3xx_ll_utils.o(.text.LL_RCC_HSI_Enable) for LL_RCC_HSI_Enable
    py32md3xx_ll_utils.o(.text.LL_PLL_ConfigSystemClock_HSI) refers to py32md3xx_ll_utils.o(.text.LL_RCC_PLL_SetMainSource) for LL_RCC_PLL_SetMainSource
    py32md3xx_ll_utils.o(.text.LL_PLL_ConfigSystemClock_HSI) refers to py32md3xx_ll_utils.o(.text.UTILS_EnablePLLAndSwitchSystem) for UTILS_EnablePLLAndSwitchSystem
    py32md3xx_ll_utils.o(.ARM.exidx.text.LL_PLL_ConfigSystemClock_HSI) refers to py32md3xx_ll_utils.o(.text.LL_PLL_ConfigSystemClock_HSI) for [Anonymous Symbol]
    py32md3xx_ll_utils.o(.text.UTILS_PLL_IsBusy) refers to py32md3xx_ll_utils.o(.text.LL_RCC_PLL_IsReady) for LL_RCC_PLL_IsReady
    py32md3xx_ll_utils.o(.ARM.exidx.text.UTILS_PLL_IsBusy) refers to py32md3xx_ll_utils.o(.text.UTILS_PLL_IsBusy) for [Anonymous Symbol]
    py32md3xx_ll_utils.o(.text.LL_RCC_HSI_GetFreq) refers to system_py32md3xx.o(.rodata.HSIFreqTable) for HSIFreqTable
    py32md3xx_ll_utils.o(.ARM.exidx.text.LL_RCC_HSI_GetFreq) refers to py32md3xx_ll_utils.o(.text.LL_RCC_HSI_GetFreq) for [Anonymous Symbol]
    py32md3xx_ll_utils.o(.ARM.exidx.text.LL_RCC_HSI_IsReady) refers to py32md3xx_ll_utils.o(.text.LL_RCC_HSI_IsReady) for [Anonymous Symbol]
    py32md3xx_ll_utils.o(.ARM.exidx.text.LL_RCC_HSI_Enable) refers to py32md3xx_ll_utils.o(.text.LL_RCC_HSI_Enable) for [Anonymous Symbol]
    py32md3xx_ll_utils.o(.ARM.exidx.text.LL_RCC_PLL_SetMainSource) refers to py32md3xx_ll_utils.o(.text.LL_RCC_PLL_SetMainSource) for [Anonymous Symbol]
    py32md3xx_ll_utils.o(.text.UTILS_EnablePLLAndSwitchSystem) refers to py32md3xx_ll_utils.o(.text.LL_SetFlashLatency) for LL_SetFlashLatency
    py32md3xx_ll_utils.o(.text.UTILS_EnablePLLAndSwitchSystem) refers to py32md3xx_ll_utils.o(.text.LL_RCC_PLL_Enable) for LL_RCC_PLL_Enable
    py32md3xx_ll_utils.o(.text.UTILS_EnablePLLAndSwitchSystem) refers to py32md3xx_ll_utils.o(.text.LL_RCC_PLL_IsReady) for LL_RCC_PLL_IsReady
    py32md3xx_ll_utils.o(.text.UTILS_EnablePLLAndSwitchSystem) refers to py32md3xx_ll_utils.o(.text.LL_RCC_SetAHBPrescaler) for LL_RCC_SetAHBPrescaler
    py32md3xx_ll_utils.o(.text.UTILS_EnablePLLAndSwitchSystem) refers to py32md3xx_ll_utils.o(.text.LL_RCC_SetSysClkSource) for LL_RCC_SetSysClkSource
    py32md3xx_ll_utils.o(.text.UTILS_EnablePLLAndSwitchSystem) refers to py32md3xx_ll_utils.o(.text.LL_RCC_GetSysClkSource) for LL_RCC_GetSysClkSource
    py32md3xx_ll_utils.o(.text.UTILS_EnablePLLAndSwitchSystem) refers to py32md3xx_ll_utils.o(.text.LL_RCC_SetAPB1Prescaler) for LL_RCC_SetAPB1Prescaler
    py32md3xx_ll_utils.o(.text.UTILS_EnablePLLAndSwitchSystem) refers to py32md3xx_ll_utils.o(.text.LL_SetSystemCoreClock) for LL_SetSystemCoreClock
    py32md3xx_ll_utils.o(.text.UTILS_EnablePLLAndSwitchSystem) refers to system_py32md3xx.o(.rodata.AHBPrescTable) for AHBPrescTable
    py32md3xx_ll_utils.o(.text.UTILS_EnablePLLAndSwitchSystem) refers to system_py32md3xx.o(.data.SystemCoreClock) for SystemCoreClock
    py32md3xx_ll_utils.o(.ARM.exidx.text.UTILS_EnablePLLAndSwitchSystem) refers to py32md3xx_ll_utils.o(.text.UTILS_EnablePLLAndSwitchSystem) for [Anonymous Symbol]
    py32md3xx_ll_utils.o(.text.LL_SetFlashLatency) refers to py32md3xx_ll_utils.o(.text.LL_FLASH_SetLatency) for LL_FLASH_SetLatency
    py32md3xx_ll_utils.o(.text.LL_SetFlashLatency) refers to py32md3xx_ll_utils.o(.text.LL_FLASH_GetLatency) for LL_FLASH_GetLatency
    py32md3xx_ll_utils.o(.ARM.exidx.text.LL_SetFlashLatency) refers to py32md3xx_ll_utils.o(.text.LL_SetFlashLatency) for [Anonymous Symbol]
    py32md3xx_ll_utils.o(.ARM.exidx.text.LL_FLASH_SetLatency) refers to py32md3xx_ll_utils.o(.text.LL_FLASH_SetLatency) for [Anonymous Symbol]
    py32md3xx_ll_utils.o(.ARM.exidx.text.LL_FLASH_GetLatency) refers to py32md3xx_ll_utils.o(.text.LL_FLASH_GetLatency) for [Anonymous Symbol]
    py32md3xx_ll_utils.o(.ARM.exidx.text.LL_RCC_PLL_IsReady) refers to py32md3xx_ll_utils.o(.text.LL_RCC_PLL_IsReady) for [Anonymous Symbol]
    py32md3xx_ll_utils.o(.ARM.exidx.text.LL_RCC_PLL_Enable) refers to py32md3xx_ll_utils.o(.text.LL_RCC_PLL_Enable) for [Anonymous Symbol]
    py32md3xx_ll_utils.o(.ARM.exidx.text.LL_RCC_SetAHBPrescaler) refers to py32md3xx_ll_utils.o(.text.LL_RCC_SetAHBPrescaler) for [Anonymous Symbol]
    py32md3xx_ll_utils.o(.ARM.exidx.text.LL_RCC_SetSysClkSource) refers to py32md3xx_ll_utils.o(.text.LL_RCC_SetSysClkSource) for [Anonymous Symbol]
    py32md3xx_ll_utils.o(.ARM.exidx.text.LL_RCC_GetSysClkSource) refers to py32md3xx_ll_utils.o(.text.LL_RCC_GetSysClkSource) for [Anonymous Symbol]
    py32md3xx_ll_utils.o(.ARM.exidx.text.LL_RCC_SetAPB1Prescaler) refers to py32md3xx_ll_utils.o(.text.LL_RCC_SetAPB1Prescaler) for [Anonymous Symbol]
    py32md3xx_ll_adc.o(.text.LL_ADC_CommonDeInit) refers to py32md3xx_ll_adc.o(.text.LL_APB1_GRP2_ForceReset) for LL_APB1_GRP2_ForceReset
    py32md3xx_ll_adc.o(.text.LL_ADC_CommonDeInit) refers to py32md3xx_ll_adc.o(.text.LL_APB1_GRP2_ReleaseReset) for LL_APB1_GRP2_ReleaseReset
    py32md3xx_ll_adc.o(.ARM.exidx.text.LL_ADC_CommonDeInit) refers to py32md3xx_ll_adc.o(.text.LL_ADC_CommonDeInit) for [Anonymous Symbol]
    py32md3xx_ll_adc.o(.ARM.exidx.text.LL_APB1_GRP2_ForceReset) refers to py32md3xx_ll_adc.o(.text.LL_APB1_GRP2_ForceReset) for [Anonymous Symbol]
    py32md3xx_ll_adc.o(.ARM.exidx.text.LL_APB1_GRP2_ReleaseReset) refers to py32md3xx_ll_adc.o(.text.LL_APB1_GRP2_ReleaseReset) for [Anonymous Symbol]
    py32md3xx_ll_adc.o(.text.LL_ADC_DeInit) refers to py32md3xx_ll_adc.o(.text.LL_ADC_IsEnabled) for LL_ADC_IsEnabled
    py32md3xx_ll_adc.o(.text.LL_ADC_DeInit) refers to py32md3xx_ll_adc.o(.text.LL_ADC_REG_SetTriggerSource) for LL_ADC_REG_SetTriggerSource
    py32md3xx_ll_adc.o(.text.LL_ADC_DeInit) refers to py32md3xx_ll_adc.o(.text.LL_ADC_REG_IsConversionOngoing) for LL_ADC_REG_IsConversionOngoing
    py32md3xx_ll_adc.o(.text.LL_ADC_DeInit) refers to py32md3xx_ll_adc.o(.text.LL_ADC_REG_IsStopConversionOngoing) for LL_ADC_REG_IsStopConversionOngoing
    py32md3xx_ll_adc.o(.text.LL_ADC_DeInit) refers to py32md3xx_ll_adc.o(.text.LL_ADC_REG_StopConversion) for LL_ADC_REG_StopConversion
    py32md3xx_ll_adc.o(.text.LL_ADC_DeInit) refers to py32md3xx_ll_adc.o(.text.LL_ADC_REG_StartConversion) for LL_ADC_REG_StartConversion
    py32md3xx_ll_adc.o(.ARM.exidx.text.LL_ADC_DeInit) refers to py32md3xx_ll_adc.o(.text.LL_ADC_DeInit) for [Anonymous Symbol]
    py32md3xx_ll_adc.o(.ARM.exidx.text.LL_ADC_IsEnabled) refers to py32md3xx_ll_adc.o(.text.LL_ADC_IsEnabled) for [Anonymous Symbol]
    py32md3xx_ll_adc.o(.ARM.exidx.text.LL_ADC_REG_SetTriggerSource) refers to py32md3xx_ll_adc.o(.text.LL_ADC_REG_SetTriggerSource) for [Anonymous Symbol]
    py32md3xx_ll_adc.o(.ARM.exidx.text.LL_ADC_REG_IsConversionOngoing) refers to py32md3xx_ll_adc.o(.text.LL_ADC_REG_IsConversionOngoing) for [Anonymous Symbol]
    py32md3xx_ll_adc.o(.ARM.exidx.text.LL_ADC_REG_IsStopConversionOngoing) refers to py32md3xx_ll_adc.o(.text.LL_ADC_REG_IsStopConversionOngoing) for [Anonymous Symbol]
    py32md3xx_ll_adc.o(.ARM.exidx.text.LL_ADC_REG_StopConversion) refers to py32md3xx_ll_adc.o(.text.LL_ADC_REG_StopConversion) for [Anonymous Symbol]
    py32md3xx_ll_adc.o(.ARM.exidx.text.LL_ADC_REG_StartConversion) refers to py32md3xx_ll_adc.o(.text.LL_ADC_REG_StartConversion) for [Anonymous Symbol]
    py32md3xx_ll_adc.o(.text.LL_ADC_Init) refers to py32md3xx_ll_adc.o(.text.LL_ADC_IsEnabled) for LL_ADC_IsEnabled
    py32md3xx_ll_adc.o(.ARM.exidx.text.LL_ADC_Init) refers to py32md3xx_ll_adc.o(.text.LL_ADC_Init) for [Anonymous Symbol]
    py32md3xx_ll_adc.o(.ARM.exidx.text.LL_ADC_StructInit) refers to py32md3xx_ll_adc.o(.text.LL_ADC_StructInit) for [Anonymous Symbol]
    py32md3xx_ll_adc.o(.text.LL_ADC_REG_Init) refers to py32md3xx_ll_adc.o(.text.LL_ADC_IsEnabled) for LL_ADC_IsEnabled
    py32md3xx_ll_adc.o(.ARM.exidx.text.LL_ADC_REG_Init) refers to py32md3xx_ll_adc.o(.text.LL_ADC_REG_Init) for [Anonymous Symbol]
    py32md3xx_ll_adc.o(.ARM.exidx.text.LL_ADC_REG_StructInit) refers to py32md3xx_ll_adc.o(.text.LL_ADC_REG_StructInit) for [Anonymous Symbol]
    py32md3xx_ll_comp.o(.text.LL_COMP_DeInit) refers to py32md3xx_ll_comp.o(.text.LL_COMP_IsLocked) for LL_COMP_IsLocked
    py32md3xx_ll_comp.o(.ARM.exidx.text.LL_COMP_DeInit) refers to py32md3xx_ll_comp.o(.text.LL_COMP_DeInit) for [Anonymous Symbol]
    py32md3xx_ll_comp.o(.ARM.exidx.text.LL_COMP_IsLocked) refers to py32md3xx_ll_comp.o(.text.LL_COMP_IsLocked) for [Anonymous Symbol]
    py32md3xx_ll_comp.o(.text.LL_COMP_Init) refers to py32md3xx_ll_comp.o(.text.LL_COMP_IsLocked) for LL_COMP_IsLocked
    py32md3xx_ll_comp.o(.ARM.exidx.text.LL_COMP_Init) refers to py32md3xx_ll_comp.o(.text.LL_COMP_Init) for [Anonymous Symbol]
    py32md3xx_ll_comp.o(.ARM.exidx.text.LL_COMP_StructInit) refers to py32md3xx_ll_comp.o(.text.LL_COMP_StructInit) for [Anonymous Symbol]
    py32md3xx_ll_crc.o(.text.LL_CRC_DeInit) refers to py32md3xx_ll_crc.o(.text.LL_CRC_ResetCRCCalculationUnit) for LL_CRC_ResetCRCCalculationUnit
    py32md3xx_ll_crc.o(.text.LL_CRC_DeInit) refers to py32md3xx_ll_crc.o(.text.LL_CRC_Write_IDR) for LL_CRC_Write_IDR
    py32md3xx_ll_crc.o(.ARM.exidx.text.LL_CRC_DeInit) refers to py32md3xx_ll_crc.o(.text.LL_CRC_DeInit) for [Anonymous Symbol]
    py32md3xx_ll_crc.o(.ARM.exidx.text.LL_CRC_ResetCRCCalculationUnit) refers to py32md3xx_ll_crc.o(.text.LL_CRC_ResetCRCCalculationUnit) for [Anonymous Symbol]
    py32md3xx_ll_crc.o(.ARM.exidx.text.LL_CRC_Write_IDR) refers to py32md3xx_ll_crc.o(.text.LL_CRC_Write_IDR) for [Anonymous Symbol]
    py32md3xx_ll_dma.o(.text.LL_DMA_DeInit) refers to py32md3xx_ll_dma.o(.text.LL_DMA_ClearFlag_GI1) for LL_DMA_ClearFlag_GI1
    py32md3xx_ll_dma.o(.text.LL_DMA_DeInit) refers to py32md3xx_ll_dma.o(.text.LL_DMA_ClearFlag_GI2) for LL_DMA_ClearFlag_GI2
    py32md3xx_ll_dma.o(.text.LL_DMA_DeInit) refers to py32md3xx_ll_dma.o(.text.LL_DMA_ClearFlag_GI3) for LL_DMA_ClearFlag_GI3
    py32md3xx_ll_dma.o(.ARM.exidx.text.LL_DMA_DeInit) refers to py32md3xx_ll_dma.o(.text.LL_DMA_DeInit) for [Anonymous Symbol]
    py32md3xx_ll_dma.o(.ARM.exidx.text.LL_DMA_ClearFlag_GI1) refers to py32md3xx_ll_dma.o(.text.LL_DMA_ClearFlag_GI1) for [Anonymous Symbol]
    py32md3xx_ll_dma.o(.ARM.exidx.text.LL_DMA_ClearFlag_GI2) refers to py32md3xx_ll_dma.o(.text.LL_DMA_ClearFlag_GI2) for [Anonymous Symbol]
    py32md3xx_ll_dma.o(.ARM.exidx.text.LL_DMA_ClearFlag_GI3) refers to py32md3xx_ll_dma.o(.text.LL_DMA_ClearFlag_GI3) for [Anonymous Symbol]
    py32md3xx_ll_dma.o(.text.LL_DMA_Init) refers to py32md3xx_ll_dma.o(.text.LL_DMA_ConfigTransfer) for LL_DMA_ConfigTransfer
    py32md3xx_ll_dma.o(.text.LL_DMA_Init) refers to py32md3xx_ll_dma.o(.text.LL_DMA_SetMemoryAddress) for LL_DMA_SetMemoryAddress
    py32md3xx_ll_dma.o(.text.LL_DMA_Init) refers to py32md3xx_ll_dma.o(.text.LL_DMA_SetPeriphAddress) for LL_DMA_SetPeriphAddress
    py32md3xx_ll_dma.o(.text.LL_DMA_Init) refers to py32md3xx_ll_dma.o(.text.LL_DMA_SetDataLength) for LL_DMA_SetDataLength
    py32md3xx_ll_dma.o(.ARM.exidx.text.LL_DMA_Init) refers to py32md3xx_ll_dma.o(.text.LL_DMA_Init) for [Anonymous Symbol]
    py32md3xx_ll_dma.o(.text.LL_DMA_ConfigTransfer) refers to py32md3xx_ll_dma.o(.rodata.CHANNEL_OFFSET_TAB) for [Anonymous Symbol]
    py32md3xx_ll_dma.o(.ARM.exidx.text.LL_DMA_ConfigTransfer) refers to py32md3xx_ll_dma.o(.text.LL_DMA_ConfigTransfer) for [Anonymous Symbol]
    py32md3xx_ll_dma.o(.text.LL_DMA_SetMemoryAddress) refers to py32md3xx_ll_dma.o(.rodata.CHANNEL_OFFSET_TAB) for [Anonymous Symbol]
    py32md3xx_ll_dma.o(.ARM.exidx.text.LL_DMA_SetMemoryAddress) refers to py32md3xx_ll_dma.o(.text.LL_DMA_SetMemoryAddress) for [Anonymous Symbol]
    py32md3xx_ll_dma.o(.text.LL_DMA_SetPeriphAddress) refers to py32md3xx_ll_dma.o(.rodata.CHANNEL_OFFSET_TAB) for [Anonymous Symbol]
    py32md3xx_ll_dma.o(.ARM.exidx.text.LL_DMA_SetPeriphAddress) refers to py32md3xx_ll_dma.o(.text.LL_DMA_SetPeriphAddress) for [Anonymous Symbol]
    py32md3xx_ll_dma.o(.text.LL_DMA_SetDataLength) refers to py32md3xx_ll_dma.o(.rodata.CHANNEL_OFFSET_TAB) for [Anonymous Symbol]
    py32md3xx_ll_dma.o(.ARM.exidx.text.LL_DMA_SetDataLength) refers to py32md3xx_ll_dma.o(.text.LL_DMA_SetDataLength) for [Anonymous Symbol]
    py32md3xx_ll_dma.o(.text.LL_DMA_StructInit) refers to memseta.o(.text) for __aeabi_memclr4
    py32md3xx_ll_dma.o(.ARM.exidx.text.LL_DMA_StructInit) refers to py32md3xx_ll_dma.o(.text.LL_DMA_StructInit) for [Anonymous Symbol]
    py32md3xx_ll_exti.o(.ARM.exidx.text.LL_EXTI_DeInit) refers to py32md3xx_ll_exti.o(.text.LL_EXTI_DeInit) for [Anonymous Symbol]
    py32md3xx_ll_exti.o(.text.LL_EXTI_Init) refers to py32md3xx_ll_exti.o(.text.LL_EXTI_DisableEvent) for LL_EXTI_DisableEvent
    py32md3xx_ll_exti.o(.text.LL_EXTI_Init) refers to py32md3xx_ll_exti.o(.text.LL_EXTI_EnableIT) for LL_EXTI_EnableIT
    py32md3xx_ll_exti.o(.text.LL_EXTI_Init) refers to py32md3xx_ll_exti.o(.text.LL_EXTI_DisableIT) for LL_EXTI_DisableIT
    py32md3xx_ll_exti.o(.text.LL_EXTI_Init) refers to py32md3xx_ll_exti.o(.text.LL_EXTI_EnableEvent) for LL_EXTI_EnableEvent
    py32md3xx_ll_exti.o(.text.LL_EXTI_Init) refers to py32md3xx_ll_exti.o(.text.LL_EXTI_DisableFallingTrig) for LL_EXTI_DisableFallingTrig
    py32md3xx_ll_exti.o(.text.LL_EXTI_Init) refers to py32md3xx_ll_exti.o(.text.LL_EXTI_EnableRisingTrig) for LL_EXTI_EnableRisingTrig
    py32md3xx_ll_exti.o(.text.LL_EXTI_Init) refers to py32md3xx_ll_exti.o(.text.LL_EXTI_DisableRisingTrig) for LL_EXTI_DisableRisingTrig
    py32md3xx_ll_exti.o(.text.LL_EXTI_Init) refers to py32md3xx_ll_exti.o(.text.LL_EXTI_EnableFallingTrig) for LL_EXTI_EnableFallingTrig
    py32md3xx_ll_exti.o(.ARM.exidx.text.LL_EXTI_Init) refers to py32md3xx_ll_exti.o(.text.LL_EXTI_Init) for [Anonymous Symbol]
    py32md3xx_ll_exti.o(.ARM.exidx.text.LL_EXTI_DisableEvent) refers to py32md3xx_ll_exti.o(.text.LL_EXTI_DisableEvent) for [Anonymous Symbol]
    py32md3xx_ll_exti.o(.ARM.exidx.text.LL_EXTI_EnableIT) refers to py32md3xx_ll_exti.o(.text.LL_EXTI_EnableIT) for [Anonymous Symbol]
    py32md3xx_ll_exti.o(.ARM.exidx.text.LL_EXTI_DisableIT) refers to py32md3xx_ll_exti.o(.text.LL_EXTI_DisableIT) for [Anonymous Symbol]
    py32md3xx_ll_exti.o(.ARM.exidx.text.LL_EXTI_EnableEvent) refers to py32md3xx_ll_exti.o(.text.LL_EXTI_EnableEvent) for [Anonymous Symbol]
    py32md3xx_ll_exti.o(.ARM.exidx.text.LL_EXTI_DisableFallingTrig) refers to py32md3xx_ll_exti.o(.text.LL_EXTI_DisableFallingTrig) for [Anonymous Symbol]
    py32md3xx_ll_exti.o(.ARM.exidx.text.LL_EXTI_EnableRisingTrig) refers to py32md3xx_ll_exti.o(.text.LL_EXTI_EnableRisingTrig) for [Anonymous Symbol]
    py32md3xx_ll_exti.o(.ARM.exidx.text.LL_EXTI_DisableRisingTrig) refers to py32md3xx_ll_exti.o(.text.LL_EXTI_DisableRisingTrig) for [Anonymous Symbol]
    py32md3xx_ll_exti.o(.ARM.exidx.text.LL_EXTI_EnableFallingTrig) refers to py32md3xx_ll_exti.o(.text.LL_EXTI_EnableFallingTrig) for [Anonymous Symbol]
    py32md3xx_ll_exti.o(.ARM.exidx.text.LL_EXTI_StructInit) refers to py32md3xx_ll_exti.o(.text.LL_EXTI_StructInit) for [Anonymous Symbol]
    py32md3xx_ll_gpio.o(.text.LL_GPIO_DeInit) refers to py32md3xx_ll_gpio.o(.text.LL_IOP_GRP1_ForceReset) for LL_IOP_GRP1_ForceReset
    py32md3xx_ll_gpio.o(.text.LL_GPIO_DeInit) refers to py32md3xx_ll_gpio.o(.text.LL_IOP_GRP1_ReleaseReset) for LL_IOP_GRP1_ReleaseReset
    py32md3xx_ll_gpio.o(.ARM.exidx.text.LL_GPIO_DeInit) refers to py32md3xx_ll_gpio.o(.text.LL_GPIO_DeInit) for [Anonymous Symbol]
    py32md3xx_ll_gpio.o(.ARM.exidx.text.LL_IOP_GRP1_ForceReset) refers to py32md3xx_ll_gpio.o(.text.LL_IOP_GRP1_ForceReset) for [Anonymous Symbol]
    py32md3xx_ll_gpio.o(.ARM.exidx.text.LL_IOP_GRP1_ReleaseReset) refers to py32md3xx_ll_gpio.o(.text.LL_IOP_GRP1_ReleaseReset) for [Anonymous Symbol]
    py32md3xx_ll_gpio.o(.text.LL_GPIO_Init) refers to py32md3xx_ll_gpio.o(.text.LL_GPIO_SetAFPin_8_15) for LL_GPIO_SetAFPin_8_15
    py32md3xx_ll_gpio.o(.text.LL_GPIO_Init) refers to py32md3xx_ll_gpio.o(.text.LL_GPIO_SetPinMode) for LL_GPIO_SetPinMode
    py32md3xx_ll_gpio.o(.text.LL_GPIO_Init) refers to py32md3xx_ll_gpio.o(.text.LL_GPIO_SetPinSpeed) for LL_GPIO_SetPinSpeed
    py32md3xx_ll_gpio.o(.text.LL_GPIO_Init) refers to py32md3xx_ll_gpio.o(.text.LL_GPIO_SetPinPull) for LL_GPIO_SetPinPull
    py32md3xx_ll_gpio.o(.text.LL_GPIO_Init) refers to py32md3xx_ll_gpio.o(.text.LL_GPIO_SetAFPin_0_7) for LL_GPIO_SetAFPin_0_7
    py32md3xx_ll_gpio.o(.text.LL_GPIO_Init) refers to py32md3xx_ll_gpio.o(.text.LL_GPIO_SetPinOutputType) for LL_GPIO_SetPinOutputType
    py32md3xx_ll_gpio.o(.ARM.exidx.text.LL_GPIO_Init) refers to py32md3xx_ll_gpio.o(.text.LL_GPIO_Init) for [Anonymous Symbol]
    py32md3xx_ll_gpio.o(.ARM.exidx.text.LL_GPIO_SetPinMode) refers to py32md3xx_ll_gpio.o(.text.LL_GPIO_SetPinMode) for [Anonymous Symbol]
    py32md3xx_ll_gpio.o(.ARM.exidx.text.LL_GPIO_SetPinSpeed) refers to py32md3xx_ll_gpio.o(.text.LL_GPIO_SetPinSpeed) for [Anonymous Symbol]
    py32md3xx_ll_gpio.o(.ARM.exidx.text.LL_GPIO_SetPinPull) refers to py32md3xx_ll_gpio.o(.text.LL_GPIO_SetPinPull) for [Anonymous Symbol]
    py32md3xx_ll_gpio.o(.ARM.exidx.text.LL_GPIO_SetAFPin_0_7) refers to py32md3xx_ll_gpio.o(.text.LL_GPIO_SetAFPin_0_7) for [Anonymous Symbol]
    py32md3xx_ll_gpio.o(.ARM.exidx.text.LL_GPIO_SetAFPin_8_15) refers to py32md3xx_ll_gpio.o(.text.LL_GPIO_SetAFPin_8_15) for [Anonymous Symbol]
    py32md3xx_ll_gpio.o(.ARM.exidx.text.LL_GPIO_SetPinOutputType) refers to py32md3xx_ll_gpio.o(.text.LL_GPIO_SetPinOutputType) for [Anonymous Symbol]
    py32md3xx_ll_gpio.o(.ARM.exidx.text.LL_GPIO_StructInit) refers to py32md3xx_ll_gpio.o(.text.LL_GPIO_StructInit) for [Anonymous Symbol]
    py32md3xx_ll_i2c.o(.text.LL_I2C_DeInit) refers to py32md3xx_ll_i2c.o(.text.LL_APB1_GRP1_ForceReset) for LL_APB1_GRP1_ForceReset
    py32md3xx_ll_i2c.o(.text.LL_I2C_DeInit) refers to py32md3xx_ll_i2c.o(.text.LL_APB1_GRP1_ReleaseReset) for LL_APB1_GRP1_ReleaseReset
    py32md3xx_ll_i2c.o(.ARM.exidx.text.LL_I2C_DeInit) refers to py32md3xx_ll_i2c.o(.text.LL_I2C_DeInit) for [Anonymous Symbol]
    py32md3xx_ll_i2c.o(.ARM.exidx.text.LL_APB1_GRP1_ForceReset) refers to py32md3xx_ll_i2c.o(.text.LL_APB1_GRP1_ForceReset) for [Anonymous Symbol]
    py32md3xx_ll_i2c.o(.ARM.exidx.text.LL_APB1_GRP1_ReleaseReset) refers to py32md3xx_ll_i2c.o(.text.LL_APB1_GRP1_ReleaseReset) for [Anonymous Symbol]
    py32md3xx_ll_i2c.o(.text.LL_I2C_Init) refers to py32md3xx_ll_i2c.o(.text.LL_I2C_Disable) for LL_I2C_Disable
    py32md3xx_ll_i2c.o(.text.LL_I2C_Init) refers to py32md3xx_ll_rcc.o(.text.LL_RCC_GetSystemClocksFreq) for LL_RCC_GetSystemClocksFreq
    py32md3xx_ll_i2c.o(.text.LL_I2C_Init) refers to py32md3xx_ll_i2c.o(.text.LL_I2C_ConfigSpeed) for LL_I2C_ConfigSpeed
    py32md3xx_ll_i2c.o(.text.LL_I2C_Init) refers to py32md3xx_ll_i2c.o(.text.LL_I2C_SetOwnAddress1) for LL_I2C_SetOwnAddress1
    py32md3xx_ll_i2c.o(.text.LL_I2C_Init) refers to py32md3xx_ll_i2c.o(.text.LL_I2C_Enable) for LL_I2C_Enable
    py32md3xx_ll_i2c.o(.text.LL_I2C_Init) refers to py32md3xx_ll_i2c.o(.text.LL_I2C_AcknowledgeNextData) for LL_I2C_AcknowledgeNextData
    py32md3xx_ll_i2c.o(.ARM.exidx.text.LL_I2C_Init) refers to py32md3xx_ll_i2c.o(.text.LL_I2C_Init) for [Anonymous Symbol]
    py32md3xx_ll_i2c.o(.ARM.exidx.text.LL_I2C_Disable) refers to py32md3xx_ll_i2c.o(.text.LL_I2C_Disable) for [Anonymous Symbol]
    py32md3xx_ll_i2c.o(.text.LL_I2C_ConfigSpeed) refers to uidiv_div0.o(.text) for __aeabi_uidiv
    py32md3xx_ll_i2c.o(.ARM.exidx.text.LL_I2C_ConfigSpeed) refers to py32md3xx_ll_i2c.o(.text.LL_I2C_ConfigSpeed) for [Anonymous Symbol]
    py32md3xx_ll_i2c.o(.ARM.exidx.text.LL_I2C_SetOwnAddress1) refers to py32md3xx_ll_i2c.o(.text.LL_I2C_SetOwnAddress1) for [Anonymous Symbol]
    py32md3xx_ll_i2c.o(.ARM.exidx.text.LL_I2C_Enable) refers to py32md3xx_ll_i2c.o(.text.LL_I2C_Enable) for [Anonymous Symbol]
    py32md3xx_ll_i2c.o(.ARM.exidx.text.LL_I2C_AcknowledgeNextData) refers to py32md3xx_ll_i2c.o(.text.LL_I2C_AcknowledgeNextData) for [Anonymous Symbol]
    py32md3xx_ll_i2c.o(.ARM.exidx.text.LL_I2C_StructInit) refers to py32md3xx_ll_i2c.o(.text.LL_I2C_StructInit) for [Anonymous Symbol]
    py32md3xx_ll_lptim.o(.text.LL_LPTIM_DeInit) refers to py32md3xx_ll_lptim.o(.text.LL_APB1_GRP1_ForceReset) for LL_APB1_GRP1_ForceReset
    py32md3xx_ll_lptim.o(.text.LL_LPTIM_DeInit) refers to py32md3xx_ll_lptim.o(.text.LL_APB1_GRP1_ReleaseReset) for LL_APB1_GRP1_ReleaseReset
    py32md3xx_ll_lptim.o(.ARM.exidx.text.LL_LPTIM_DeInit) refers to py32md3xx_ll_lptim.o(.text.LL_LPTIM_DeInit) for [Anonymous Symbol]
    py32md3xx_ll_lptim.o(.ARM.exidx.text.LL_APB1_GRP1_ForceReset) refers to py32md3xx_ll_lptim.o(.text.LL_APB1_GRP1_ForceReset) for [Anonymous Symbol]
    py32md3xx_ll_lptim.o(.ARM.exidx.text.LL_APB1_GRP1_ReleaseReset) refers to py32md3xx_ll_lptim.o(.text.LL_APB1_GRP1_ReleaseReset) for [Anonymous Symbol]
    py32md3xx_ll_lptim.o(.ARM.exidx.text.LL_LPTIM_StructInit) refers to py32md3xx_ll_lptim.o(.text.LL_LPTIM_StructInit) for [Anonymous Symbol]
    py32md3xx_ll_lptim.o(.text.LL_LPTIM_Init) refers to py32md3xx_ll_lptim.o(.text.LL_LPTIM_IsEnabled) for LL_LPTIM_IsEnabled
    py32md3xx_ll_lptim.o(.ARM.exidx.text.LL_LPTIM_Init) refers to py32md3xx_ll_lptim.o(.text.LL_LPTIM_Init) for [Anonymous Symbol]
    py32md3xx_ll_lptim.o(.ARM.exidx.text.LL_LPTIM_IsEnabled) refers to py32md3xx_ll_lptim.o(.text.LL_LPTIM_IsEnabled) for [Anonymous Symbol]
    py32md3xx_ll_pwr.o(.text.LL_PWR_DeInit) refers to py32md3xx_ll_pwr.o(.text.LL_APB1_GRP1_ForceReset) for LL_APB1_GRP1_ForceReset
    py32md3xx_ll_pwr.o(.text.LL_PWR_DeInit) refers to py32md3xx_ll_pwr.o(.text.LL_APB1_GRP1_ReleaseReset) for LL_APB1_GRP1_ReleaseReset
    py32md3xx_ll_pwr.o(.ARM.exidx.text.LL_PWR_DeInit) refers to py32md3xx_ll_pwr.o(.text.LL_PWR_DeInit) for [Anonymous Symbol]
    py32md3xx_ll_pwr.o(.ARM.exidx.text.LL_APB1_GRP1_ForceReset) refers to py32md3xx_ll_pwr.o(.text.LL_APB1_GRP1_ForceReset) for [Anonymous Symbol]
    py32md3xx_ll_pwr.o(.ARM.exidx.text.LL_APB1_GRP1_ReleaseReset) refers to py32md3xx_ll_pwr.o(.text.LL_APB1_GRP1_ReleaseReset) for [Anonymous Symbol]
    py32md3xx_ll_rcc.o(.text.LL_RCC_DeInit) refers to py32md3xx_ll_rcc.o(.text.LL_RCC_HSI_Enable) for LL_RCC_HSI_Enable
    py32md3xx_ll_rcc.o(.text.LL_RCC_DeInit) refers to py32md3xx_ll_rcc.o(.text.LL_RCC_HSI_IsReady) for LL_RCC_HSI_IsReady
    py32md3xx_ll_rcc.o(.text.LL_RCC_DeInit) refers to py32md3xx_ll_rcc.o(.text.LL_RCC_HSI_SetCalibFreq) for LL_RCC_HSI_SetCalibFreq
    py32md3xx_ll_rcc.o(.text.LL_RCC_DeInit) refers to py32md3xx_ll_rcc.o(.text.LL_RCC_GetSysClkSource) for LL_RCC_GetSysClkSource
    py32md3xx_ll_rcc.o(.text.LL_RCC_DeInit) refers to py32md3xx_ll_rcc.o(.text.LL_RCC_PLL_IsReady) for LL_RCC_PLL_IsReady
    py32md3xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_DeInit) refers to py32md3xx_ll_rcc.o(.text.LL_RCC_DeInit) for [Anonymous Symbol]
    py32md3xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_HSI_Enable) refers to py32md3xx_ll_rcc.o(.text.LL_RCC_HSI_Enable) for [Anonymous Symbol]
    py32md3xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_HSI_IsReady) refers to py32md3xx_ll_rcc.o(.text.LL_RCC_HSI_IsReady) for [Anonymous Symbol]
    py32md3xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_HSI_SetCalibFreq) refers to py32md3xx_ll_rcc.o(.text.LL_RCC_HSI_SetCalibFreq) for [Anonymous Symbol]
    py32md3xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetSysClkSource) refers to py32md3xx_ll_rcc.o(.text.LL_RCC_GetSysClkSource) for [Anonymous Symbol]
    py32md3xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_PLL_IsReady) refers to py32md3xx_ll_rcc.o(.text.LL_RCC_PLL_IsReady) for [Anonymous Symbol]
    py32md3xx_ll_rcc.o(.text.LL_RCC_GetSystemClocksFreq) refers to py32md3xx_ll_rcc.o(.text.RCC_GetSystemClockFreq) for RCC_GetSystemClockFreq
    py32md3xx_ll_rcc.o(.text.LL_RCC_GetSystemClocksFreq) refers to py32md3xx_ll_rcc.o(.text.RCC_GetHCLKClockFreq) for RCC_GetHCLKClockFreq
    py32md3xx_ll_rcc.o(.text.LL_RCC_GetSystemClocksFreq) refers to py32md3xx_ll_rcc.o(.text.RCC_GetPCLK1ClockFreq) for RCC_GetPCLK1ClockFreq
    py32md3xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetSystemClocksFreq) refers to py32md3xx_ll_rcc.o(.text.LL_RCC_GetSystemClocksFreq) for [Anonymous Symbol]
    py32md3xx_ll_rcc.o(.text.RCC_GetSystemClockFreq) refers to py32md3xx_ll_rcc.o(.text.LL_RCC_GetSysClkSource) for LL_RCC_GetSysClkSource
    py32md3xx_ll_rcc.o(.text.RCC_GetSystemClockFreq) refers to py32md3xx_ll_rcc.o(.text.RCC_PLL_GetFreqDomain_SYS) for RCC_PLL_GetFreqDomain_SYS
    py32md3xx_ll_rcc.o(.text.RCC_GetSystemClockFreq) refers to py32md3xx_ll_rcc.o(.text.LL_RCC_GetHSIDiv) for LL_RCC_GetHSIDiv
    py32md3xx_ll_rcc.o(.text.RCC_GetSystemClockFreq) refers to system_py32md3xx.o(.rodata.HSIFreqTable) for HSIFreqTable
    py32md3xx_ll_rcc.o(.ARM.exidx.text.RCC_GetSystemClockFreq) refers to py32md3xx_ll_rcc.o(.text.RCC_GetSystemClockFreq) for [Anonymous Symbol]
    py32md3xx_ll_rcc.o(.text.RCC_GetHCLKClockFreq) refers to py32md3xx_ll_rcc.o(.text.LL_RCC_GetAHBPrescaler) for LL_RCC_GetAHBPrescaler
    py32md3xx_ll_rcc.o(.text.RCC_GetHCLKClockFreq) refers to system_py32md3xx.o(.rodata.AHBPrescTable) for AHBPrescTable
    py32md3xx_ll_rcc.o(.ARM.exidx.text.RCC_GetHCLKClockFreq) refers to py32md3xx_ll_rcc.o(.text.RCC_GetHCLKClockFreq) for [Anonymous Symbol]
    py32md3xx_ll_rcc.o(.text.RCC_GetPCLK1ClockFreq) refers to py32md3xx_ll_rcc.o(.text.LL_RCC_GetAPB1Prescaler) for LL_RCC_GetAPB1Prescaler
    py32md3xx_ll_rcc.o(.text.RCC_GetPCLK1ClockFreq) refers to system_py32md3xx.o(.rodata.APBPrescTable) for APBPrescTable
    py32md3xx_ll_rcc.o(.ARM.exidx.text.RCC_GetPCLK1ClockFreq) refers to py32md3xx_ll_rcc.o(.text.RCC_GetPCLK1ClockFreq) for [Anonymous Symbol]
    py32md3xx_ll_rcc.o(.text.LL_RCC_GetMCOClockFreq) refers to py32md3xx_ll_rcc.o(.text.LL_RCC_GetMCOClockSource) for LL_RCC_GetMCOClockSource
    py32md3xx_ll_rcc.o(.text.LL_RCC_GetMCOClockFreq) refers to py32md3xx_ll_rcc.o(.text.LL_RCC_HSI_GetFreq) for LL_RCC_HSI_GetFreq
    py32md3xx_ll_rcc.o(.text.LL_RCC_GetMCOClockFreq) refers to py32md3xx_ll_rcc.o(.text.RCC_PLL_GetFreqDomain_SYS) for RCC_PLL_GetFreqDomain_SYS
    py32md3xx_ll_rcc.o(.text.LL_RCC_GetMCOClockFreq) refers to py32md3xx_ll_rcc.o(.text.LL_RCC_LSI_IsReady) for LL_RCC_LSI_IsReady
    py32md3xx_ll_rcc.o(.text.LL_RCC_GetMCOClockFreq) refers to py32md3xx_ll_rcc.o(.text.LL_RCC_GetMCODiv) for LL_RCC_GetMCODiv
    py32md3xx_ll_rcc.o(.text.LL_RCC_GetMCOClockFreq) refers to system_py32md3xx.o(.data.SystemCoreClock) for SystemCoreClock
    py32md3xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetMCOClockFreq) refers to py32md3xx_ll_rcc.o(.text.LL_RCC_GetMCOClockFreq) for [Anonymous Symbol]
    py32md3xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetMCOClockSource) refers to py32md3xx_ll_rcc.o(.text.LL_RCC_GetMCOClockSource) for [Anonymous Symbol]
    py32md3xx_ll_rcc.o(.text.LL_RCC_HSI_GetFreq) refers to system_py32md3xx.o(.rodata.HSIFreqTable) for HSIFreqTable
    py32md3xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_HSI_GetFreq) refers to py32md3xx_ll_rcc.o(.text.LL_RCC_HSI_GetFreq) for [Anonymous Symbol]
    py32md3xx_ll_rcc.o(.text.RCC_PLL_GetFreqDomain_SYS) refers to py32md3xx_ll_rcc.o(.text.LL_RCC_PLL_GetMainSource) for LL_RCC_PLL_GetMainSource
    py32md3xx_ll_rcc.o(.text.RCC_PLL_GetFreqDomain_SYS) refers to py32md3xx_ll_rcc.o(.text.LL_RCC_HSI_GetFreq) for LL_RCC_HSI_GetFreq
    py32md3xx_ll_rcc.o(.ARM.exidx.text.RCC_PLL_GetFreqDomain_SYS) refers to py32md3xx_ll_rcc.o(.text.RCC_PLL_GetFreqDomain_SYS) for [Anonymous Symbol]
    py32md3xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_LSI_IsReady) refers to py32md3xx_ll_rcc.o(.text.LL_RCC_LSI_IsReady) for [Anonymous Symbol]
    py32md3xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetMCODiv) refers to py32md3xx_ll_rcc.o(.text.LL_RCC_GetMCODiv) for [Anonymous Symbol]
    py32md3xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetLSCClockFreq) refers to py32md3xx_ll_rcc.o(.text.LL_RCC_GetLSCClockFreq) for [Anonymous Symbol]
    py32md3xx_ll_rcc.o(.text.LL_RCC_GetPVDClockFreq) refers to py32md3xx_ll_rcc.o(.text.LL_RCC_GetPVDClockSource) for LL_RCC_GetPVDClockSource
    py32md3xx_ll_rcc.o(.text.LL_RCC_GetPVDClockFreq) refers to py32md3xx_ll_rcc.o(.text.RCC_GetSystemClockFreq) for RCC_GetSystemClockFreq
    py32md3xx_ll_rcc.o(.text.LL_RCC_GetPVDClockFreq) refers to py32md3xx_ll_rcc.o(.text.RCC_GetHCLKClockFreq) for RCC_GetHCLKClockFreq
    py32md3xx_ll_rcc.o(.text.LL_RCC_GetPVDClockFreq) refers to py32md3xx_ll_rcc.o(.text.RCC_GetPCLK1ClockFreq) for RCC_GetPCLK1ClockFreq
    py32md3xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetPVDClockFreq) refers to py32md3xx_ll_rcc.o(.text.LL_RCC_GetPVDClockFreq) for [Anonymous Symbol]
    py32md3xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetPVDClockSource) refers to py32md3xx_ll_rcc.o(.text.LL_RCC_GetPVDClockSource) for [Anonymous Symbol]
    py32md3xx_ll_rcc.o(.text.LL_RCC_GetCOMPClockFreq) refers to py32md3xx_ll_rcc.o(.text.LL_RCC_GetCOMPClockSource) for LL_RCC_GetCOMPClockSource
    py32md3xx_ll_rcc.o(.text.LL_RCC_GetCOMPClockFreq) refers to py32md3xx_ll_rcc.o(.text.RCC_GetSystemClockFreq) for RCC_GetSystemClockFreq
    py32md3xx_ll_rcc.o(.text.LL_RCC_GetCOMPClockFreq) refers to py32md3xx_ll_rcc.o(.text.RCC_GetHCLKClockFreq) for RCC_GetHCLKClockFreq
    py32md3xx_ll_rcc.o(.text.LL_RCC_GetCOMPClockFreq) refers to py32md3xx_ll_rcc.o(.text.RCC_GetPCLK1ClockFreq) for RCC_GetPCLK1ClockFreq
    py32md3xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetCOMPClockFreq) refers to py32md3xx_ll_rcc.o(.text.LL_RCC_GetCOMPClockFreq) for [Anonymous Symbol]
    py32md3xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetCOMPClockSource) refers to py32md3xx_ll_rcc.o(.text.LL_RCC_GetCOMPClockSource) for [Anonymous Symbol]
    py32md3xx_ll_rcc.o(.text.LL_RCC_GetLPTIMClockFreq) refers to py32md3xx_ll_rcc.o(.text.LL_RCC_GetLPTIMClockSource) for LL_RCC_GetLPTIMClockSource
    py32md3xx_ll_rcc.o(.text.LL_RCC_GetLPTIMClockFreq) refers to py32md3xx_ll_rcc.o(.text.LL_RCC_LSI_IsReady) for LL_RCC_LSI_IsReady
    py32md3xx_ll_rcc.o(.text.LL_RCC_GetLPTIMClockFreq) refers to py32md3xx_ll_rcc.o(.text.RCC_GetSystemClockFreq) for RCC_GetSystemClockFreq
    py32md3xx_ll_rcc.o(.text.LL_RCC_GetLPTIMClockFreq) refers to py32md3xx_ll_rcc.o(.text.RCC_GetHCLKClockFreq) for RCC_GetHCLKClockFreq
    py32md3xx_ll_rcc.o(.text.LL_RCC_GetLPTIMClockFreq) refers to py32md3xx_ll_rcc.o(.text.RCC_GetPCLK1ClockFreq) for RCC_GetPCLK1ClockFreq
    py32md3xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetLPTIMClockFreq) refers to py32md3xx_ll_rcc.o(.text.LL_RCC_GetLPTIMClockFreq) for [Anonymous Symbol]
    py32md3xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetLPTIMClockSource) refers to py32md3xx_ll_rcc.o(.text.LL_RCC_GetLPTIMClockSource) for [Anonymous Symbol]
    py32md3xx_ll_rcc.o(.text.LL_RCC_GetRTCClockFreq) refers to py32md3xx_ll_rcc.o(.text.LL_RCC_GetRTCClockSource) for LL_RCC_GetRTCClockSource
    py32md3xx_ll_rcc.o(.text.LL_RCC_GetRTCClockFreq) refers to py32md3xx_ll_rcc.o(.text.LL_RCC_LSI_IsReady) for LL_RCC_LSI_IsReady
    py32md3xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetRTCClockFreq) refers to py32md3xx_ll_rcc.o(.text.LL_RCC_GetRTCClockFreq) for [Anonymous Symbol]
    py32md3xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetRTCClockSource) refers to py32md3xx_ll_rcc.o(.text.LL_RCC_GetRTCClockSource) for [Anonymous Symbol]
    py32md3xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetHSIDiv) refers to py32md3xx_ll_rcc.o(.text.LL_RCC_GetHSIDiv) for [Anonymous Symbol]
    py32md3xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetAHBPrescaler) refers to py32md3xx_ll_rcc.o(.text.LL_RCC_GetAHBPrescaler) for [Anonymous Symbol]
    py32md3xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetAPB1Prescaler) refers to py32md3xx_ll_rcc.o(.text.LL_RCC_GetAPB1Prescaler) for [Anonymous Symbol]
    py32md3xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_PLL_GetMainSource) refers to py32md3xx_ll_rcc.o(.text.LL_RCC_PLL_GetMainSource) for [Anonymous Symbol]
    py32md3xx_ll_rtc.o(.text.LL_RTC_DeInit) refers to py32md3xx_ll_rtc.o(.text.LL_RTC_DisableWriteProtection) for LL_RTC_DisableWriteProtection
    py32md3xx_ll_rtc.o(.text.LL_RTC_DeInit) refers to py32md3xx_ll_rtc.o(.text.LL_RTC_EnterInitMode) for LL_RTC_EnterInitMode
    py32md3xx_ll_rtc.o(.text.LL_RTC_DeInit) refers to py32md3xx_ll_rtc.o(.text.LL_RTC_ExitInitMode) for LL_RTC_ExitInitMode
    py32md3xx_ll_rtc.o(.text.LL_RTC_DeInit) refers to py32md3xx_ll_rtc.o(.text.LL_RTC_WaitForSynchro) for LL_RTC_WaitForSynchro
    py32md3xx_ll_rtc.o(.text.LL_RTC_DeInit) refers to py32md3xx_ll_rtc.o(.text.LL_RTC_ClearFlag_RS) for LL_RTC_ClearFlag_RS
    py32md3xx_ll_rtc.o(.text.LL_RTC_DeInit) refers to py32md3xx_ll_rtc.o(.text.LL_RTC_EnableWriteProtection) for LL_RTC_EnableWriteProtection
    py32md3xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_DeInit) refers to py32md3xx_ll_rtc.o(.text.LL_RTC_DeInit) for [Anonymous Symbol]
    py32md3xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_DisableWriteProtection) refers to py32md3xx_ll_rtc.o(.text.LL_RTC_DisableWriteProtection) for [Anonymous Symbol]
    py32md3xx_ll_rtc.o(.text.LL_RTC_EnterInitMode) refers to py32md3xx_ll_rtc.o(.text.LL_RTC_IsActiveFlag_RTOF) for LL_RTC_IsActiveFlag_RTOF
    py32md3xx_ll_rtc.o(.text.LL_RTC_EnterInitMode) refers to py32md3xx_ll_rtc.o(.text.LL_SYSTICK_IsActiveCounterFlag) for LL_SYSTICK_IsActiveCounterFlag
    py32md3xx_ll_rtc.o(.text.LL_RTC_EnterInitMode) refers to py32md3xx_ll_rtc.o(.text.LL_RTC_DisableWriteProtection) for LL_RTC_DisableWriteProtection
    py32md3xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_EnterInitMode) refers to py32md3xx_ll_rtc.o(.text.LL_RTC_EnterInitMode) for [Anonymous Symbol]
    py32md3xx_ll_rtc.o(.text.LL_RTC_ExitInitMode) refers to py32md3xx_ll_rtc.o(.text.LL_RTC_EnableWriteProtection) for LL_RTC_EnableWriteProtection
    py32md3xx_ll_rtc.o(.text.LL_RTC_ExitInitMode) refers to py32md3xx_ll_rtc.o(.text.LL_RTC_IsActiveFlag_RTOF) for LL_RTC_IsActiveFlag_RTOF
    py32md3xx_ll_rtc.o(.text.LL_RTC_ExitInitMode) refers to py32md3xx_ll_rtc.o(.text.LL_SYSTICK_IsActiveCounterFlag) for LL_SYSTICK_IsActiveCounterFlag
    py32md3xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_ExitInitMode) refers to py32md3xx_ll_rtc.o(.text.LL_RTC_ExitInitMode) for [Anonymous Symbol]
    py32md3xx_ll_rtc.o(.text.LL_RTC_WaitForSynchro) refers to py32md3xx_ll_rtc.o(.text.LL_RTC_ClearFlag_RS) for LL_RTC_ClearFlag_RS
    py32md3xx_ll_rtc.o(.text.LL_RTC_WaitForSynchro) refers to py32md3xx_ll_rtc.o(.text.LL_RTC_IsActiveFlag_RS) for LL_RTC_IsActiveFlag_RS
    py32md3xx_ll_rtc.o(.text.LL_RTC_WaitForSynchro) refers to py32md3xx_ll_rtc.o(.text.LL_SYSTICK_IsActiveCounterFlag) for LL_SYSTICK_IsActiveCounterFlag
    py32md3xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_WaitForSynchro) refers to py32md3xx_ll_rtc.o(.text.LL_RTC_WaitForSynchro) for [Anonymous Symbol]
    py32md3xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_ClearFlag_RS) refers to py32md3xx_ll_rtc.o(.text.LL_RTC_ClearFlag_RS) for [Anonymous Symbol]
    py32md3xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_EnableWriteProtection) refers to py32md3xx_ll_rtc.o(.text.LL_RTC_EnableWriteProtection) for [Anonymous Symbol]
    py32md3xx_ll_rtc.o(.text.LL_RTC_Init) refers to py32md3xx_ll_rtc.o(.text.LL_RTC_WaitForSynchro) for LL_RTC_WaitForSynchro
    py32md3xx_ll_rtc.o(.text.LL_RTC_Init) refers to py32md3xx_ll_rtc.o(.text.LL_RTC_EnterInitMode) for LL_RTC_EnterInitMode
    py32md3xx_ll_rtc.o(.text.LL_RTC_Init) refers to py32md3xx_ll_rtc.o(.text.LL_RTC_ClearFlag_ALR) for LL_RTC_ClearFlag_ALR
    py32md3xx_ll_rtc.o(.text.LL_RTC_Init) refers to py32md3xx_ll_rtc.o(.text.LL_RTC_ClearFlag_OW) for LL_RTC_ClearFlag_OW
    py32md3xx_ll_rtc.o(.text.LL_RTC_Init) refers to py32md3xx_ll_rtc.o(.text.LL_RTC_ClearFlag_SEC) for LL_RTC_ClearFlag_SEC
    py32md3xx_ll_rtc.o(.text.LL_RTC_Init) refers to py32md3xx_ll_rtc.o(.text.LL_RTC_SetOutputSource) for LL_RTC_SetOutputSource
    py32md3xx_ll_rtc.o(.text.LL_RTC_Init) refers to py32md3xx_ll_rtc.o(.text.LL_RTC_SetAsynchPrescaler) for LL_RTC_SetAsynchPrescaler
    py32md3xx_ll_rtc.o(.text.LL_RTC_Init) refers to py32md3xx_ll_rtc.o(.text.LL_RTC_ExitInitMode) for LL_RTC_ExitInitMode
    py32md3xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_Init) refers to py32md3xx_ll_rtc.o(.text.LL_RTC_Init) for [Anonymous Symbol]
    py32md3xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_ClearFlag_ALR) refers to py32md3xx_ll_rtc.o(.text.LL_RTC_ClearFlag_ALR) for [Anonymous Symbol]
    py32md3xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_ClearFlag_OW) refers to py32md3xx_ll_rtc.o(.text.LL_RTC_ClearFlag_OW) for [Anonymous Symbol]
    py32md3xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_ClearFlag_SEC) refers to py32md3xx_ll_rtc.o(.text.LL_RTC_ClearFlag_SEC) for [Anonymous Symbol]
    py32md3xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_SetOutputSource) refers to py32md3xx_ll_rtc.o(.text.LL_RTC_SetOutputSource) for [Anonymous Symbol]
    py32md3xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_SetAsynchPrescaler) refers to py32md3xx_ll_rtc.o(.text.LL_RTC_SetAsynchPrescaler) for [Anonymous Symbol]
    py32md3xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_StructInit) refers to py32md3xx_ll_rtc.o(.text.LL_RTC_StructInit) for [Anonymous Symbol]
    py32md3xx_ll_rtc.o(.text.LL_RTC_TIME_Init) refers to py32md3xx_ll_rtc.o(.text.LL_RTC_EnterInitMode) for LL_RTC_EnterInitMode
    py32md3xx_ll_rtc.o(.text.LL_RTC_TIME_Init) refers to py32md3xx_ll_rtc.o(.text.LL_RTC_TIME_Set) for LL_RTC_TIME_Set
    py32md3xx_ll_rtc.o(.text.LL_RTC_TIME_Init) refers to py32md3xx_ll_rtc.o(.text.LL_RTC_ExitInitMode) for LL_RTC_ExitInitMode
    py32md3xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_TIME_Init) refers to py32md3xx_ll_rtc.o(.text.LL_RTC_TIME_Init) for [Anonymous Symbol]
    py32md3xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_TIME_Set) refers to py32md3xx_ll_rtc.o(.text.LL_RTC_TIME_Set) for [Anonymous Symbol]
    py32md3xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_TIME_StructInit) refers to py32md3xx_ll_rtc.o(.text.LL_RTC_TIME_StructInit) for [Anonymous Symbol]
    py32md3xx_ll_rtc.o(.text.LL_RTC_ALARM_Init) refers to py32md3xx_ll_rtc.o(.text.LL_RTC_EnterInitMode) for LL_RTC_EnterInitMode
    py32md3xx_ll_rtc.o(.text.LL_RTC_ALARM_Init) refers to py32md3xx_ll_rtc.o(.text.LL_RTC_ALARM_Set) for LL_RTC_ALARM_Set
    py32md3xx_ll_rtc.o(.text.LL_RTC_ALARM_Init) refers to py32md3xx_ll_rtc.o(.text.LL_RTC_ExitInitMode) for LL_RTC_ExitInitMode
    py32md3xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_ALARM_Init) refers to py32md3xx_ll_rtc.o(.text.LL_RTC_ALARM_Init) for [Anonymous Symbol]
    py32md3xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_ALARM_Set) refers to py32md3xx_ll_rtc.o(.text.LL_RTC_ALARM_Set) for [Anonymous Symbol]
    py32md3xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_ALARM_StructInit) refers to py32md3xx_ll_rtc.o(.text.LL_RTC_ALARM_StructInit) for [Anonymous Symbol]
    py32md3xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_IsActiveFlag_RTOF) refers to py32md3xx_ll_rtc.o(.text.LL_RTC_IsActiveFlag_RTOF) for [Anonymous Symbol]
    py32md3xx_ll_rtc.o(.ARM.exidx.text.LL_SYSTICK_IsActiveCounterFlag) refers to py32md3xx_ll_rtc.o(.text.LL_SYSTICK_IsActiveCounterFlag) for [Anonymous Symbol]
    py32md3xx_ll_rtc.o(.text.LL_RTC_TIME_SetCounter) refers to py32md3xx_ll_rtc.o(.text.LL_RTC_EnterInitMode) for LL_RTC_EnterInitMode
    py32md3xx_ll_rtc.o(.text.LL_RTC_TIME_SetCounter) refers to py32md3xx_ll_rtc.o(.text.LL_RTC_TIME_Set) for LL_RTC_TIME_Set
    py32md3xx_ll_rtc.o(.text.LL_RTC_TIME_SetCounter) refers to py32md3xx_ll_rtc.o(.text.LL_RTC_ExitInitMode) for LL_RTC_ExitInitMode
    py32md3xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_TIME_SetCounter) refers to py32md3xx_ll_rtc.o(.text.LL_RTC_TIME_SetCounter) for [Anonymous Symbol]
    py32md3xx_ll_rtc.o(.text.LL_RTC_ALARM_SetCounter) refers to py32md3xx_ll_rtc.o(.text.LL_RTC_EnterInitMode) for LL_RTC_EnterInitMode
    py32md3xx_ll_rtc.o(.text.LL_RTC_ALARM_SetCounter) refers to py32md3xx_ll_rtc.o(.text.LL_RTC_ALARM_Set) for LL_RTC_ALARM_Set
    py32md3xx_ll_rtc.o(.text.LL_RTC_ALARM_SetCounter) refers to py32md3xx_ll_rtc.o(.text.LL_RTC_ExitInitMode) for LL_RTC_ExitInitMode
    py32md3xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_ALARM_SetCounter) refers to py32md3xx_ll_rtc.o(.text.LL_RTC_ALARM_SetCounter) for [Anonymous Symbol]
    py32md3xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_IsActiveFlag_RS) refers to py32md3xx_ll_rtc.o(.text.LL_RTC_IsActiveFlag_RS) for [Anonymous Symbol]
    py32md3xx_ll_spi.o(.text.LL_SPI_DeInit) refers to py32md3xx_ll_spi.o(.text.LL_APB1_GRP2_ForceReset) for LL_APB1_GRP2_ForceReset
    py32md3xx_ll_spi.o(.text.LL_SPI_DeInit) refers to py32md3xx_ll_spi.o(.text.LL_APB1_GRP2_ReleaseReset) for LL_APB1_GRP2_ReleaseReset
    py32md3xx_ll_spi.o(.text.LL_SPI_DeInit) refers to py32md3xx_ll_spi.o(.text.LL_APB1_GRP1_ForceReset) for LL_APB1_GRP1_ForceReset
    py32md3xx_ll_spi.o(.text.LL_SPI_DeInit) refers to py32md3xx_ll_spi.o(.text.LL_APB1_GRP1_ReleaseReset) for LL_APB1_GRP1_ReleaseReset
    py32md3xx_ll_spi.o(.ARM.exidx.text.LL_SPI_DeInit) refers to py32md3xx_ll_spi.o(.text.LL_SPI_DeInit) for [Anonymous Symbol]
    py32md3xx_ll_spi.o(.ARM.exidx.text.LL_APB1_GRP2_ForceReset) refers to py32md3xx_ll_spi.o(.text.LL_APB1_GRP2_ForceReset) for [Anonymous Symbol]
    py32md3xx_ll_spi.o(.ARM.exidx.text.LL_APB1_GRP2_ReleaseReset) refers to py32md3xx_ll_spi.o(.text.LL_APB1_GRP2_ReleaseReset) for [Anonymous Symbol]
    py32md3xx_ll_spi.o(.ARM.exidx.text.LL_APB1_GRP1_ForceReset) refers to py32md3xx_ll_spi.o(.text.LL_APB1_GRP1_ForceReset) for [Anonymous Symbol]
    py32md3xx_ll_spi.o(.ARM.exidx.text.LL_APB1_GRP1_ReleaseReset) refers to py32md3xx_ll_spi.o(.text.LL_APB1_GRP1_ReleaseReset) for [Anonymous Symbol]
    py32md3xx_ll_spi.o(.text.LL_SPI_Init) refers to py32md3xx_ll_spi.o(.text.LL_SPI_IsEnabled) for LL_SPI_IsEnabled
    py32md3xx_ll_spi.o(.text.LL_SPI_Init) refers to py32md3xx_ll_spi.o(.text.LL_SPI_SetRxFIFOThreshold) for LL_SPI_SetRxFIFOThreshold
    py32md3xx_ll_spi.o(.ARM.exidx.text.LL_SPI_Init) refers to py32md3xx_ll_spi.o(.text.LL_SPI_Init) for [Anonymous Symbol]
    py32md3xx_ll_spi.o(.ARM.exidx.text.LL_SPI_IsEnabled) refers to py32md3xx_ll_spi.o(.text.LL_SPI_IsEnabled) for [Anonymous Symbol]
    py32md3xx_ll_spi.o(.ARM.exidx.text.LL_SPI_SetRxFIFOThreshold) refers to py32md3xx_ll_spi.o(.text.LL_SPI_SetRxFIFOThreshold) for [Anonymous Symbol]
    py32md3xx_ll_spi.o(.text.LL_SPI_StructInit) refers to memseta.o(.text) for __aeabi_memclr4
    py32md3xx_ll_spi.o(.ARM.exidx.text.LL_SPI_StructInit) refers to py32md3xx_ll_spi.o(.text.LL_SPI_StructInit) for [Anonymous Symbol]
    py32md3xx_ll_tim.o(.text.LL_TIM_DeInit) refers to py32md3xx_ll_tim.o(.text.LL_APB1_GRP2_ForceReset) for LL_APB1_GRP2_ForceReset
    py32md3xx_ll_tim.o(.text.LL_TIM_DeInit) refers to py32md3xx_ll_tim.o(.text.LL_APB1_GRP2_ReleaseReset) for LL_APB1_GRP2_ReleaseReset
    py32md3xx_ll_tim.o(.text.LL_TIM_DeInit) refers to py32md3xx_ll_tim.o(.text.LL_APB1_GRP1_ForceReset) for LL_APB1_GRP1_ForceReset
    py32md3xx_ll_tim.o(.text.LL_TIM_DeInit) refers to py32md3xx_ll_tim.o(.text.LL_APB1_GRP1_ReleaseReset) for LL_APB1_GRP1_ReleaseReset
    py32md3xx_ll_tim.o(.ARM.exidx.text.LL_TIM_DeInit) refers to py32md3xx_ll_tim.o(.text.LL_TIM_DeInit) for [Anonymous Symbol]
    py32md3xx_ll_tim.o(.ARM.exidx.text.LL_APB1_GRP2_ForceReset) refers to py32md3xx_ll_tim.o(.text.LL_APB1_GRP2_ForceReset) for [Anonymous Symbol]
    py32md3xx_ll_tim.o(.ARM.exidx.text.LL_APB1_GRP2_ReleaseReset) refers to py32md3xx_ll_tim.o(.text.LL_APB1_GRP2_ReleaseReset) for [Anonymous Symbol]
    py32md3xx_ll_tim.o(.ARM.exidx.text.LL_APB1_GRP1_ForceReset) refers to py32md3xx_ll_tim.o(.text.LL_APB1_GRP1_ForceReset) for [Anonymous Symbol]
    py32md3xx_ll_tim.o(.ARM.exidx.text.LL_APB1_GRP1_ReleaseReset) refers to py32md3xx_ll_tim.o(.text.LL_APB1_GRP1_ReleaseReset) for [Anonymous Symbol]
    py32md3xx_ll_tim.o(.ARM.exidx.text.LL_TIM_StructInit) refers to py32md3xx_ll_tim.o(.text.LL_TIM_StructInit) for [Anonymous Symbol]
    py32md3xx_ll_tim.o(.text.LL_TIM_Init) refers to py32md3xx_ll_tim.o(.text.LL_TIM_SetAutoReload) for LL_TIM_SetAutoReload
    py32md3xx_ll_tim.o(.text.LL_TIM_Init) refers to py32md3xx_ll_tim.o(.text.LL_TIM_SetPrescaler) for LL_TIM_SetPrescaler
    py32md3xx_ll_tim.o(.text.LL_TIM_Init) refers to py32md3xx_ll_tim.o(.text.LL_TIM_SetRepetitionCounter) for LL_TIM_SetRepetitionCounter
    py32md3xx_ll_tim.o(.text.LL_TIM_Init) refers to py32md3xx_ll_tim.o(.text.LL_TIM_GenerateEvent_UPDATE) for LL_TIM_GenerateEvent_UPDATE
    py32md3xx_ll_tim.o(.ARM.exidx.text.LL_TIM_Init) refers to py32md3xx_ll_tim.o(.text.LL_TIM_Init) for [Anonymous Symbol]
    py32md3xx_ll_tim.o(.ARM.exidx.text.LL_TIM_SetAutoReload) refers to py32md3xx_ll_tim.o(.text.LL_TIM_SetAutoReload) for [Anonymous Symbol]
    py32md3xx_ll_tim.o(.ARM.exidx.text.LL_TIM_SetPrescaler) refers to py32md3xx_ll_tim.o(.text.LL_TIM_SetPrescaler) for [Anonymous Symbol]
    py32md3xx_ll_tim.o(.ARM.exidx.text.LL_TIM_SetRepetitionCounter) refers to py32md3xx_ll_tim.o(.text.LL_TIM_SetRepetitionCounter) for [Anonymous Symbol]
    py32md3xx_ll_tim.o(.ARM.exidx.text.LL_TIM_GenerateEvent_UPDATE) refers to py32md3xx_ll_tim.o(.text.LL_TIM_GenerateEvent_UPDATE) for [Anonymous Symbol]
    py32md3xx_ll_tim.o(.ARM.exidx.text.LL_TIM_OC_StructInit) refers to py32md3xx_ll_tim.o(.text.LL_TIM_OC_StructInit) for [Anonymous Symbol]
    py32md3xx_ll_tim.o(.text.LL_TIM_OC_Init) refers to py32md3xx_ll_tim.o(.text.OC2Config) for OC2Config
    py32md3xx_ll_tim.o(.text.LL_TIM_OC_Init) refers to py32md3xx_ll_tim.o(.text.OC4Config) for OC4Config
    py32md3xx_ll_tim.o(.text.LL_TIM_OC_Init) refers to py32md3xx_ll_tim.o(.text.OC1Config) for OC1Config
    py32md3xx_ll_tim.o(.text.LL_TIM_OC_Init) refers to py32md3xx_ll_tim.o(.text.OC3Config) for OC3Config
    py32md3xx_ll_tim.o(.ARM.exidx.text.LL_TIM_OC_Init) refers to py32md3xx_ll_tim.o(.text.LL_TIM_OC_Init) for [Anonymous Symbol]
    py32md3xx_ll_tim.o(.text.OC1Config) refers to py32md3xx_ll_tim.o(.text.LL_TIM_OC_SetCompareCH1) for LL_TIM_OC_SetCompareCH1
    py32md3xx_ll_tim.o(.ARM.exidx.text.OC1Config) refers to py32md3xx_ll_tim.o(.text.OC1Config) for [Anonymous Symbol]
    py32md3xx_ll_tim.o(.text.OC2Config) refers to py32md3xx_ll_tim.o(.text.LL_TIM_OC_SetCompareCH2) for LL_TIM_OC_SetCompareCH2
    py32md3xx_ll_tim.o(.ARM.exidx.text.OC2Config) refers to py32md3xx_ll_tim.o(.text.OC2Config) for [Anonymous Symbol]
    py32md3xx_ll_tim.o(.text.OC3Config) refers to py32md3xx_ll_tim.o(.text.LL_TIM_OC_SetCompareCH3) for LL_TIM_OC_SetCompareCH3
    py32md3xx_ll_tim.o(.ARM.exidx.text.OC3Config) refers to py32md3xx_ll_tim.o(.text.OC3Config) for [Anonymous Symbol]
    py32md3xx_ll_tim.o(.text.OC4Config) refers to py32md3xx_ll_tim.o(.text.LL_TIM_OC_SetCompareCH4) for LL_TIM_OC_SetCompareCH4
    py32md3xx_ll_tim.o(.ARM.exidx.text.OC4Config) refers to py32md3xx_ll_tim.o(.text.OC4Config) for [Anonymous Symbol]
    py32md3xx_ll_tim.o(.ARM.exidx.text.LL_TIM_IC_StructInit) refers to py32md3xx_ll_tim.o(.text.LL_TIM_IC_StructInit) for [Anonymous Symbol]
    py32md3xx_ll_tim.o(.text.LL_TIM_IC_Init) refers to py32md3xx_ll_tim.o(.text.IC2Config) for IC2Config
    py32md3xx_ll_tim.o(.text.LL_TIM_IC_Init) refers to py32md3xx_ll_tim.o(.text.IC4Config) for IC4Config
    py32md3xx_ll_tim.o(.text.LL_TIM_IC_Init) refers to py32md3xx_ll_tim.o(.text.IC1Config) for IC1Config
    py32md3xx_ll_tim.o(.text.LL_TIM_IC_Init) refers to py32md3xx_ll_tim.o(.text.IC3Config) for IC3Config
    py32md3xx_ll_tim.o(.ARM.exidx.text.LL_TIM_IC_Init) refers to py32md3xx_ll_tim.o(.text.LL_TIM_IC_Init) for [Anonymous Symbol]
    py32md3xx_ll_tim.o(.ARM.exidx.text.IC1Config) refers to py32md3xx_ll_tim.o(.text.IC1Config) for [Anonymous Symbol]
    py32md3xx_ll_tim.o(.ARM.exidx.text.IC2Config) refers to py32md3xx_ll_tim.o(.text.IC2Config) for [Anonymous Symbol]
    py32md3xx_ll_tim.o(.ARM.exidx.text.IC3Config) refers to py32md3xx_ll_tim.o(.text.IC3Config) for [Anonymous Symbol]
    py32md3xx_ll_tim.o(.ARM.exidx.text.IC4Config) refers to py32md3xx_ll_tim.o(.text.IC4Config) for [Anonymous Symbol]
    py32md3xx_ll_tim.o(.ARM.exidx.text.LL_TIM_ENCODER_StructInit) refers to py32md3xx_ll_tim.o(.text.LL_TIM_ENCODER_StructInit) for [Anonymous Symbol]
    py32md3xx_ll_tim.o(.text.LL_TIM_ENCODER_Init) refers to py32md3xx_ll_tim.o(.text.LL_TIM_SetEncoderMode) for LL_TIM_SetEncoderMode
    py32md3xx_ll_tim.o(.ARM.exidx.text.LL_TIM_ENCODER_Init) refers to py32md3xx_ll_tim.o(.text.LL_TIM_ENCODER_Init) for [Anonymous Symbol]
    py32md3xx_ll_tim.o(.ARM.exidx.text.LL_TIM_SetEncoderMode) refers to py32md3xx_ll_tim.o(.text.LL_TIM_SetEncoderMode) for [Anonymous Symbol]
    py32md3xx_ll_tim.o(.ARM.exidx.text.LL_TIM_HALLSENSOR_StructInit) refers to py32md3xx_ll_tim.o(.text.LL_TIM_HALLSENSOR_StructInit) for [Anonymous Symbol]
    py32md3xx_ll_tim.o(.text.LL_TIM_HALLSENSOR_Init) refers to py32md3xx_ll_tim.o(.text.LL_TIM_OC_SetCompareCH2) for LL_TIM_OC_SetCompareCH2
    py32md3xx_ll_tim.o(.ARM.exidx.text.LL_TIM_HALLSENSOR_Init) refers to py32md3xx_ll_tim.o(.text.LL_TIM_HALLSENSOR_Init) for [Anonymous Symbol]
    py32md3xx_ll_tim.o(.ARM.exidx.text.LL_TIM_OC_SetCompareCH2) refers to py32md3xx_ll_tim.o(.text.LL_TIM_OC_SetCompareCH2) for [Anonymous Symbol]
    py32md3xx_ll_tim.o(.ARM.exidx.text.LL_TIM_BDTR_StructInit) refers to py32md3xx_ll_tim.o(.text.LL_TIM_BDTR_StructInit) for [Anonymous Symbol]
    py32md3xx_ll_tim.o(.ARM.exidx.text.LL_TIM_BDTR_Init) refers to py32md3xx_ll_tim.o(.text.LL_TIM_BDTR_Init) for [Anonymous Symbol]
    py32md3xx_ll_tim.o(.ARM.exidx.text.LL_TIM_OC_SetCompareCH1) refers to py32md3xx_ll_tim.o(.text.LL_TIM_OC_SetCompareCH1) for [Anonymous Symbol]
    py32md3xx_ll_tim.o(.ARM.exidx.text.LL_TIM_OC_SetCompareCH3) refers to py32md3xx_ll_tim.o(.text.LL_TIM_OC_SetCompareCH3) for [Anonymous Symbol]
    py32md3xx_ll_tim.o(.ARM.exidx.text.LL_TIM_OC_SetCompareCH4) refers to py32md3xx_ll_tim.o(.text.LL_TIM_OC_SetCompareCH4) for [Anonymous Symbol]
    py32md3xx_ll_usart.o(.text.LL_USART_DeInit) refers to py32md3xx_ll_usart.o(.text.LL_APB1_GRP2_ForceReset) for LL_APB1_GRP2_ForceReset
    py32md3xx_ll_usart.o(.text.LL_USART_DeInit) refers to py32md3xx_ll_usart.o(.text.LL_APB1_GRP2_ReleaseReset) for LL_APB1_GRP2_ReleaseReset
    py32md3xx_ll_usart.o(.text.LL_USART_DeInit) refers to py32md3xx_ll_usart.o(.text.LL_APB1_GRP1_ForceReset) for LL_APB1_GRP1_ForceReset
    py32md3xx_ll_usart.o(.text.LL_USART_DeInit) refers to py32md3xx_ll_usart.o(.text.LL_APB1_GRP1_ReleaseReset) for LL_APB1_GRP1_ReleaseReset
    py32md3xx_ll_usart.o(.ARM.exidx.text.LL_USART_DeInit) refers to py32md3xx_ll_usart.o(.text.LL_USART_DeInit) for [Anonymous Symbol]
    py32md3xx_ll_usart.o(.ARM.exidx.text.LL_APB1_GRP2_ForceReset) refers to py32md3xx_ll_usart.o(.text.LL_APB1_GRP2_ForceReset) for [Anonymous Symbol]
    py32md3xx_ll_usart.o(.ARM.exidx.text.LL_APB1_GRP2_ReleaseReset) refers to py32md3xx_ll_usart.o(.text.LL_APB1_GRP2_ReleaseReset) for [Anonymous Symbol]
    py32md3xx_ll_usart.o(.ARM.exidx.text.LL_APB1_GRP1_ForceReset) refers to py32md3xx_ll_usart.o(.text.LL_APB1_GRP1_ForceReset) for [Anonymous Symbol]
    py32md3xx_ll_usart.o(.ARM.exidx.text.LL_APB1_GRP1_ReleaseReset) refers to py32md3xx_ll_usart.o(.text.LL_APB1_GRP1_ReleaseReset) for [Anonymous Symbol]
    py32md3xx_ll_usart.o(.text.LL_USART_Init) refers to py32md3xx_ll_usart.o(.text.LL_USART_IsEnabled) for LL_USART_IsEnabled
    py32md3xx_ll_usart.o(.text.LL_USART_Init) refers to py32md3xx_ll_usart.o(.text.LL_USART_SetStopBitsLength) for LL_USART_SetStopBitsLength
    py32md3xx_ll_usart.o(.text.LL_USART_Init) refers to py32md3xx_ll_usart.o(.text.LL_USART_SetHWFlowCtrl) for LL_USART_SetHWFlowCtrl
    py32md3xx_ll_usart.o(.text.LL_USART_Init) refers to py32md3xx_ll_rcc.o(.text.LL_RCC_GetSystemClocksFreq) for LL_RCC_GetSystemClocksFreq
    py32md3xx_ll_usart.o(.text.LL_USART_Init) refers to py32md3xx_ll_usart.o(.text.LL_USART_SetBaudRate) for LL_USART_SetBaudRate
    py32md3xx_ll_usart.o(.ARM.exidx.text.LL_USART_Init) refers to py32md3xx_ll_usart.o(.text.LL_USART_Init) for [Anonymous Symbol]
    py32md3xx_ll_usart.o(.ARM.exidx.text.LL_USART_IsEnabled) refers to py32md3xx_ll_usart.o(.text.LL_USART_IsEnabled) for [Anonymous Symbol]
    py32md3xx_ll_usart.o(.ARM.exidx.text.LL_USART_SetStopBitsLength) refers to py32md3xx_ll_usart.o(.text.LL_USART_SetStopBitsLength) for [Anonymous Symbol]
    py32md3xx_ll_usart.o(.ARM.exidx.text.LL_USART_SetHWFlowCtrl) refers to py32md3xx_ll_usart.o(.text.LL_USART_SetHWFlowCtrl) for [Anonymous Symbol]
    py32md3xx_ll_usart.o(.text.LL_USART_SetBaudRate) refers to uidiv_div0.o(.text) for __aeabi_uidiv
    py32md3xx_ll_usart.o(.ARM.exidx.text.LL_USART_SetBaudRate) refers to py32md3xx_ll_usart.o(.text.LL_USART_SetBaudRate) for [Anonymous Symbol]
    py32md3xx_ll_usart.o(.ARM.exidx.text.LL_USART_StructInit) refers to py32md3xx_ll_usart.o(.text.LL_USART_StructInit) for [Anonymous Symbol]
    py32md3xx_ll_usart.o(.text.LL_USART_ClockInit) refers to py32md3xx_ll_usart.o(.text.LL_USART_IsEnabled) for LL_USART_IsEnabled
    py32md3xx_ll_usart.o(.text.LL_USART_ClockInit) refers to py32md3xx_ll_usart.o(.text.LL_USART_DisableSCLKOutput) for LL_USART_DisableSCLKOutput
    py32md3xx_ll_usart.o(.ARM.exidx.text.LL_USART_ClockInit) refers to py32md3xx_ll_usart.o(.text.LL_USART_ClockInit) for [Anonymous Symbol]
    py32md3xx_ll_usart.o(.ARM.exidx.text.LL_USART_DisableSCLKOutput) refers to py32md3xx_ll_usart.o(.text.LL_USART_DisableSCLKOutput) for [Anonymous Symbol]
    py32md3xx_ll_usart.o(.ARM.exidx.text.LL_USART_ClockStructInit) refers to py32md3xx_ll_usart.o(.text.LL_USART_ClockStructInit) for [Anonymous Symbol]
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry10a.o(.ARM.Collect$$$$0000000D) for __rt_final_cpp
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry11a.o(.ARM.Collect$$$$0000000F) for __rt_final_exit
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry7b.o(.ARM.Collect$$$$00000008) for _main_clock
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry8b.o(.ARM.Collect$$$$0000000A) for _main_cpp_init
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry9a.o(.ARM.Collect$$$$0000000B) for _main_init
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry5.o(.ARM.Collect$$$$00000004) for _main_scatterload
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry2.o(.ARM.Collect$$$$00000001) for _main_stk
    entry2.o(.ARM.Collect$$$$00000001) refers to entry2.o(.ARM.Collect$$$$00002712) for __lit__00000000
    entry2.o(.ARM.Collect$$$$00002712) refers to startup_py32md320xx.o(STACK) for __initial_sp
    entry2.o(__vectab_stack_and_reset_area) refers to startup_py32md320xx.o(STACK) for __initial_sp
    entry2.o(__vectab_stack_and_reset_area) refers to entry.o(.ARM.Collect$$$$00000000) for __main
    entry5.o(.ARM.Collect$$$$00000004) refers to init.o(.text) for __scatterload
    entry9a.o(.ARM.Collect$$$$0000000B) refers to system_py32md3xx.o(.text.$Sub$$main) for main
    entry9b.o(.ARM.Collect$$$$0000000C) refers to system_py32md3xx.o(.text.$Sub$$main) for main
    idiv_div0.o(.text) refers to uidiv_div0.o(.text) for __aeabi_uidivmod
    init.o(.text) refers to entry5.o(.ARM.Collect$$$$00000004) for __main_after_scatterload


==============================================================================

Removing Unused input sections from the image.

    Removing system_py32md3xx.o(.text), (0 bytes).
    Removing system_py32md3xx.o(.text.SystemCoreClockUpdate), (112 bytes).
    Removing system_py32md3xx.o(.ARM.exidx.text.SystemCoreClockUpdate), (8 bytes).
    Removing system_py32md3xx.o(.ARM.exidx.text.SystemInit), (8 bytes).
    Removing system_py32md3xx.o(.ARM.exidx.text.$Sub$$main), (8 bytes).
    Removing startup_py32md320xx.o(HEAP), (0 bytes).
    Removing main.o(.text), (0 bytes).
    Removing main.o(.ARM.exidx.text.Save_MotorConf), (8 bytes).
    Removing main.o(.ARM.exidx.text.LL_FLASH_Unlock), (8 bytes).
    Removing main.o(.ARM.exidx.text.LL_FLASH_IsActiveFlag_BUSY), (8 bytes).
    Removing main.o(.ARM.exidx.text.LL_FLASH_EnableIT_EOP), (8 bytes).
    Removing main.o(.ARM.exidx.text.LL_FLASH_EnablePageErase), (8 bytes).
    Removing main.o(.ARM.exidx.text.LL_FLASH_SetEraseAddress), (8 bytes).
    Removing main.o(.ARM.exidx.text.LL_FLASH_IsActiveFlag_EOP), (8 bytes).
    Removing main.o(.ARM.exidx.text.LL_FLASH_ClearFlag_EOP), (8 bytes).
    Removing main.o(.ARM.exidx.text.LL_FLASH_DisableIT_EOP), (8 bytes).
    Removing main.o(.ARM.exidx.text.LL_FLASH_DisablePageErase), (8 bytes).
    Removing main.o(.ARM.exidx.text.LL_FLASH_EnablePageProgram), (8 bytes).
    Removing main.o(.ARM.exidx.text.LL_FLASH_PageProgram), (8 bytes).
    Removing main.o(.ARM.exidx.text.LL_FLASH_DisablePageProgram), (8 bytes).
    Removing main.o(.ARM.exidx.text.LL_FLASH_Lock), (8 bytes).
    Removing main.o(.ARM.exidx.text.Load_MotorConf), (8 bytes).
    Removing main.o(.ARM.exidx.text.main), (8 bytes).
    Removing main.o(.ARM.exidx.text.APP_SystemClockConfig), (8 bytes).
    Removing main.o(.ARM.exidx.text.NVIC_Config), (8 bytes).
    Removing main.o(.ARM.exidx.text.APP_GPIOConfig), (8 bytes).
    Removing main.o(.ARM.exidx.text.APP_ADCConfig), (8 bytes).
    Removing main.o(.ARM.exidx.text.APP_SPI1Config), (8 bytes).
    Removing main.o(.ARM.exidx.text.APP_USARTConfig), (8 bytes).
    Removing main.o(.ARM.exidx.text.APP_PWMChannelConfig), (8 bytes).
    Removing main.o(.ARM.exidx.text.APP_TIM1BaseConfig), (8 bytes).
    Removing main.o(.ARM.exidx.text.LL_GPIO_ResetOutputPin), (8 bytes).
    Removing main.o(.ARM.exidx.text.LL_TIM_EnableIT_UPDATE), (8 bytes).
    Removing main.o(.ARM.exidx.text.LL_TIM_EnableAllOutputs), (8 bytes).
    Removing main.o(.ARM.exidx.text.LL_TIM_EnableCounter), (8 bytes).
    Removing main.o(.text.APP_ErrorHandler), (2 bytes).
    Removing main.o(.ARM.exidx.text.APP_ErrorHandler), (8 bytes).
    Removing main.o(.ARM.exidx.text.LL_FLASH_EnablePageProgramStart), (8 bytes).
    Removing main.o(.ARM.exidx.text.LL_RCC_HSI_Enable), (8 bytes).
    Removing main.o(.ARM.exidx.text.LL_RCC_HSI_SetCalibFreq), (8 bytes).
    Removing main.o(.ARM.exidx.text.LL_RCC_HSI_IsReady), (8 bytes).
    Removing main.o(.ARM.exidx.text.LL_RCC_SetAHBPrescaler), (8 bytes).
    Removing main.o(.ARM.exidx.text.LL_RCC_SetAPB1Prescaler), (8 bytes).
    Removing main.o(.ARM.exidx.text.LL_IOP_GRP1_EnableClock), (8 bytes).
    Removing main.o(.ARM.exidx.text.LL_ADC_Reset), (8 bytes).
    Removing main.o(.ARM.exidx.text.LL_APB1_GRP2_EnableClock), (8 bytes).
    Removing main.o(.ARM.exidx.text.LL_ADC_REG_GetDMATransfer), (8 bytes).
    Removing main.o(.ARM.exidx.text.LL_ADC_REG_SetDMATransfer), (8 bytes).
    Removing main.o(.ARM.exidx.text.LL_ADC_StartCalibration), (8 bytes).
    Removing main.o(.ARM.exidx.text.LL_ADC_IsCalibrationOnGoing), (8 bytes).
    Removing main.o(.ARM.exidx.text.LL_ADC_SetCommonPathInternalCh), (8 bytes).
    Removing main.o(.ARM.exidx.text.LL_ADC_SetClock), (8 bytes).
    Removing main.o(.ARM.exidx.text.LL_ADC_SetResolution), (8 bytes).
    Removing main.o(.ARM.exidx.text.LL_ADC_SetDataAlignment), (8 bytes).
    Removing main.o(.ARM.exidx.text.LL_ADC_SetLowPowerMode), (8 bytes).
    Removing main.o(.ARM.exidx.text.LL_ADC_SetSamplingTimeCommonChannels), (8 bytes).
    Removing main.o(.ARM.exidx.text.LL_ADC_REG_SetTriggerSource), (8 bytes).
    Removing main.o(.ARM.exidx.text.LL_ADC_REG_SetTriggerEdge), (8 bytes).
    Removing main.o(.ARM.exidx.text.LL_ADC_REG_SetContinuousMode), (8 bytes).
    Removing main.o(.ARM.exidx.text.LL_ADC_REG_SetOverrun), (8 bytes).
    Removing main.o(.ARM.exidx.text.LL_ADC_REG_SetSequencerDiscont), (8 bytes).
    Removing main.o(.ARM.exidx.text.LL_ADC_REG_SetSequencerChannels), (8 bytes).
    Removing main.o(.ARM.exidx.text.LL_ADC_Enable), (8 bytes).
    Removing main.o(.ARM.exidx.text.LL_ADC_REG_StartConversion), (8 bytes).
    Removing main.o(.ARM.exidx.text.LL_APB1_GRP2_ForceReset), (8 bytes).
    Removing main.o(.ARM.exidx.text.LL_APB1_GRP2_ReleaseReset), (8 bytes).
    Removing main.o(.ARM.exidx.text.LL_GPIO_SetOutputPin), (8 bytes).
    Removing main.o(.ARM.exidx.text.LL_SPI_Enable), (8 bytes).
    Removing main.o(.ARM.exidx.text.LL_APB1_GRP1_EnableClock), (8 bytes).
    Removing main.o(.ARM.exidx.text.LL_USART_ConfigAsyncMode), (8 bytes).
    Removing main.o(.ARM.exidx.text.APP_DMAConfig), (8 bytes).
    Removing main.o(.ARM.exidx.text.LL_USART_EnableIT_IDLE), (8 bytes).
    Removing main.o(.ARM.exidx.text.LL_USART_Enable), (8 bytes).
    Removing main.o(.ARM.exidx.text.LL_AHB1_GRP1_EnableClock), (8 bytes).
    Removing main.o(.ARM.exidx.text.LL_DMA_ConfigTransfer), (8 bytes).
    Removing main.o(.ARM.exidx.text.LL_SYSCFG_SetDMARemap_CH1), (8 bytes).
    Removing main.o(.ARM.exidx.text.LL_SYSCFG_SetDMARemap_CH2), (8 bytes).
    Removing main.o(.ARM.exidx.text.LL_SYSCFG_SetDMARemap_CH3), (8 bytes).
    Removing main.o(.ARM.exidx.text.LL_DMA_SetMemoryAddress), (8 bytes).
    Removing main.o(.ARM.exidx.text.LL_DMA_SetPeriphAddress), (8 bytes).
    Removing main.o(.ARM.exidx.text.LL_USART_ClearFlag_ORE), (8 bytes).
    Removing main.o(.ARM.exidx.text.LL_USART_ClearFlag_TC), (8 bytes).
    Removing main.o(.ARM.exidx.text.LL_USART_EnableDMAReq_TX), (8 bytes).
    Removing main.o(.ARM.exidx.text.LL_USART_EnableDMAReq_RX), (8 bytes).
    Removing main.o(.ARM.exidx.text.LL_DMA_SetDataLength), (8 bytes).
    Removing main.o(.ARM.exidx.text.LL_DMA_EnableChannel), (8 bytes).
    Removing main.o(.ARM.exidx.text.LL_TIM_SetTriggerOutput), (8 bytes).
    Removing main.o(.ARM.exidx.text.__NVIC_SetPriority), (8 bytes).
    Removing main.o(.ARM.exidx.text.__NVIC_EnableIRQ), (8 bytes).
    Removing main.o(.ARM.use_no_argv), (4 bytes).
    Removing py32md3xx_it.o(.text), (0 bytes).
    Removing py32md3xx_it.o(.ARM.exidx.text.NMI_Handler), (8 bytes).
    Removing py32md3xx_it.o(.ARM.exidx.text.HardFault_Handler), (8 bytes).
    Removing py32md3xx_it.o(.ARM.exidx.text.SVC_Handler), (8 bytes).
    Removing py32md3xx_it.o(.ARM.exidx.text.PendSV_Handler), (8 bytes).
    Removing py32md3xx_it.o(.ARM.exidx.text.SysTick_Handler), (8 bytes).
    Removing py32md3xx_it.o(.ARM.exidx.text.TIM1_BRK_UP_TRG_COM_IRQHandler), (8 bytes).
    Removing py32md3xx_it.o(.ARM.exidx.text.LL_TIM_IsActiveFlag_UPDATE), (8 bytes).
    Removing py32md3xx_it.o(.ARM.exidx.text.LL_TIM_ClearFlag_UPDATE), (8 bytes).
    Removing py32md3xx_it.o(.ARM.exidx.text.Q15_Multiply), (8 bytes).
    Removing py32md3xx_it.o(.ARM.exidx.text.fast_sin_q15_raw), (8 bytes).
    Removing py32md3xx_it.o(.ARM.exidx.text.fast_cos_q15_raw), (8 bytes).
    Removing py32md3xx_it.o(.ARM.exidx.text.USART2_IRQHandler), (8 bytes).
    Removing py32md3xx_it.o(.ARM.exidx.text.LL_USART_IsActiveFlag_IDLE), (8 bytes).
    Removing py32md3xx_it.o(.ARM.exidx.text.LL_USART_ClearFlag_IDLE), (8 bytes).
    Removing py32md3xx_it.o(.ARM.exidx.text.LL_DMA_DisableChannel), (8 bytes).
    Removing py32md3xx_it.o(.ARM.exidx.text.LL_TIM_DisableAllOutputs), (8 bytes).
    Removing py32md3xx_it.o(.ARM.exidx.text.LL_TIM_EnableAllOutputs), (8 bytes).
    Removing py32md3xx_it.o(.ARM.exidx.text.LL_DMA_SetDataLength), (8 bytes).
    Removing py32md3xx_it.o(.ARM.exidx.text.LL_DMA_EnableChannel), (8 bytes).
    Removing py32md3xx_it.o(.ARM.exidx.text.LL_GPIO_TogglePin), (8 bytes).
    Removing py32md3xx_it.o(.ARM.exidx.text.LL_USART_IsActiveFlag_ORE), (8 bytes).
    Removing py32md3xx_it.o(.ARM.exidx.text.LL_USART_ClearFlag_ORE), (8 bytes).
    Removing foc.o(.text), (0 bytes).
    Removing foc.o(.ARM.exidx.text.Read_encoder), (8 bytes).
    Removing foc.o(.ARM.exidx.text.LL_GPIO_ResetOutputPin), (8 bytes).
    Removing foc.o(.ARM.exidx.text.LL_SPI_IsActiveFlag_TXE), (8 bytes).
    Removing foc.o(.ARM.exidx.text.LL_SPI_TransmitData16), (8 bytes).
    Removing foc.o(.ARM.exidx.text.LL_SPI_IsActiveFlag_RXNE), (8 bytes).
    Removing foc.o(.ARM.exidx.text.LL_SPI_ReceiveData16), (8 bytes).
    Removing foc.o(.ARM.exidx.text.LL_GPIO_SetOutputPin), (8 bytes).
    Removing foc.o(.ARM.exidx.text.set_PWM_level), (8 bytes).
    Removing foc.o(.ARM.exidx.text.LL_TIM_OC_SetCompareCH1), (8 bytes).
    Removing foc.o(.ARM.exidx.text.LL_TIM_OC_SetCompareCH2), (8 bytes).
    Removing foc.o(.ARM.exidx.text.LL_TIM_OC_SetCompareCH3), (8 bytes).
    Removing foc.o(.ARM.exidx.text.Q15_Multiply), (8 bytes).
    Removing foc.o(.ARM.exidx.text.setZero), (8 bytes).
    Removing trig_q15_func.o(.text), (0 bytes).
    Removing py32md3xx_ll_utils.o(.text), (0 bytes).
    Removing py32md3xx_ll_utils.o(.ARM.exidx.text.LL_Init1msTick), (8 bytes).
    Removing py32md3xx_ll_utils.o(.ARM.exidx.text.LL_InitTick), (8 bytes).
    Removing py32md3xx_ll_utils.o(.ARM.exidx.text.LL_mDelay), (8 bytes).
    Removing py32md3xx_ll_utils.o(.ARM.exidx.text.LL_SetSystemCoreClock), (8 bytes).
    Removing py32md3xx_ll_utils.o(.ARM.exidx.text.LL_PLL_ConfigSystemClock_HSI), (8 bytes).
    Removing py32md3xx_ll_utils.o(.ARM.exidx.text.UTILS_PLL_IsBusy), (8 bytes).
    Removing py32md3xx_ll_utils.o(.ARM.exidx.text.LL_RCC_HSI_GetFreq), (8 bytes).
    Removing py32md3xx_ll_utils.o(.ARM.exidx.text.LL_RCC_HSI_IsReady), (8 bytes).
    Removing py32md3xx_ll_utils.o(.ARM.exidx.text.LL_RCC_HSI_Enable), (8 bytes).
    Removing py32md3xx_ll_utils.o(.ARM.exidx.text.LL_RCC_PLL_SetMainSource), (8 bytes).
    Removing py32md3xx_ll_utils.o(.ARM.exidx.text.UTILS_EnablePLLAndSwitchSystem), (8 bytes).
    Removing py32md3xx_ll_utils.o(.ARM.exidx.text.LL_SetFlashLatency), (8 bytes).
    Removing py32md3xx_ll_utils.o(.ARM.exidx.text.LL_FLASH_SetLatency), (8 bytes).
    Removing py32md3xx_ll_utils.o(.ARM.exidx.text.LL_FLASH_GetLatency), (8 bytes).
    Removing py32md3xx_ll_utils.o(.ARM.exidx.text.LL_RCC_PLL_IsReady), (8 bytes).
    Removing py32md3xx_ll_utils.o(.ARM.exidx.text.LL_RCC_PLL_Enable), (8 bytes).
    Removing py32md3xx_ll_utils.o(.ARM.exidx.text.LL_RCC_SetAHBPrescaler), (8 bytes).
    Removing py32md3xx_ll_utils.o(.ARM.exidx.text.LL_RCC_SetSysClkSource), (8 bytes).
    Removing py32md3xx_ll_utils.o(.ARM.exidx.text.LL_RCC_GetSysClkSource), (8 bytes).
    Removing py32md3xx_ll_utils.o(.ARM.exidx.text.LL_RCC_SetAPB1Prescaler), (8 bytes).
    Removing py32md3xx_ll_adc.o(.text), (0 bytes).
    Removing py32md3xx_ll_adc.o(.text.LL_ADC_CommonDeInit), (14 bytes).
    Removing py32md3xx_ll_adc.o(.ARM.exidx.text.LL_ADC_CommonDeInit), (8 bytes).
    Removing py32md3xx_ll_adc.o(.text.LL_APB1_GRP2_ForceReset), (20 bytes).
    Removing py32md3xx_ll_adc.o(.ARM.exidx.text.LL_APB1_GRP2_ForceReset), (8 bytes).
    Removing py32md3xx_ll_adc.o(.text.LL_APB1_GRP2_ReleaseReset), (20 bytes).
    Removing py32md3xx_ll_adc.o(.ARM.exidx.text.LL_APB1_GRP2_ReleaseReset), (8 bytes).
    Removing py32md3xx_ll_adc.o(.text.LL_ADC_DeInit), (268 bytes).
    Removing py32md3xx_ll_adc.o(.ARM.exidx.text.LL_ADC_DeInit), (8 bytes).
    Removing py32md3xx_ll_adc.o(.text.LL_ADC_IsEnabled), (8 bytes).
    Removing py32md3xx_ll_adc.o(.ARM.exidx.text.LL_ADC_IsEnabled), (8 bytes).
    Removing py32md3xx_ll_adc.o(.text.LL_ADC_REG_SetTriggerSource), (12 bytes).
    Removing py32md3xx_ll_adc.o(.ARM.exidx.text.LL_ADC_REG_SetTriggerSource), (8 bytes).
    Removing py32md3xx_ll_adc.o(.text.LL_ADC_REG_IsConversionOngoing), (8 bytes).
    Removing py32md3xx_ll_adc.o(.ARM.exidx.text.LL_ADC_REG_IsConversionOngoing), (8 bytes).
    Removing py32md3xx_ll_adc.o(.text.LL_ADC_REG_IsStopConversionOngoing), (8 bytes).
    Removing py32md3xx_ll_adc.o(.ARM.exidx.text.LL_ADC_REG_IsStopConversionOngoing), (8 bytes).
    Removing py32md3xx_ll_adc.o(.text.LL_ADC_REG_StopConversion), (16 bytes).
    Removing py32md3xx_ll_adc.o(.ARM.exidx.text.LL_ADC_REG_StopConversion), (8 bytes).
    Removing py32md3xx_ll_adc.o(.text.LL_ADC_REG_StartConversion), (16 bytes).
    Removing py32md3xx_ll_adc.o(.ARM.exidx.text.LL_ADC_REG_StartConversion), (8 bytes).
    Removing py32md3xx_ll_adc.o(.text.LL_ADC_Init), (60 bytes).
    Removing py32md3xx_ll_adc.o(.ARM.exidx.text.LL_ADC_Init), (8 bytes).
    Removing py32md3xx_ll_adc.o(.text.LL_ADC_StructInit), (16 bytes).
    Removing py32md3xx_ll_adc.o(.ARM.exidx.text.LL_ADC_StructInit), (8 bytes).
    Removing py32md3xx_ll_adc.o(.text.LL_ADC_REG_Init), (48 bytes).
    Removing py32md3xx_ll_adc.o(.ARM.exidx.text.LL_ADC_REG_Init), (8 bytes).
    Removing py32md3xx_ll_adc.o(.text.LL_ADC_REG_StructInit), (18 bytes).
    Removing py32md3xx_ll_adc.o(.ARM.exidx.text.LL_ADC_REG_StructInit), (8 bytes).
    Removing py32md3xx_ll_comp.o(.text), (0 bytes).
    Removing py32md3xx_ll_comp.o(.text.LL_COMP_DeInit), (26 bytes).
    Removing py32md3xx_ll_comp.o(.ARM.exidx.text.LL_COMP_DeInit), (8 bytes).
    Removing py32md3xx_ll_comp.o(.text.LL_COMP_IsLocked), (6 bytes).
    Removing py32md3xx_ll_comp.o(.ARM.exidx.text.LL_COMP_IsLocked), (8 bytes).
    Removing py32md3xx_ll_comp.o(.text.LL_COMP_Init), (108 bytes).
    Removing py32md3xx_ll_comp.o(.ARM.exidx.text.LL_COMP_Init), (8 bytes).
    Removing py32md3xx_ll_comp.o(.text.LL_COMP_StructInit), (22 bytes).
    Removing py32md3xx_ll_comp.o(.ARM.exidx.text.LL_COMP_StructInit), (8 bytes).
    Removing py32md3xx_ll_crc.o(.text), (0 bytes).
    Removing py32md3xx_ll_crc.o(.text.LL_CRC_DeInit), (28 bytes).
    Removing py32md3xx_ll_crc.o(.ARM.exidx.text.LL_CRC_DeInit), (8 bytes).
    Removing py32md3xx_ll_crc.o(.text.LL_CRC_ResetCRCCalculationUnit), (16 bytes).
    Removing py32md3xx_ll_crc.o(.ARM.exidx.text.LL_CRC_ResetCRCCalculationUnit), (8 bytes).
    Removing py32md3xx_ll_crc.o(.text.LL_CRC_Write_IDR), (12 bytes).
    Removing py32md3xx_ll_crc.o(.ARM.exidx.text.LL_CRC_Write_IDR), (8 bytes).
    Removing py32md3xx_ll_dma.o(.text), (0 bytes).
    Removing py32md3xx_ll_dma.o(.text.LL_DMA_DeInit), (112 bytes).
    Removing py32md3xx_ll_dma.o(.ARM.exidx.text.LL_DMA_DeInit), (8 bytes).
    Removing py32md3xx_ll_dma.o(.text.LL_DMA_ClearFlag_GI1), (6 bytes).
    Removing py32md3xx_ll_dma.o(.ARM.exidx.text.LL_DMA_ClearFlag_GI1), (8 bytes).
    Removing py32md3xx_ll_dma.o(.text.LL_DMA_ClearFlag_GI2), (6 bytes).
    Removing py32md3xx_ll_dma.o(.ARM.exidx.text.LL_DMA_ClearFlag_GI2), (8 bytes).
    Removing py32md3xx_ll_dma.o(.text.LL_DMA_ClearFlag_GI3), (8 bytes).
    Removing py32md3xx_ll_dma.o(.ARM.exidx.text.LL_DMA_ClearFlag_GI3), (8 bytes).
    Removing py32md3xx_ll_dma.o(.text.LL_DMA_Init), (88 bytes).
    Removing py32md3xx_ll_dma.o(.ARM.exidx.text.LL_DMA_Init), (8 bytes).
    Removing py32md3xx_ll_dma.o(.text.LL_DMA_ConfigTransfer), (32 bytes).
    Removing py32md3xx_ll_dma.o(.ARM.exidx.text.LL_DMA_ConfigTransfer), (8 bytes).
    Removing py32md3xx_ll_dma.o(.text.LL_DMA_SetMemoryAddress), (20 bytes).
    Removing py32md3xx_ll_dma.o(.ARM.exidx.text.LL_DMA_SetMemoryAddress), (8 bytes).
    Removing py32md3xx_ll_dma.o(.text.LL_DMA_SetPeriphAddress), (20 bytes).
    Removing py32md3xx_ll_dma.o(.ARM.exidx.text.LL_DMA_SetPeriphAddress), (8 bytes).
    Removing py32md3xx_ll_dma.o(.text.LL_DMA_SetDataLength), (32 bytes).
    Removing py32md3xx_ll_dma.o(.ARM.exidx.text.LL_DMA_SetDataLength), (8 bytes).
    Removing py32md3xx_ll_dma.o(.text.LL_DMA_StructInit), (10 bytes).
    Removing py32md3xx_ll_dma.o(.ARM.exidx.text.LL_DMA_StructInit), (8 bytes).
    Removing py32md3xx_ll_dma.o(.rodata.CHANNEL_OFFSET_TAB), (3 bytes).
    Removing py32md3xx_ll_exti.o(.text), (0 bytes).
    Removing py32md3xx_ll_exti.o(.text.LL_EXTI_DeInit), (40 bytes).
    Removing py32md3xx_ll_exti.o(.ARM.exidx.text.LL_EXTI_DeInit), (8 bytes).
    Removing py32md3xx_ll_exti.o(.text.LL_EXTI_Init), (152 bytes).
    Removing py32md3xx_ll_exti.o(.ARM.exidx.text.LL_EXTI_Init), (8 bytes).
    Removing py32md3xx_ll_exti.o(.text.LL_EXTI_DisableEvent), (16 bytes).
    Removing py32md3xx_ll_exti.o(.ARM.exidx.text.LL_EXTI_DisableEvent), (8 bytes).
    Removing py32md3xx_ll_exti.o(.text.LL_EXTI_EnableIT), (16 bytes).
    Removing py32md3xx_ll_exti.o(.ARM.exidx.text.LL_EXTI_EnableIT), (8 bytes).
    Removing py32md3xx_ll_exti.o(.text.LL_EXTI_DisableIT), (16 bytes).
    Removing py32md3xx_ll_exti.o(.ARM.exidx.text.LL_EXTI_DisableIT), (8 bytes).
    Removing py32md3xx_ll_exti.o(.text.LL_EXTI_EnableEvent), (16 bytes).
    Removing py32md3xx_ll_exti.o(.ARM.exidx.text.LL_EXTI_EnableEvent), (8 bytes).
    Removing py32md3xx_ll_exti.o(.text.LL_EXTI_DisableFallingTrig), (16 bytes).
    Removing py32md3xx_ll_exti.o(.ARM.exidx.text.LL_EXTI_DisableFallingTrig), (8 bytes).
    Removing py32md3xx_ll_exti.o(.text.LL_EXTI_EnableRisingTrig), (16 bytes).
    Removing py32md3xx_ll_exti.o(.ARM.exidx.text.LL_EXTI_EnableRisingTrig), (8 bytes).
    Removing py32md3xx_ll_exti.o(.text.LL_EXTI_DisableRisingTrig), (16 bytes).
    Removing py32md3xx_ll_exti.o(.ARM.exidx.text.LL_EXTI_DisableRisingTrig), (8 bytes).
    Removing py32md3xx_ll_exti.o(.text.LL_EXTI_EnableFallingTrig), (16 bytes).
    Removing py32md3xx_ll_exti.o(.ARM.exidx.text.LL_EXTI_EnableFallingTrig), (8 bytes).
    Removing py32md3xx_ll_exti.o(.text.LL_EXTI_StructInit), (12 bytes).
    Removing py32md3xx_ll_exti.o(.ARM.exidx.text.LL_EXTI_StructInit), (8 bytes).
    Removing py32md3xx_ll_gpio.o(.text), (0 bytes).
    Removing py32md3xx_ll_gpio.o(.text.LL_GPIO_DeInit), (64 bytes).
    Removing py32md3xx_ll_gpio.o(.ARM.exidx.text.LL_GPIO_DeInit), (8 bytes).
    Removing py32md3xx_ll_gpio.o(.text.LL_IOP_GRP1_ForceReset), (16 bytes).
    Removing py32md3xx_ll_gpio.o(.ARM.exidx.text.LL_IOP_GRP1_ForceReset), (8 bytes).
    Removing py32md3xx_ll_gpio.o(.text.LL_IOP_GRP1_ReleaseReset), (16 bytes).
    Removing py32md3xx_ll_gpio.o(.ARM.exidx.text.LL_IOP_GRP1_ReleaseReset), (8 bytes).
    Removing py32md3xx_ll_gpio.o(.ARM.exidx.text.LL_GPIO_Init), (8 bytes).
    Removing py32md3xx_ll_gpio.o(.ARM.exidx.text.LL_GPIO_SetPinMode), (8 bytes).
    Removing py32md3xx_ll_gpio.o(.ARM.exidx.text.LL_GPIO_SetPinSpeed), (8 bytes).
    Removing py32md3xx_ll_gpio.o(.ARM.exidx.text.LL_GPIO_SetPinPull), (8 bytes).
    Removing py32md3xx_ll_gpio.o(.ARM.exidx.text.LL_GPIO_SetAFPin_0_7), (8 bytes).
    Removing py32md3xx_ll_gpio.o(.ARM.exidx.text.LL_GPIO_SetAFPin_8_15), (8 bytes).
    Removing py32md3xx_ll_gpio.o(.ARM.exidx.text.LL_GPIO_SetPinOutputType), (8 bytes).
    Removing py32md3xx_ll_gpio.o(.text.LL_GPIO_StructInit), (24 bytes).
    Removing py32md3xx_ll_gpio.o(.ARM.exidx.text.LL_GPIO_StructInit), (8 bytes).
    Removing py32md3xx_ll_i2c.o(.text), (0 bytes).
    Removing py32md3xx_ll_i2c.o(.text.LL_I2C_DeInit), (28 bytes).
    Removing py32md3xx_ll_i2c.o(.ARM.exidx.text.LL_I2C_DeInit), (8 bytes).
    Removing py32md3xx_ll_i2c.o(.text.LL_APB1_GRP1_ForceReset), (20 bytes).
    Removing py32md3xx_ll_i2c.o(.ARM.exidx.text.LL_APB1_GRP1_ForceReset), (8 bytes).
    Removing py32md3xx_ll_i2c.o(.text.LL_APB1_GRP1_ReleaseReset), (20 bytes).
    Removing py32md3xx_ll_i2c.o(.ARM.exidx.text.LL_APB1_GRP1_ReleaseReset), (8 bytes).
    Removing py32md3xx_ll_i2c.o(.text.LL_I2C_Init), (58 bytes).
    Removing py32md3xx_ll_i2c.o(.ARM.exidx.text.LL_I2C_Init), (8 bytes).
    Removing py32md3xx_ll_i2c.o(.text.LL_I2C_Disable), (10 bytes).
    Removing py32md3xx_ll_i2c.o(.ARM.exidx.text.LL_I2C_Disable), (8 bytes).
    Removing py32md3xx_ll_i2c.o(.text.LL_I2C_ConfigSpeed), (164 bytes).
    Removing py32md3xx_ll_i2c.o(.ARM.exidx.text.LL_I2C_ConfigSpeed), (8 bytes).
    Removing py32md3xx_ll_i2c.o(.text.LL_I2C_SetOwnAddress1), (12 bytes).
    Removing py32md3xx_ll_i2c.o(.ARM.exidx.text.LL_I2C_SetOwnAddress1), (8 bytes).
    Removing py32md3xx_ll_i2c.o(.text.LL_I2C_Enable), (10 bytes).
    Removing py32md3xx_ll_i2c.o(.ARM.exidx.text.LL_I2C_Enable), (8 bytes).
    Removing py32md3xx_ll_i2c.o(.text.LL_I2C_AcknowledgeNextData), (14 bytes).
    Removing py32md3xx_ll_i2c.o(.ARM.exidx.text.LL_I2C_AcknowledgeNextData), (8 bytes).
    Removing py32md3xx_ll_i2c.o(.text.LL_I2C_StructInit), (20 bytes).
    Removing py32md3xx_ll_i2c.o(.ARM.exidx.text.LL_I2C_StructInit), (8 bytes).
    Removing py32md3xx_ll_led.o(.text), (0 bytes).
    Removing py32md3xx_ll_lptim.o(.text), (0 bytes).
    Removing py32md3xx_ll_lptim.o(.text.LL_LPTIM_DeInit), (28 bytes).
    Removing py32md3xx_ll_lptim.o(.ARM.exidx.text.LL_LPTIM_DeInit), (8 bytes).
    Removing py32md3xx_ll_lptim.o(.text.LL_APB1_GRP1_ForceReset), (20 bytes).
    Removing py32md3xx_ll_lptim.o(.ARM.exidx.text.LL_APB1_GRP1_ForceReset), (8 bytes).
    Removing py32md3xx_ll_lptim.o(.text.LL_APB1_GRP1_ReleaseReset), (20 bytes).
    Removing py32md3xx_ll_lptim.o(.ARM.exidx.text.LL_APB1_GRP1_ReleaseReset), (8 bytes).
    Removing py32md3xx_ll_lptim.o(.text.LL_LPTIM_StructInit), (8 bytes).
    Removing py32md3xx_ll_lptim.o(.ARM.exidx.text.LL_LPTIM_StructInit), (8 bytes).
    Removing py32md3xx_ll_lptim.o(.text.LL_LPTIM_Init), (40 bytes).
    Removing py32md3xx_ll_lptim.o(.ARM.exidx.text.LL_LPTIM_Init), (8 bytes).
    Removing py32md3xx_ll_lptim.o(.text.LL_LPTIM_IsEnabled), (8 bytes).
    Removing py32md3xx_ll_lptim.o(.ARM.exidx.text.LL_LPTIM_IsEnabled), (8 bytes).
    Removing py32md3xx_ll_pwr.o(.text), (0 bytes).
    Removing py32md3xx_ll_pwr.o(.text.LL_PWR_DeInit), (14 bytes).
    Removing py32md3xx_ll_pwr.o(.ARM.exidx.text.LL_PWR_DeInit), (8 bytes).
    Removing py32md3xx_ll_pwr.o(.text.LL_APB1_GRP1_ForceReset), (20 bytes).
    Removing py32md3xx_ll_pwr.o(.ARM.exidx.text.LL_APB1_GRP1_ForceReset), (8 bytes).
    Removing py32md3xx_ll_pwr.o(.text.LL_APB1_GRP1_ReleaseReset), (20 bytes).
    Removing py32md3xx_ll_pwr.o(.ARM.exidx.text.LL_APB1_GRP1_ReleaseReset), (8 bytes).
    Removing py32md3xx_ll_rcc.o(.text), (0 bytes).
    Removing py32md3xx_ll_rcc.o(.text.LL_RCC_DeInit), (84 bytes).
    Removing py32md3xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_DeInit), (8 bytes).
    Removing py32md3xx_ll_rcc.o(.text.LL_RCC_HSI_Enable), (20 bytes).
    Removing py32md3xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_HSI_Enable), (8 bytes).
    Removing py32md3xx_ll_rcc.o(.text.LL_RCC_HSI_IsReady), (16 bytes).
    Removing py32md3xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_HSI_IsReady), (8 bytes).
    Removing py32md3xx_ll_rcc.o(.text.LL_RCC_HSI_SetCalibFreq), (24 bytes).
    Removing py32md3xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_HSI_SetCalibFreq), (8 bytes).
    Removing py32md3xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetSysClkSource), (8 bytes).
    Removing py32md3xx_ll_rcc.o(.text.LL_RCC_PLL_IsReady), (16 bytes).
    Removing py32md3xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_PLL_IsReady), (8 bytes).
    Removing py32md3xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetSystemClocksFreq), (8 bytes).
    Removing py32md3xx_ll_rcc.o(.ARM.exidx.text.RCC_GetSystemClockFreq), (8 bytes).
    Removing py32md3xx_ll_rcc.o(.ARM.exidx.text.RCC_GetHCLKClockFreq), (8 bytes).
    Removing py32md3xx_ll_rcc.o(.ARM.exidx.text.RCC_GetPCLK1ClockFreq), (8 bytes).
    Removing py32md3xx_ll_rcc.o(.text.LL_RCC_GetMCOClockFreq), (84 bytes).
    Removing py32md3xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetMCOClockFreq), (8 bytes).
    Removing py32md3xx_ll_rcc.o(.text.LL_RCC_GetMCOClockSource), (12 bytes).
    Removing py32md3xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetMCOClockSource), (8 bytes).
    Removing py32md3xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_HSI_GetFreq), (8 bytes).
    Removing py32md3xx_ll_rcc.o(.ARM.exidx.text.RCC_PLL_GetFreqDomain_SYS), (8 bytes).
    Removing py32md3xx_ll_rcc.o(.text.LL_RCC_LSI_IsReady), (16 bytes).
    Removing py32md3xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_LSI_IsReady), (8 bytes).
    Removing py32md3xx_ll_rcc.o(.text.LL_RCC_GetMCODiv), (16 bytes).
    Removing py32md3xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetMCODiv), (8 bytes).
    Removing py32md3xx_ll_rcc.o(.text.LL_RCC_GetLSCClockFreq), (6 bytes).
    Removing py32md3xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetLSCClockFreq), (8 bytes).
    Removing py32md3xx_ll_rcc.o(.text.LL_RCC_GetPVDClockFreq), (30 bytes).
    Removing py32md3xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetPVDClockFreq), (8 bytes).
    Removing py32md3xx_ll_rcc.o(.text.LL_RCC_GetPVDClockSource), (16 bytes).
    Removing py32md3xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetPVDClockSource), (8 bytes).
    Removing py32md3xx_ll_rcc.o(.text.LL_RCC_GetCOMPClockFreq), (72 bytes).
    Removing py32md3xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetCOMPClockFreq), (8 bytes).
    Removing py32md3xx_ll_rcc.o(.text.LL_RCC_GetCOMPClockSource), (16 bytes).
    Removing py32md3xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetCOMPClockSource), (8 bytes).
    Removing py32md3xx_ll_rcc.o(.text.LL_RCC_GetLPTIMClockFreq), (72 bytes).
    Removing py32md3xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetLPTIMClockFreq), (8 bytes).
    Removing py32md3xx_ll_rcc.o(.text.LL_RCC_GetLPTIMClockSource), (24 bytes).
    Removing py32md3xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetLPTIMClockSource), (8 bytes).
    Removing py32md3xx_ll_rcc.o(.text.LL_RCC_GetRTCClockFreq), (34 bytes).
    Removing py32md3xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetRTCClockFreq), (8 bytes).
    Removing py32md3xx_ll_rcc.o(.text.LL_RCC_GetRTCClockSource), (16 bytes).
    Removing py32md3xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetRTCClockSource), (8 bytes).
    Removing py32md3xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetHSIDiv), (8 bytes).
    Removing py32md3xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetAHBPrescaler), (8 bytes).
    Removing py32md3xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetAPB1Prescaler), (8 bytes).
    Removing py32md3xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_PLL_GetMainSource), (8 bytes).
    Removing py32md3xx_ll_rtc.o(.text), (0 bytes).
    Removing py32md3xx_ll_rtc.o(.text.LL_RTC_DeInit), (74 bytes).
    Removing py32md3xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_DeInit), (8 bytes).
    Removing py32md3xx_ll_rtc.o(.text.LL_RTC_DisableWriteProtection), (10 bytes).
    Removing py32md3xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_DisableWriteProtection), (8 bytes).
    Removing py32md3xx_ll_rtc.o(.text.LL_RTC_EnterInitMode), (82 bytes).
    Removing py32md3xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_EnterInitMode), (8 bytes).
    Removing py32md3xx_ll_rtc.o(.text.LL_RTC_ExitInitMode), (112 bytes).
    Removing py32md3xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_ExitInitMode), (8 bytes).
    Removing py32md3xx_ll_rtc.o(.text.LL_RTC_WaitForSynchro), (82 bytes).
    Removing py32md3xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_WaitForSynchro), (8 bytes).
    Removing py32md3xx_ll_rtc.o(.text.LL_RTC_ClearFlag_RS), (10 bytes).
    Removing py32md3xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_ClearFlag_RS), (8 bytes).
    Removing py32md3xx_ll_rtc.o(.text.LL_RTC_EnableWriteProtection), (10 bytes).
    Removing py32md3xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_EnableWriteProtection), (8 bytes).
    Removing py32md3xx_ll_rtc.o(.text.LL_RTC_Init), (72 bytes).
    Removing py32md3xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_Init), (8 bytes).
    Removing py32md3xx_ll_rtc.o(.text.LL_RTC_ClearFlag_ALR), (10 bytes).
    Removing py32md3xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_ClearFlag_ALR), (8 bytes).
    Removing py32md3xx_ll_rtc.o(.text.LL_RTC_ClearFlag_OW), (10 bytes).
    Removing py32md3xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_ClearFlag_OW), (8 bytes).
    Removing py32md3xx_ll_rtc.o(.text.LL_RTC_ClearFlag_SEC), (10 bytes).
    Removing py32md3xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_ClearFlag_SEC), (8 bytes).
    Removing py32md3xx_ll_rtc.o(.text.LL_RTC_SetOutputSource), (14 bytes).
    Removing py32md3xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_SetOutputSource), (8 bytes).
    Removing py32md3xx_ll_rtc.o(.text.LL_RTC_SetAsynchPrescaler), (32 bytes).
    Removing py32md3xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_SetAsynchPrescaler), (8 bytes).
    Removing py32md3xx_ll_rtc.o(.text.LL_RTC_StructInit), (16 bytes).
    Removing py32md3xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_StructInit), (8 bytes).
    Removing py32md3xx_ll_rtc.o(.text.LL_RTC_TIME_Init), (110 bytes).
    Removing py32md3xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_TIME_Init), (8 bytes).
    Removing py32md3xx_ll_rtc.o(.text.LL_RTC_TIME_Set), (10 bytes).
    Removing py32md3xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_TIME_Set), (8 bytes).
    Removing py32md3xx_ll_rtc.o(.text.LL_RTC_TIME_StructInit), (10 bytes).
    Removing py32md3xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_TIME_StructInit), (8 bytes).
    Removing py32md3xx_ll_rtc.o(.text.LL_RTC_ALARM_Init), (110 bytes).
    Removing py32md3xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_ALARM_Init), (8 bytes).
    Removing py32md3xx_ll_rtc.o(.text.LL_RTC_ALARM_Set), (10 bytes).
    Removing py32md3xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_ALARM_Set), (8 bytes).
    Removing py32md3xx_ll_rtc.o(.text.LL_RTC_ALARM_StructInit), (10 bytes).
    Removing py32md3xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_ALARM_StructInit), (8 bytes).
    Removing py32md3xx_ll_rtc.o(.text.LL_RTC_IsActiveFlag_RTOF), (8 bytes).
    Removing py32md3xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_IsActiveFlag_RTOF), (8 bytes).
    Removing py32md3xx_ll_rtc.o(.text.LL_SYSTICK_IsActiveCounterFlag), (16 bytes).
    Removing py32md3xx_ll_rtc.o(.ARM.exidx.text.LL_SYSTICK_IsActiveCounterFlag), (8 bytes).
    Removing py32md3xx_ll_rtc.o(.text.LL_RTC_TIME_SetCounter), (38 bytes).
    Removing py32md3xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_TIME_SetCounter), (8 bytes).
    Removing py32md3xx_ll_rtc.o(.text.LL_RTC_ALARM_SetCounter), (38 bytes).
    Removing py32md3xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_ALARM_SetCounter), (8 bytes).
    Removing py32md3xx_ll_rtc.o(.text.LL_RTC_IsActiveFlag_RS), (8 bytes).
    Removing py32md3xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_IsActiveFlag_RS), (8 bytes).
    Removing py32md3xx_ll_spi.o(.text), (0 bytes).
    Removing py32md3xx_ll_spi.o(.text.LL_SPI_DeInit), (52 bytes).
    Removing py32md3xx_ll_spi.o(.ARM.exidx.text.LL_SPI_DeInit), (8 bytes).
    Removing py32md3xx_ll_spi.o(.text.LL_APB1_GRP2_ForceReset), (20 bytes).
    Removing py32md3xx_ll_spi.o(.ARM.exidx.text.LL_APB1_GRP2_ForceReset), (8 bytes).
    Removing py32md3xx_ll_spi.o(.text.LL_APB1_GRP2_ReleaseReset), (20 bytes).
    Removing py32md3xx_ll_spi.o(.ARM.exidx.text.LL_APB1_GRP2_ReleaseReset), (8 bytes).
    Removing py32md3xx_ll_spi.o(.text.LL_APB1_GRP1_ForceReset), (20 bytes).
    Removing py32md3xx_ll_spi.o(.ARM.exidx.text.LL_APB1_GRP1_ForceReset), (8 bytes).
    Removing py32md3xx_ll_spi.o(.text.LL_APB1_GRP1_ReleaseReset), (20 bytes).
    Removing py32md3xx_ll_spi.o(.ARM.exidx.text.LL_APB1_GRP1_ReleaseReset), (8 bytes).
    Removing py32md3xx_ll_spi.o(.ARM.exidx.text.LL_SPI_Init), (8 bytes).
    Removing py32md3xx_ll_spi.o(.ARM.exidx.text.LL_SPI_IsEnabled), (8 bytes).
    Removing py32md3xx_ll_spi.o(.ARM.exidx.text.LL_SPI_SetRxFIFOThreshold), (8 bytes).
    Removing py32md3xx_ll_spi.o(.text.LL_SPI_StructInit), (10 bytes).
    Removing py32md3xx_ll_spi.o(.ARM.exidx.text.LL_SPI_StructInit), (8 bytes).
    Removing py32md3xx_ll_tim.o(.text), (0 bytes).
    Removing py32md3xx_ll_tim.o(.text.LL_TIM_DeInit), (132 bytes).
    Removing py32md3xx_ll_tim.o(.ARM.exidx.text.LL_TIM_DeInit), (8 bytes).
    Removing py32md3xx_ll_tim.o(.text.LL_APB1_GRP2_ForceReset), (16 bytes).
    Removing py32md3xx_ll_tim.o(.ARM.exidx.text.LL_APB1_GRP2_ForceReset), (8 bytes).
    Removing py32md3xx_ll_tim.o(.text.LL_APB1_GRP2_ReleaseReset), (16 bytes).
    Removing py32md3xx_ll_tim.o(.ARM.exidx.text.LL_APB1_GRP2_ReleaseReset), (8 bytes).
    Removing py32md3xx_ll_tim.o(.text.LL_APB1_GRP1_ForceReset), (16 bytes).
    Removing py32md3xx_ll_tim.o(.ARM.exidx.text.LL_APB1_GRP1_ForceReset), (8 bytes).
    Removing py32md3xx_ll_tim.o(.text.LL_APB1_GRP1_ReleaseReset), (16 bytes).
    Removing py32md3xx_ll_tim.o(.ARM.exidx.text.LL_APB1_GRP1_ReleaseReset), (8 bytes).
    Removing py32md3xx_ll_tim.o(.text.LL_TIM_StructInit), (16 bytes).
    Removing py32md3xx_ll_tim.o(.ARM.exidx.text.LL_TIM_StructInit), (8 bytes).
    Removing py32md3xx_ll_tim.o(.ARM.exidx.text.LL_TIM_Init), (8 bytes).
    Removing py32md3xx_ll_tim.o(.ARM.exidx.text.LL_TIM_SetAutoReload), (8 bytes).
    Removing py32md3xx_ll_tim.o(.ARM.exidx.text.LL_TIM_SetPrescaler), (8 bytes).
    Removing py32md3xx_ll_tim.o(.ARM.exidx.text.LL_TIM_SetRepetitionCounter), (8 bytes).
    Removing py32md3xx_ll_tim.o(.ARM.exidx.text.LL_TIM_GenerateEvent_UPDATE), (8 bytes).
    Removing py32md3xx_ll_tim.o(.text.LL_TIM_OC_StructInit), (20 bytes).
    Removing py32md3xx_ll_tim.o(.ARM.exidx.text.LL_TIM_OC_StructInit), (8 bytes).
    Removing py32md3xx_ll_tim.o(.ARM.exidx.text.LL_TIM_OC_Init), (8 bytes).
    Removing py32md3xx_ll_tim.o(.ARM.exidx.text.OC1Config), (8 bytes).
    Removing py32md3xx_ll_tim.o(.ARM.exidx.text.OC2Config), (8 bytes).
    Removing py32md3xx_ll_tim.o(.ARM.exidx.text.OC3Config), (8 bytes).
    Removing py32md3xx_ll_tim.o(.ARM.exidx.text.OC4Config), (8 bytes).
    Removing py32md3xx_ll_tim.o(.text.LL_TIM_IC_StructInit), (14 bytes).
    Removing py32md3xx_ll_tim.o(.ARM.exidx.text.LL_TIM_IC_StructInit), (8 bytes).
    Removing py32md3xx_ll_tim.o(.text.LL_TIM_IC_Init), (80 bytes).
    Removing py32md3xx_ll_tim.o(.ARM.exidx.text.LL_TIM_IC_Init), (8 bytes).
    Removing py32md3xx_ll_tim.o(.text.IC1Config), (48 bytes).
    Removing py32md3xx_ll_tim.o(.ARM.exidx.text.IC1Config), (8 bytes).
    Removing py32md3xx_ll_tim.o(.text.IC2Config), (52 bytes).
    Removing py32md3xx_ll_tim.o(.ARM.exidx.text.IC2Config), (8 bytes).
    Removing py32md3xx_ll_tim.o(.text.IC3Config), (54 bytes).
    Removing py32md3xx_ll_tim.o(.ARM.exidx.text.IC3Config), (8 bytes).
    Removing py32md3xx_ll_tim.o(.text.IC4Config), (56 bytes).
    Removing py32md3xx_ll_tim.o(.ARM.exidx.text.IC4Config), (8 bytes).
    Removing py32md3xx_ll_tim.o(.text.LL_TIM_ENCODER_StructInit), (26 bytes).
    Removing py32md3xx_ll_tim.o(.ARM.exidx.text.LL_TIM_ENCODER_StructInit), (8 bytes).
    Removing py32md3xx_ll_tim.o(.text.LL_TIM_ENCODER_Init), (128 bytes).
    Removing py32md3xx_ll_tim.o(.ARM.exidx.text.LL_TIM_ENCODER_Init), (8 bytes).
    Removing py32md3xx_ll_tim.o(.text.LL_TIM_SetEncoderMode), (12 bytes).
    Removing py32md3xx_ll_tim.o(.ARM.exidx.text.LL_TIM_SetEncoderMode), (8 bytes).
    Removing py32md3xx_ll_tim.o(.text.LL_TIM_HALLSENSOR_StructInit), (12 bytes).
    Removing py32md3xx_ll_tim.o(.ARM.exidx.text.LL_TIM_HALLSENSOR_StructInit), (8 bytes).
    Removing py32md3xx_ll_tim.o(.text.LL_TIM_HALLSENSOR_Init), (88 bytes).
    Removing py32md3xx_ll_tim.o(.ARM.exidx.text.LL_TIM_HALLSENSOR_Init), (8 bytes).
    Removing py32md3xx_ll_tim.o(.ARM.exidx.text.LL_TIM_OC_SetCompareCH2), (8 bytes).
    Removing py32md3xx_ll_tim.o(.text.LL_TIM_BDTR_StructInit), (18 bytes).
    Removing py32md3xx_ll_tim.o(.ARM.exidx.text.LL_TIM_BDTR_StructInit), (8 bytes).
    Removing py32md3xx_ll_tim.o(.text.LL_TIM_BDTR_Init), (64 bytes).
    Removing py32md3xx_ll_tim.o(.ARM.exidx.text.LL_TIM_BDTR_Init), (8 bytes).
    Removing py32md3xx_ll_tim.o(.ARM.exidx.text.LL_TIM_OC_SetCompareCH1), (8 bytes).
    Removing py32md3xx_ll_tim.o(.ARM.exidx.text.LL_TIM_OC_SetCompareCH3), (8 bytes).
    Removing py32md3xx_ll_tim.o(.ARM.exidx.text.LL_TIM_OC_SetCompareCH4), (8 bytes).
    Removing py32md3xx_ll_usart.o(.text), (0 bytes).
    Removing py32md3xx_ll_usart.o(.text.LL_USART_DeInit), (52 bytes).
    Removing py32md3xx_ll_usart.o(.ARM.exidx.text.LL_USART_DeInit), (8 bytes).
    Removing py32md3xx_ll_usart.o(.text.LL_APB1_GRP2_ForceReset), (20 bytes).
    Removing py32md3xx_ll_usart.o(.ARM.exidx.text.LL_APB1_GRP2_ForceReset), (8 bytes).
    Removing py32md3xx_ll_usart.o(.text.LL_APB1_GRP2_ReleaseReset), (20 bytes).
    Removing py32md3xx_ll_usart.o(.ARM.exidx.text.LL_APB1_GRP2_ReleaseReset), (8 bytes).
    Removing py32md3xx_ll_usart.o(.text.LL_APB1_GRP1_ForceReset), (20 bytes).
    Removing py32md3xx_ll_usart.o(.ARM.exidx.text.LL_APB1_GRP1_ForceReset), (8 bytes).
    Removing py32md3xx_ll_usart.o(.text.LL_APB1_GRP1_ReleaseReset), (20 bytes).
    Removing py32md3xx_ll_usart.o(.ARM.exidx.text.LL_APB1_GRP1_ReleaseReset), (8 bytes).
    Removing py32md3xx_ll_usart.o(.ARM.exidx.text.LL_USART_Init), (8 bytes).
    Removing py32md3xx_ll_usart.o(.ARM.exidx.text.LL_USART_IsEnabled), (8 bytes).
    Removing py32md3xx_ll_usart.o(.ARM.exidx.text.LL_USART_SetStopBitsLength), (8 bytes).
    Removing py32md3xx_ll_usart.o(.ARM.exidx.text.LL_USART_SetHWFlowCtrl), (8 bytes).
    Removing py32md3xx_ll_usart.o(.ARM.exidx.text.LL_USART_SetBaudRate), (8 bytes).
    Removing py32md3xx_ll_usart.o(.text.LL_USART_StructInit), (24 bytes).
    Removing py32md3xx_ll_usart.o(.ARM.exidx.text.LL_USART_StructInit), (8 bytes).
    Removing py32md3xx_ll_usart.o(.text.LL_USART_ClockInit), (64 bytes).
    Removing py32md3xx_ll_usart.o(.ARM.exidx.text.LL_USART_ClockInit), (8 bytes).
    Removing py32md3xx_ll_usart.o(.text.LL_USART_DisableSCLKOutput), (12 bytes).
    Removing py32md3xx_ll_usart.o(.ARM.exidx.text.LL_USART_DisableSCLKOutput), (8 bytes).
    Removing py32md3xx_ll_usart.o(.text.LL_USART_ClockStructInit), (12 bytes).
    Removing py32md3xx_ll_usart.o(.ARM.exidx.text.LL_USART_ClockStructInit), (8 bytes).

491 unused section(s) (total 7523 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    ../clib/division.s                       0x00000000   Number         0  aeabi_sdivfast.o ABSOLUTE
    ../clib/division.s                       0x00000000   Number         0  aeabi_sdivfast_div0.o ABSOLUTE
    ../clib/microlib/division.c              0x00000000   Number         0  uidiv.o ABSOLUTE
    ../clib/microlib/division.c              0x00000000   Number         0  uidiv_div0.o ABSOLUTE
    ../clib/microlib/division.c              0x00000000   Number         0  idiv_div0.o ABSOLUTE
    ../clib/microlib/division.c              0x00000000   Number         0  idiv0.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry2.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry5.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry7a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry7b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry8a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry8b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry9a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry9b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry10a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry10b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry11a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry11b.o ABSOLUTE
    ../clib/microlib/string/memset.c         0x00000000   Number         0  memseta.o ABSOLUTE
    FOC.c                                    0x00000000   Number         0  foc.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    handlers.s                               0x00000000   Number         0  handlers.o ABSOLUTE
    init.s                                   0x00000000   Number         0  init.o ABSOLUTE
    main.c                                   0x00000000   Number         0  main.o ABSOLUTE
    py32md3xx_it.c                           0x00000000   Number         0  py32md3xx_it.o ABSOLUTE
    py32md3xx_ll_adc.c                       0x00000000   Number         0  py32md3xx_ll_adc.o ABSOLUTE
    py32md3xx_ll_comp.c                      0x00000000   Number         0  py32md3xx_ll_comp.o ABSOLUTE
    py32md3xx_ll_crc.c                       0x00000000   Number         0  py32md3xx_ll_crc.o ABSOLUTE
    py32md3xx_ll_dma.c                       0x00000000   Number         0  py32md3xx_ll_dma.o ABSOLUTE
    py32md3xx_ll_exti.c                      0x00000000   Number         0  py32md3xx_ll_exti.o ABSOLUTE
    py32md3xx_ll_gpio.c                      0x00000000   Number         0  py32md3xx_ll_gpio.o ABSOLUTE
    py32md3xx_ll_i2c.c                       0x00000000   Number         0  py32md3xx_ll_i2c.o ABSOLUTE
    py32md3xx_ll_led.c                       0x00000000   Number         0  py32md3xx_ll_led.o ABSOLUTE
    py32md3xx_ll_lptim.c                     0x00000000   Number         0  py32md3xx_ll_lptim.o ABSOLUTE
    py32md3xx_ll_pwr.c                       0x00000000   Number         0  py32md3xx_ll_pwr.o ABSOLUTE
    py32md3xx_ll_rcc.c                       0x00000000   Number         0  py32md3xx_ll_rcc.o ABSOLUTE
    py32md3xx_ll_rtc.c                       0x00000000   Number         0  py32md3xx_ll_rtc.o ABSOLUTE
    py32md3xx_ll_spi.c                       0x00000000   Number         0  py32md3xx_ll_spi.o ABSOLUTE
    py32md3xx_ll_tim.c                       0x00000000   Number         0  py32md3xx_ll_tim.o ABSOLUTE
    py32md3xx_ll_usart.c                     0x00000000   Number         0  py32md3xx_ll_usart.o ABSOLUTE
    py32md3xx_ll_utils.c                     0x00000000   Number         0  py32md3xx_ll_utils.o ABSOLUTE
    startup_py32md320xx.s                    0x00000000   Number         0  startup_py32md320xx.o ABSOLUTE
    system_py32md3xx.c                       0x00000000   Number         0  system_py32md3xx.o ABSOLUTE
    trig_q15_func.c                          0x00000000   Number         0  trig_q15_func.o ABSOLUTE
    RESET                                    0x08000000   Section      192  startup_py32md320xx.o(RESET)
    .ARM.Collect$$$$00000000                 0x080000c0   Section        0  entry.o(.ARM.Collect$$$$00000000)
    .ARM.Collect$$$$00000001                 0x080000c0   Section        4  entry2.o(.ARM.Collect$$$$00000001)
    .ARM.Collect$$$$00000004                 0x080000c4   Section        4  entry5.o(.ARM.Collect$$$$00000004)
    .ARM.Collect$$$$00000008                 0x080000c8   Section        0  entry7b.o(.ARM.Collect$$$$00000008)
    .ARM.Collect$$$$0000000A                 0x080000c8   Section        0  entry8b.o(.ARM.Collect$$$$0000000A)
    .ARM.Collect$$$$0000000B                 0x080000c8   Section        8  entry9a.o(.ARM.Collect$$$$0000000B)
    __lit__00000000                          0x080000d0   Data           4  entry2.o(.ARM.Collect$$$$00002712)
    .ARM.Collect$$$$0000000D                 0x080000d0   Section        0  entry10a.o(.ARM.Collect$$$$0000000D)
    .ARM.Collect$$$$0000000F                 0x080000d0   Section        0  entry11a.o(.ARM.Collect$$$$0000000F)
    .ARM.Collect$$$$00002712                 0x080000d0   Section        4  entry2.o(.ARM.Collect$$$$00002712)
    .text                                    0x080000d4   Section       28  startup_py32md320xx.o(.text)
    .text                                    0x080000f0   Section        0  memseta.o(.text)
    .text                                    0x08000114   Section        0  uidiv_div0.o(.text)
    .text                                    0x08000154   Section       36  init.o(.text)
    [Anonymous Symbol]                       0x08000178   Section        0  system_py32md3xx.o(.text.$Sub$$main)
    __arm_cp.2_0                             0x0800019c   Number         4  system_py32md3xx.o(.text.$Sub$$main)
    __arm_cp.2_1                             0x080001a0   Number         4  system_py32md3xx.o(.text.$Sub$$main)
    APP_ADCConfig                            0x080001a5   Thumb Code   154  main.o(.text.APP_ADCConfig)
    [Anonymous Symbol]                       0x080001a4   Section        0  main.o(.text.APP_ADCConfig)
    APP_DMAConfig                            0x08000241   Thumb Code   160  main.o(.text.APP_DMAConfig)
    [Anonymous Symbol]                       0x08000240   Section        0  main.o(.text.APP_DMAConfig)
    __arm_cp.62_0                            0x080002e0   Number         4  main.o(.text.APP_DMAConfig)
    __arm_cp.62_1                            0x080002e4   Number         4  main.o(.text.APP_DMAConfig)
    __arm_cp.62_2                            0x080002e8   Number         4  main.o(.text.APP_DMAConfig)
    __arm_cp.62_3                            0x080002ec   Number         4  main.o(.text.APP_DMAConfig)
    __arm_cp.62_4                            0x080002f0   Number         4  main.o(.text.APP_DMAConfig)
    APP_GPIOConfig                           0x080002f5   Thumb Code    44  main.o(.text.APP_GPIOConfig)
    [Anonymous Symbol]                       0x080002f4   Section        0  main.o(.text.APP_GPIOConfig)
    APP_PWMChannelConfig                     0x08000321   Thumb Code   168  main.o(.text.APP_PWMChannelConfig)
    [Anonymous Symbol]                       0x08000320   Section        0  main.o(.text.APP_PWMChannelConfig)
    APP_SPI1Config                           0x080003c9   Thumb Code   168  main.o(.text.APP_SPI1Config)
    [Anonymous Symbol]                       0x080003c8   Section        0  main.o(.text.APP_SPI1Config)
    __arm_cp.20_0                            0x08000470   Number         4  main.o(.text.APP_SPI1Config)
    __arm_cp.20_1                            0x08000474   Number         4  main.o(.text.APP_SPI1Config)
    APP_SystemClockConfig                    0x08000479   Thumb Code    72  main.o(.text.APP_SystemClockConfig)
    [Anonymous Symbol]                       0x08000478   Section        0  main.o(.text.APP_SystemClockConfig)
    __arm_cp.16_0                            0x080004c0   Number         4  main.o(.text.APP_SystemClockConfig)
    __arm_cp.16_1                            0x080004c4   Number         4  main.o(.text.APP_SystemClockConfig)
    __arm_cp.16_2                            0x080004c8   Number         4  main.o(.text.APP_SystemClockConfig)
    APP_TIM1BaseConfig                       0x080004cd   Thumb Code    44  main.o(.text.APP_TIM1BaseConfig)
    [Anonymous Symbol]                       0x080004cc   Section        0  main.o(.text.APP_TIM1BaseConfig)
    __arm_cp.23_0                            0x080004f8   Number         4  main.o(.text.APP_TIM1BaseConfig)
    __arm_cp.23_1                            0x080004fc   Number         4  main.o(.text.APP_TIM1BaseConfig)
    APP_USARTConfig                          0x08000501   Thumb Code   116  main.o(.text.APP_USARTConfig)
    [Anonymous Symbol]                       0x08000500   Section        0  main.o(.text.APP_USARTConfig)
    __arm_cp.21_0                            0x08000574   Number         4  main.o(.text.APP_USARTConfig)
    [Anonymous Symbol]                       0x08000578   Section        0  py32md3xx_it.o(.text.HardFault_Handler)
    LL_ADC_Enable                            0x0800057d   Thumb Code    16  main.o(.text.LL_ADC_Enable)
    [Anonymous Symbol]                       0x0800057c   Section        0  main.o(.text.LL_ADC_Enable)
    LL_ADC_IsCalibrationOnGoing              0x0800058d   Thumb Code     8  main.o(.text.LL_ADC_IsCalibrationOnGoing)
    [Anonymous Symbol]                       0x0800058c   Section        0  main.o(.text.LL_ADC_IsCalibrationOnGoing)
    LL_ADC_REG_GetDMATransfer                0x08000595   Thumb Code    12  main.o(.text.LL_ADC_REG_GetDMATransfer)
    [Anonymous Symbol]                       0x08000594   Section        0  main.o(.text.LL_ADC_REG_GetDMATransfer)
    LL_ADC_REG_SetContinuousMode             0x080005a1   Thumb Code    16  main.o(.text.LL_ADC_REG_SetContinuousMode)
    [Anonymous Symbol]                       0x080005a0   Section        0  main.o(.text.LL_ADC_REG_SetContinuousMode)
    LL_ADC_REG_SetDMATransfer                0x080005b1   Thumb Code    16  main.o(.text.LL_ADC_REG_SetDMATransfer)
    [Anonymous Symbol]                       0x080005b0   Section        0  main.o(.text.LL_ADC_REG_SetDMATransfer)
    LL_ADC_REG_SetOverrun                    0x080005c1   Thumb Code    16  main.o(.text.LL_ADC_REG_SetOverrun)
    [Anonymous Symbol]                       0x080005c0   Section        0  main.o(.text.LL_ADC_REG_SetOverrun)
    LL_ADC_REG_SetSequencerChannels          0x080005d1   Thumb Code     8  main.o(.text.LL_ADC_REG_SetSequencerChannels)
    [Anonymous Symbol]                       0x080005d0   Section        0  main.o(.text.LL_ADC_REG_SetSequencerChannels)
    __arm_cp.53_0                            0x080005d8   Number         4  main.o(.text.LL_ADC_REG_SetSequencerChannels)
    LL_ADC_REG_SetSequencerDiscont           0x080005dd   Thumb Code    16  main.o(.text.LL_ADC_REG_SetSequencerDiscont)
    [Anonymous Symbol]                       0x080005dc   Section        0  main.o(.text.LL_ADC_REG_SetSequencerDiscont)
    LL_ADC_REG_SetTriggerEdge                0x080005ed   Thumb Code    20  main.o(.text.LL_ADC_REG_SetTriggerEdge)
    [Anonymous Symbol]                       0x080005ec   Section        0  main.o(.text.LL_ADC_REG_SetTriggerEdge)
    LL_ADC_REG_SetTriggerSource              0x08000601   Thumb Code    20  main.o(.text.LL_ADC_REG_SetTriggerSource)
    [Anonymous Symbol]                       0x08000600   Section        0  main.o(.text.LL_ADC_REG_SetTriggerSource)
    LL_ADC_REG_StartConversion               0x08000615   Thumb Code    16  main.o(.text.LL_ADC_REG_StartConversion)
    [Anonymous Symbol]                       0x08000614   Section        0  main.o(.text.LL_ADC_REG_StartConversion)
    LL_ADC_Reset                             0x08000625   Thumb Code    12  main.o(.text.LL_ADC_Reset)
    [Anonymous Symbol]                       0x08000624   Section        0  main.o(.text.LL_ADC_Reset)
    LL_ADC_SetClock                          0x08000631   Thumb Code    20  main.o(.text.LL_ADC_SetClock)
    [Anonymous Symbol]                       0x08000630   Section        0  main.o(.text.LL_ADC_SetClock)
    __arm_cp.43_0                            0x08000644   Number         4  main.o(.text.LL_ADC_SetClock)
    LL_ADC_SetCommonPathInternalCh           0x08000649   Thumb Code    16  main.o(.text.LL_ADC_SetCommonPathInternalCh)
    [Anonymous Symbol]                       0x08000648   Section        0  main.o(.text.LL_ADC_SetCommonPathInternalCh)
    __arm_cp.42_0                            0x08000658   Number         4  main.o(.text.LL_ADC_SetCommonPathInternalCh)
    LL_ADC_SetDataAlignment                  0x0800065d   Thumb Code    12  main.o(.text.LL_ADC_SetDataAlignment)
    [Anonymous Symbol]                       0x0800065c   Section        0  main.o(.text.LL_ADC_SetDataAlignment)
    LL_ADC_SetLowPowerMode                   0x08000669   Thumb Code    16  main.o(.text.LL_ADC_SetLowPowerMode)
    [Anonymous Symbol]                       0x08000668   Section        0  main.o(.text.LL_ADC_SetLowPowerMode)
    LL_ADC_SetResolution                     0x08000679   Thumb Code    12  main.o(.text.LL_ADC_SetResolution)
    [Anonymous Symbol]                       0x08000678   Section        0  main.o(.text.LL_ADC_SetResolution)
    __arm_cp.44_0                            0x08000684   Number         4  main.o(.text.LL_ADC_SetResolution)
    LL_ADC_SetSamplingTimeCommonChannels     0x08000689   Thumb Code    12  main.o(.text.LL_ADC_SetSamplingTimeCommonChannels)
    [Anonymous Symbol]                       0x08000688   Section        0  main.o(.text.LL_ADC_SetSamplingTimeCommonChannels)
    __arm_cp.47_0                            0x08000694   Number         4  main.o(.text.LL_ADC_SetSamplingTimeCommonChannels)
    LL_ADC_StartCalibration                  0x08000699   Thumb Code    16  main.o(.text.LL_ADC_StartCalibration)
    [Anonymous Symbol]                       0x08000698   Section        0  main.o(.text.LL_ADC_StartCalibration)
    __arm_cp.40_0                            0x080006a8   Number         4  main.o(.text.LL_ADC_StartCalibration)
    __arm_cp.40_1                            0x080006ac   Number         4  main.o(.text.LL_ADC_StartCalibration)
    LL_AHB1_GRP1_EnableClock                 0x080006b1   Thumb Code    24  main.o(.text.LL_AHB1_GRP1_EnableClock)
    [Anonymous Symbol]                       0x080006b0   Section        0  main.o(.text.LL_AHB1_GRP1_EnableClock)
    __arm_cp.65_0                            0x080006c8   Number         4  main.o(.text.LL_AHB1_GRP1_EnableClock)
    LL_APB1_GRP1_EnableClock                 0x080006cd   Thumb Code    28  main.o(.text.LL_APB1_GRP1_EnableClock)
    [Anonymous Symbol]                       0x080006cc   Section        0  main.o(.text.LL_APB1_GRP1_EnableClock)
    __arm_cp.60_0                            0x080006e8   Number         4  main.o(.text.LL_APB1_GRP1_EnableClock)
    LL_APB1_GRP2_EnableClock                 0x080006ed   Thumb Code    24  main.o(.text.LL_APB1_GRP2_EnableClock)
    [Anonymous Symbol]                       0x080006ec   Section        0  main.o(.text.LL_APB1_GRP2_EnableClock)
    __arm_cp.37_0                            0x08000704   Number         4  main.o(.text.LL_APB1_GRP2_EnableClock)
    LL_APB1_GRP2_ForceReset                  0x08000709   Thumb Code    16  main.o(.text.LL_APB1_GRP2_ForceReset)
    [Anonymous Symbol]                       0x08000708   Section        0  main.o(.text.LL_APB1_GRP2_ForceReset)
    LL_APB1_GRP2_ReleaseReset                0x08000719   Thumb Code    16  main.o(.text.LL_APB1_GRP2_ReleaseReset)
    [Anonymous Symbol]                       0x08000718   Section        0  main.o(.text.LL_APB1_GRP2_ReleaseReset)
    __arm_cp.57_0                            0x08000728   Number         4  main.o(.text.LL_APB1_GRP2_ReleaseReset)
    LL_DMA_ConfigTransfer                    0x0800072d   Thumb Code    24  main.o(.text.LL_DMA_ConfigTransfer)
    [Anonymous Symbol]                       0x0800072c   Section        0  main.o(.text.LL_DMA_ConfigTransfer)
    __arm_cp.66_2                            0x08000744   Number         4  main.o(.text.LL_DMA_ConfigTransfer)
    LL_DMA_DisableChannel                    0x08000749   Thumb Code    20  py32md3xx_it.o(.text.LL_DMA_DisableChannel)
    [Anonymous Symbol]                       0x08000748   Section        0  py32md3xx_it.o(.text.LL_DMA_DisableChannel)
    LL_DMA_EnableChannel                     0x0800075d   Thumb Code    20  main.o(.text.LL_DMA_EnableChannel)
    [Anonymous Symbol]                       0x0800075c   Section        0  main.o(.text.LL_DMA_EnableChannel)
    LL_DMA_EnableChannel                     0x08000771   Thumb Code    20  py32md3xx_it.o(.text.LL_DMA_EnableChannel)
    [Anonymous Symbol]                       0x08000770   Section        0  py32md3xx_it.o(.text.LL_DMA_EnableChannel)
    __arm_cp.18_1                            0x08000784   Number         4  py32md3xx_it.o(.text.LL_DMA_EnableChannel)
    LL_DMA_SetDataLength                     0x08000789   Thumb Code    24  main.o(.text.LL_DMA_SetDataLength)
    [Anonymous Symbol]                       0x08000788   Section        0  main.o(.text.LL_DMA_SetDataLength)
    LL_DMA_SetDataLength                     0x080007a1   Thumb Code    24  py32md3xx_it.o(.text.LL_DMA_SetDataLength)
    [Anonymous Symbol]                       0x080007a0   Section        0  py32md3xx_it.o(.text.LL_DMA_SetDataLength)
    __arm_cp.17_0                            0x080007b8   Number         4  py32md3xx_it.o(.text.LL_DMA_SetDataLength)
    __arm_cp.17_1                            0x080007bc   Number         4  py32md3xx_it.o(.text.LL_DMA_SetDataLength)
    __arm_cp.17_2                            0x080007c0   Number         4  py32md3xx_it.o(.text.LL_DMA_SetDataLength)
    LL_DMA_SetMemoryAddress                  0x080007c5   Thumb Code    16  main.o(.text.LL_DMA_SetMemoryAddress)
    [Anonymous Symbol]                       0x080007c4   Section        0  main.o(.text.LL_DMA_SetMemoryAddress)
    __arm_cp.70_1                            0x080007d4   Number         4  main.o(.text.LL_DMA_SetMemoryAddress)
    LL_DMA_SetPeriphAddress                  0x080007d9   Thumb Code    16  main.o(.text.LL_DMA_SetPeriphAddress)
    [Anonymous Symbol]                       0x080007d8   Section        0  main.o(.text.LL_DMA_SetPeriphAddress)
    __arm_cp.71_0                            0x080007e8   Number         4  main.o(.text.LL_DMA_SetPeriphAddress)
    __arm_cp.71_1                            0x080007ec   Number         4  main.o(.text.LL_DMA_SetPeriphAddress)
    LL_FLASH_ClearFlag_EOP                   0x080007f1   Thumb Code     8  main.o(.text.LL_FLASH_ClearFlag_EOP)
    [Anonymous Symbol]                       0x080007f0   Section        0  main.o(.text.LL_FLASH_ClearFlag_EOP)
    LL_FLASH_DisableIT_EOP                   0x080007f9   Thumb Code    16  main.o(.text.LL_FLASH_DisableIT_EOP)
    [Anonymous Symbol]                       0x080007f8   Section        0  main.o(.text.LL_FLASH_DisableIT_EOP)
    LL_FLASH_DisablePageErase                0x08000809   Thumb Code    12  main.o(.text.LL_FLASH_DisablePageErase)
    [Anonymous Symbol]                       0x08000808   Section        0  main.o(.text.LL_FLASH_DisablePageErase)
    LL_FLASH_DisablePageProgram              0x08000815   Thumb Code    12  main.o(.text.LL_FLASH_DisablePageProgram)
    [Anonymous Symbol]                       0x08000814   Section        0  main.o(.text.LL_FLASH_DisablePageProgram)
    LL_FLASH_EnableIT_EOP                    0x08000821   Thumb Code    16  main.o(.text.LL_FLASH_EnableIT_EOP)
    [Anonymous Symbol]                       0x08000820   Section        0  main.o(.text.LL_FLASH_EnableIT_EOP)
    LL_FLASH_EnablePageErase                 0x08000831   Thumb Code    12  main.o(.text.LL_FLASH_EnablePageErase)
    [Anonymous Symbol]                       0x08000830   Section        0  main.o(.text.LL_FLASH_EnablePageErase)
    LL_FLASH_EnablePageProgram               0x0800083d   Thumb Code    12  main.o(.text.LL_FLASH_EnablePageProgram)
    [Anonymous Symbol]                       0x0800083c   Section        0  main.o(.text.LL_FLASH_EnablePageProgram)
    LL_FLASH_EnablePageProgramStart          0x08000849   Thumb Code    16  main.o(.text.LL_FLASH_EnablePageProgramStart)
    [Anonymous Symbol]                       0x08000848   Section        0  main.o(.text.LL_FLASH_EnablePageProgramStart)
    LL_FLASH_GetLatency                      0x08000859   Thumb Code    12  py32md3xx_ll_utils.o(.text.LL_FLASH_GetLatency)
    [Anonymous Symbol]                       0x08000858   Section        0  py32md3xx_ll_utils.o(.text.LL_FLASH_GetLatency)
    LL_FLASH_IsActiveFlag_BUSY               0x08000865   Thumb Code    12  main.o(.text.LL_FLASH_IsActiveFlag_BUSY)
    [Anonymous Symbol]                       0x08000864   Section        0  main.o(.text.LL_FLASH_IsActiveFlag_BUSY)
    LL_FLASH_IsActiveFlag_EOP                0x08000871   Thumb Code    12  main.o(.text.LL_FLASH_IsActiveFlag_EOP)
    [Anonymous Symbol]                       0x08000870   Section        0  main.o(.text.LL_FLASH_IsActiveFlag_EOP)
    __arm_cp.6_0                             0x0800087c   Number         4  main.o(.text.LL_FLASH_IsActiveFlag_EOP)
    LL_FLASH_Lock                            0x08000881   Thumb Code    16  main.o(.text.LL_FLASH_Lock)
    [Anonymous Symbol]                       0x08000880   Section        0  main.o(.text.LL_FLASH_Lock)
    __arm_cp.13_0                            0x08000890   Number         4  main.o(.text.LL_FLASH_Lock)
    LL_FLASH_PageProgram                     0x08000895   Thumb Code    52  main.o(.text.LL_FLASH_PageProgram)
    [Anonymous Symbol]                       0x08000894   Section        0  main.o(.text.LL_FLASH_PageProgram)
    __arm_cp.11_1                            0x080008c8   Number         4  main.o(.text.LL_FLASH_PageProgram)
    LL_FLASH_SetEraseAddress                 0x080008cd   Thumb Code    12  main.o(.text.LL_FLASH_SetEraseAddress)
    [Anonymous Symbol]                       0x080008cc   Section        0  main.o(.text.LL_FLASH_SetEraseAddress)
    __arm_cp.5_0                             0x080008d8   Number         4  main.o(.text.LL_FLASH_SetEraseAddress)
    LL_FLASH_SetLatency                      0x080008dd   Thumb Code    16  py32md3xx_ll_utils.o(.text.LL_FLASH_SetLatency)
    [Anonymous Symbol]                       0x080008dc   Section        0  py32md3xx_ll_utils.o(.text.LL_FLASH_SetLatency)
    __arm_cp.12_0                            0x080008ec   Number         4  py32md3xx_ll_utils.o(.text.LL_FLASH_SetLatency)
    LL_FLASH_Unlock                          0x080008f1   Thumb Code    20  main.o(.text.LL_FLASH_Unlock)
    [Anonymous Symbol]                       0x080008f0   Section        0  main.o(.text.LL_FLASH_Unlock)
    __arm_cp.1_0                             0x08000904   Number         4  main.o(.text.LL_FLASH_Unlock)
    __arm_cp.1_1                             0x08000908   Number         4  main.o(.text.LL_FLASH_Unlock)
    __arm_cp.1_2                             0x0800090c   Number         4  main.o(.text.LL_FLASH_Unlock)
    [Anonymous Symbol]                       0x08000910   Section        0  py32md3xx_ll_gpio.o(.text.LL_GPIO_Init)
    LL_GPIO_ResetOutputPin                   0x08000991   Thumb Code     8  main.o(.text.LL_GPIO_ResetOutputPin)
    [Anonymous Symbol]                       0x08000990   Section        0  main.o(.text.LL_GPIO_ResetOutputPin)
    LL_GPIO_ResetOutputPin                   0x08000999   Thumb Code    12  foc.o(.text.LL_GPIO_ResetOutputPin)
    [Anonymous Symbol]                       0x08000998   Section        0  foc.o(.text.LL_GPIO_ResetOutputPin)
    __arm_cp.1_0                             0x080009a4   Number         4  foc.o(.text.LL_GPIO_ResetOutputPin)
    LL_GPIO_SetAFPin_0_7                     0x080009a9   Thumb Code    20  py32md3xx_ll_gpio.o(.text.LL_GPIO_SetAFPin_0_7)
    [Anonymous Symbol]                       0x080009a8   Section        0  py32md3xx_ll_gpio.o(.text.LL_GPIO_SetAFPin_0_7)
    LL_GPIO_SetAFPin_8_15                    0x080009bd   Thumb Code    22  py32md3xx_ll_gpio.o(.text.LL_GPIO_SetAFPin_8_15)
    [Anonymous Symbol]                       0x080009bc   Section        0  py32md3xx_ll_gpio.o(.text.LL_GPIO_SetAFPin_8_15)
    LL_GPIO_SetOutputPin                     0x080009d5   Thumb Code    12  main.o(.text.LL_GPIO_SetOutputPin)
    [Anonymous Symbol]                       0x080009d4   Section        0  main.o(.text.LL_GPIO_SetOutputPin)
    LL_GPIO_SetOutputPin                     0x080009e1   Thumb Code    12  foc.o(.text.LL_GPIO_SetOutputPin)
    [Anonymous Symbol]                       0x080009e0   Section        0  foc.o(.text.LL_GPIO_SetOutputPin)
    __arm_cp.6_0                             0x080009ec   Number         4  foc.o(.text.LL_GPIO_SetOutputPin)
    LL_GPIO_SetPinMode                       0x080009f1   Thumb Code    18  py32md3xx_ll_gpio.o(.text.LL_GPIO_SetPinMode)
    [Anonymous Symbol]                       0x080009f0   Section        0  py32md3xx_ll_gpio.o(.text.LL_GPIO_SetPinMode)
    LL_GPIO_SetPinOutputType                 0x08000a03   Thumb Code    12  py32md3xx_ll_gpio.o(.text.LL_GPIO_SetPinOutputType)
    [Anonymous Symbol]                       0x08000a02   Section        0  py32md3xx_ll_gpio.o(.text.LL_GPIO_SetPinOutputType)
    LL_GPIO_SetPinPull                       0x08000a0f   Thumb Code    18  py32md3xx_ll_gpio.o(.text.LL_GPIO_SetPinPull)
    [Anonymous Symbol]                       0x08000a0e   Section        0  py32md3xx_ll_gpio.o(.text.LL_GPIO_SetPinPull)
    LL_GPIO_SetPinSpeed                      0x08000a21   Thumb Code    18  py32md3xx_ll_gpio.o(.text.LL_GPIO_SetPinSpeed)
    [Anonymous Symbol]                       0x08000a20   Section        0  py32md3xx_ll_gpio.o(.text.LL_GPIO_SetPinSpeed)
    LL_GPIO_TogglePin                        0x08000a35   Thumb Code    12  py32md3xx_it.o(.text.LL_GPIO_TogglePin)
    [Anonymous Symbol]                       0x08000a34   Section        0  py32md3xx_it.o(.text.LL_GPIO_TogglePin)
    __arm_cp.19_0                            0x08000a40   Number         4  py32md3xx_it.o(.text.LL_GPIO_TogglePin)
    LL_IOP_GRP1_EnableClock                  0x08000a45   Thumb Code    24  main.o(.text.LL_IOP_GRP1_EnableClock)
    [Anonymous Symbol]                       0x08000a44   Section        0  main.o(.text.LL_IOP_GRP1_EnableClock)
    __arm_cp.35_0                            0x08000a5c   Number         4  main.o(.text.LL_IOP_GRP1_EnableClock)
    [Anonymous Symbol]                       0x08000a60   Section        0  py32md3xx_ll_utils.o(.text.LL_Init1msTick)
    LL_InitTick                              0x08000a69   Thumb Code    28  py32md3xx_ll_utils.o(.text.LL_InitTick)
    [Anonymous Symbol]                       0x08000a68   Section        0  py32md3xx_ll_utils.o(.text.LL_InitTick)
    __arm_cp.1_0                             0x08000a84   Number         4  py32md3xx_ll_utils.o(.text.LL_InitTick)
    [Anonymous Symbol]                       0x08000a88   Section        0  py32md3xx_ll_utils.o(.text.LL_PLL_ConfigSystemClock_HSI)
    __arm_cp.4_0                             0x08000ad8   Number         4  py32md3xx_ll_utils.o(.text.LL_PLL_ConfigSystemClock_HSI)
    LL_RCC_GetAHBPrescaler                   0x08000add   Thumb Code    12  py32md3xx_ll_rcc.o(.text.LL_RCC_GetAHBPrescaler)
    [Anonymous Symbol]                       0x08000adc   Section        0  py32md3xx_ll_rcc.o(.text.LL_RCC_GetAHBPrescaler)
    LL_RCC_GetAPB1Prescaler                  0x08000ae9   Thumb Code    12  py32md3xx_ll_rcc.o(.text.LL_RCC_GetAPB1Prescaler)
    [Anonymous Symbol]                       0x08000ae8   Section        0  py32md3xx_ll_rcc.o(.text.LL_RCC_GetAPB1Prescaler)
    LL_RCC_GetHSIDiv                         0x08000af5   Thumb Code    12  py32md3xx_ll_rcc.o(.text.LL_RCC_GetHSIDiv)
    [Anonymous Symbol]                       0x08000af4   Section        0  py32md3xx_ll_rcc.o(.text.LL_RCC_GetHSIDiv)
    LL_RCC_GetSysClkSource                   0x08000b01   Thumb Code    12  py32md3xx_ll_utils.o(.text.LL_RCC_GetSysClkSource)
    [Anonymous Symbol]                       0x08000b00   Section        0  py32md3xx_ll_utils.o(.text.LL_RCC_GetSysClkSource)
    LL_RCC_GetSysClkSource                   0x08000b0d   Thumb Code    12  py32md3xx_ll_rcc.o(.text.LL_RCC_GetSysClkSource)
    [Anonymous Symbol]                       0x08000b0c   Section        0  py32md3xx_ll_rcc.o(.text.LL_RCC_GetSysClkSource)
    [Anonymous Symbol]                       0x08000b18   Section        0  py32md3xx_ll_rcc.o(.text.LL_RCC_GetSystemClocksFreq)
    LL_RCC_HSI_Enable                        0x08000b31   Thumb Code    16  main.o(.text.LL_RCC_HSI_Enable)
    [Anonymous Symbol]                       0x08000b30   Section        0  main.o(.text.LL_RCC_HSI_Enable)
    LL_RCC_HSI_Enable                        0x08000b41   Thumb Code    16  py32md3xx_ll_utils.o(.text.LL_RCC_HSI_Enable)
    [Anonymous Symbol]                       0x08000b40   Section        0  py32md3xx_ll_utils.o(.text.LL_RCC_HSI_Enable)
    LL_RCC_HSI_GetFreq                       0x08000b51   Thumb Code    16  py32md3xx_ll_utils.o(.text.LL_RCC_HSI_GetFreq)
    [Anonymous Symbol]                       0x08000b50   Section        0  py32md3xx_ll_utils.o(.text.LL_RCC_HSI_GetFreq)
    LL_RCC_HSI_GetFreq                       0x08000b61   Thumb Code    16  py32md3xx_ll_rcc.o(.text.LL_RCC_HSI_GetFreq)
    [Anonymous Symbol]                       0x08000b60   Section        0  py32md3xx_ll_rcc.o(.text.LL_RCC_HSI_GetFreq)
    __arm_cp.12_1                            0x08000b70   Number         4  py32md3xx_ll_rcc.o(.text.LL_RCC_HSI_GetFreq)
    LL_RCC_HSI_IsReady                       0x08000b75   Thumb Code    12  main.o(.text.LL_RCC_HSI_IsReady)
    [Anonymous Symbol]                       0x08000b74   Section        0  main.o(.text.LL_RCC_HSI_IsReady)
    LL_RCC_HSI_IsReady                       0x08000b81   Thumb Code    12  py32md3xx_ll_utils.o(.text.LL_RCC_HSI_IsReady)
    [Anonymous Symbol]                       0x08000b80   Section        0  py32md3xx_ll_utils.o(.text.LL_RCC_HSI_IsReady)
    LL_RCC_HSI_SetCalibFreq                  0x08000b8d   Thumb Code    16  main.o(.text.LL_RCC_HSI_SetCalibFreq)
    [Anonymous Symbol]                       0x08000b8c   Section        0  main.o(.text.LL_RCC_HSI_SetCalibFreq)
    __arm_cp.31_0                            0x08000b9c   Number         4  main.o(.text.LL_RCC_HSI_SetCalibFreq)
    __arm_cp.31_1                            0x08000ba0   Number         4  main.o(.text.LL_RCC_HSI_SetCalibFreq)
    LL_RCC_PLL_Enable                        0x08000ba5   Thumb Code    16  py32md3xx_ll_utils.o(.text.LL_RCC_PLL_Enable)
    [Anonymous Symbol]                       0x08000ba4   Section        0  py32md3xx_ll_utils.o(.text.LL_RCC_PLL_Enable)
    LL_RCC_PLL_GetMainSource                 0x08000bb5   Thumb Code     8  py32md3xx_ll_rcc.o(.text.LL_RCC_PLL_GetMainSource)
    [Anonymous Symbol]                       0x08000bb4   Section        0  py32md3xx_ll_rcc.o(.text.LL_RCC_PLL_GetMainSource)
    LL_RCC_PLL_IsReady                       0x08000bbd   Thumb Code    12  py32md3xx_ll_utils.o(.text.LL_RCC_PLL_IsReady)
    [Anonymous Symbol]                       0x08000bbc   Section        0  py32md3xx_ll_utils.o(.text.LL_RCC_PLL_IsReady)
    __arm_cp.14_0                            0x08000bc8   Number         4  py32md3xx_ll_utils.o(.text.LL_RCC_PLL_IsReady)
    LL_RCC_PLL_SetMainSource                 0x08000bcd   Thumb Code    12  py32md3xx_ll_utils.o(.text.LL_RCC_PLL_SetMainSource)
    [Anonymous Symbol]                       0x08000bcc   Section        0  py32md3xx_ll_utils.o(.text.LL_RCC_PLL_SetMainSource)
    __arm_cp.9_0                             0x08000bd8   Number         4  py32md3xx_ll_utils.o(.text.LL_RCC_PLL_SetMainSource)
    LL_RCC_SetAHBPrescaler                   0x08000bdd   Thumb Code    16  main.o(.text.LL_RCC_SetAHBPrescaler)
    [Anonymous Symbol]                       0x08000bdc   Section        0  main.o(.text.LL_RCC_SetAHBPrescaler)
    LL_RCC_SetAHBPrescaler                   0x08000bed   Thumb Code    16  py32md3xx_ll_utils.o(.text.LL_RCC_SetAHBPrescaler)
    [Anonymous Symbol]                       0x08000bec   Section        0  py32md3xx_ll_utils.o(.text.LL_RCC_SetAHBPrescaler)
    LL_RCC_SetAPB1Prescaler                  0x08000bfd   Thumb Code    16  main.o(.text.LL_RCC_SetAPB1Prescaler)
    [Anonymous Symbol]                       0x08000bfc   Section        0  main.o(.text.LL_RCC_SetAPB1Prescaler)
    LL_RCC_SetAPB1Prescaler                  0x08000c0d   Thumb Code    16  py32md3xx_ll_utils.o(.text.LL_RCC_SetAPB1Prescaler)
    [Anonymous Symbol]                       0x08000c0c   Section        0  py32md3xx_ll_utils.o(.text.LL_RCC_SetAPB1Prescaler)
    LL_RCC_SetSysClkSource                   0x08000c1d   Thumb Code    16  py32md3xx_ll_utils.o(.text.LL_RCC_SetSysClkSource)
    [Anonymous Symbol]                       0x08000c1c   Section        0  py32md3xx_ll_utils.o(.text.LL_RCC_SetSysClkSource)
    __arm_cp.17_0                            0x08000c2c   Number         4  py32md3xx_ll_utils.o(.text.LL_RCC_SetSysClkSource)
    LL_SPI_Enable                            0x08000c31   Thumb Code    12  main.o(.text.LL_SPI_Enable)
    [Anonymous Symbol]                       0x08000c30   Section        0  main.o(.text.LL_SPI_Enable)
    __arm_cp.59_0                            0x08000c3c   Number         4  main.o(.text.LL_SPI_Enable)
    [Anonymous Symbol]                       0x08000c40   Section        0  py32md3xx_ll_spi.o(.text.LL_SPI_Init)
    __arm_cp.5_0                             0x08000ca8   Number         4  py32md3xx_ll_spi.o(.text.LL_SPI_Init)
    __arm_cp.5_1                             0x08000cac   Number         4  py32md3xx_ll_spi.o(.text.LL_SPI_Init)
    LL_SPI_IsActiveFlag_RXNE                 0x08000cb1   Thumb Code    12  foc.o(.text.LL_SPI_IsActiveFlag_RXNE)
    [Anonymous Symbol]                       0x08000cb0   Section        0  foc.o(.text.LL_SPI_IsActiveFlag_RXNE)
    LL_SPI_IsActiveFlag_TXE                  0x08000cbd   Thumb Code    12  foc.o(.text.LL_SPI_IsActiveFlag_TXE)
    [Anonymous Symbol]                       0x08000cbc   Section        0  foc.o(.text.LL_SPI_IsActiveFlag_TXE)
    __arm_cp.2_0                             0x08000cc8   Number         4  foc.o(.text.LL_SPI_IsActiveFlag_TXE)
    LL_SPI_IsEnabled                         0x08000ccd   Thumb Code     8  py32md3xx_ll_spi.o(.text.LL_SPI_IsEnabled)
    [Anonymous Symbol]                       0x08000ccc   Section        0  py32md3xx_ll_spi.o(.text.LL_SPI_IsEnabled)
    LL_SPI_ReceiveData16                     0x08000cd5   Thumb Code     8  foc.o(.text.LL_SPI_ReceiveData16)
    [Anonymous Symbol]                       0x08000cd4   Section        0  foc.o(.text.LL_SPI_ReceiveData16)
    LL_SPI_SetRxFIFOThreshold                0x08000cdd   Thumb Code    14  py32md3xx_ll_spi.o(.text.LL_SPI_SetRxFIFOThreshold)
    [Anonymous Symbol]                       0x08000cdc   Section        0  py32md3xx_ll_spi.o(.text.LL_SPI_SetRxFIFOThreshold)
    LL_SPI_TransmitData16                    0x08000ced   Thumb Code     8  foc.o(.text.LL_SPI_TransmitData16)
    [Anonymous Symbol]                       0x08000cec   Section        0  foc.o(.text.LL_SPI_TransmitData16)
    __arm_cp.3_0                             0x08000cf4   Number         4  foc.o(.text.LL_SPI_TransmitData16)
    __arm_cp.3_1                             0x08000cf8   Number         4  foc.o(.text.LL_SPI_TransmitData16)
    LL_SYSCFG_SetDMARemap_CH1                0x08000cfd   Thumb Code    16  main.o(.text.LL_SYSCFG_SetDMARemap_CH1)
    [Anonymous Symbol]                       0x08000cfc   Section        0  main.o(.text.LL_SYSCFG_SetDMARemap_CH1)
    LL_SYSCFG_SetDMARemap_CH2                0x08000d0d   Thumb Code    20  main.o(.text.LL_SYSCFG_SetDMARemap_CH2)
    [Anonymous Symbol]                       0x08000d0c   Section        0  main.o(.text.LL_SYSCFG_SetDMARemap_CH2)
    LL_SYSCFG_SetDMARemap_CH3                0x08000d21   Thumb Code    16  main.o(.text.LL_SYSCFG_SetDMARemap_CH3)
    [Anonymous Symbol]                       0x08000d20   Section        0  main.o(.text.LL_SYSCFG_SetDMARemap_CH3)
    __arm_cp.69_0                            0x08000d30   Number         4  main.o(.text.LL_SYSCFG_SetDMARemap_CH3)
    [Anonymous Symbol]                       0x08000d34   Section        0  py32md3xx_ll_utils.o(.text.LL_SetFlashLatency)
    __arm_cp.11_0                            0x08000d70   Number         4  py32md3xx_ll_utils.o(.text.LL_SetFlashLatency)
    __arm_cp.11_1                            0x08000d74   Number         4  py32md3xx_ll_utils.o(.text.LL_SetFlashLatency)
    [Anonymous Symbol]                       0x08000d78   Section        0  py32md3xx_ll_utils.o(.text.LL_SetSystemCoreClock)
    __arm_cp.3_0                             0x08000d80   Number         4  py32md3xx_ll_utils.o(.text.LL_SetSystemCoreClock)
    LL_TIM_ClearFlag_UPDATE                  0x08000d85   Thumb Code    12  py32md3xx_it.o(.text.LL_TIM_ClearFlag_UPDATE)
    [Anonymous Symbol]                       0x08000d84   Section        0  py32md3xx_it.o(.text.LL_TIM_ClearFlag_UPDATE)
    LL_TIM_DisableAllOutputs                 0x08000d91   Thumb Code    16  py32md3xx_it.o(.text.LL_TIM_DisableAllOutputs)
    [Anonymous Symbol]                       0x08000d90   Section        0  py32md3xx_it.o(.text.LL_TIM_DisableAllOutputs)
    LL_TIM_EnableAllOutputs                  0x08000da1   Thumb Code    16  main.o(.text.LL_TIM_EnableAllOutputs)
    [Anonymous Symbol]                       0x08000da0   Section        0  main.o(.text.LL_TIM_EnableAllOutputs)
    LL_TIM_EnableAllOutputs                  0x08000db1   Thumb Code    16  py32md3xx_it.o(.text.LL_TIM_EnableAllOutputs)
    [Anonymous Symbol]                       0x08000db0   Section        0  py32md3xx_it.o(.text.LL_TIM_EnableAllOutputs)
    __arm_cp.16_0                            0x08000dc0   Number         4  py32md3xx_it.o(.text.LL_TIM_EnableAllOutputs)
    LL_TIM_EnableCounter                     0x08000dc5   Thumb Code    12  main.o(.text.LL_TIM_EnableCounter)
    [Anonymous Symbol]                       0x08000dc4   Section        0  main.o(.text.LL_TIM_EnableCounter)
    LL_TIM_EnableIT_UPDATE                   0x08000dd1   Thumb Code    12  main.o(.text.LL_TIM_EnableIT_UPDATE)
    [Anonymous Symbol]                       0x08000dd0   Section        0  main.o(.text.LL_TIM_EnableIT_UPDATE)
    __arm_cp.25_0                            0x08000ddc   Number         4  main.o(.text.LL_TIM_EnableIT_UPDATE)
    LL_TIM_GenerateEvent_UPDATE              0x08000de1   Thumb Code    10  py32md3xx_ll_tim.o(.text.LL_TIM_GenerateEvent_UPDATE)
    [Anonymous Symbol]                       0x08000de0   Section        0  py32md3xx_ll_tim.o(.text.LL_TIM_GenerateEvent_UPDATE)
    [Anonymous Symbol]                       0x08000dec   Section        0  py32md3xx_ll_tim.o(.text.LL_TIM_Init)
    __arm_cp.6_0                             0x08000e74   Number         4  py32md3xx_ll_tim.o(.text.LL_TIM_Init)
    __arm_cp.6_1                             0x08000e78   Number         4  py32md3xx_ll_tim.o(.text.LL_TIM_Init)
    __arm_cp.6_2                             0x08000e7c   Number         4  py32md3xx_ll_tim.o(.text.LL_TIM_Init)
    __arm_cp.6_3                             0x08000e80   Number         4  py32md3xx_ll_tim.o(.text.LL_TIM_Init)
    __arm_cp.6_4                             0x08000e84   Number         4  py32md3xx_ll_tim.o(.text.LL_TIM_Init)
    __arm_cp.6_5                             0x08000e88   Number         4  py32md3xx_ll_tim.o(.text.LL_TIM_Init)
    LL_TIM_IsActiveFlag_UPDATE               0x08000e8d   Thumb Code    12  py32md3xx_it.o(.text.LL_TIM_IsActiveFlag_UPDATE)
    [Anonymous Symbol]                       0x08000e8c   Section        0  py32md3xx_it.o(.text.LL_TIM_IsActiveFlag_UPDATE)
    __arm_cp.6_0                             0x08000e98   Number         4  py32md3xx_it.o(.text.LL_TIM_IsActiveFlag_UPDATE)
    [Anonymous Symbol]                       0x08000e9c   Section        0  py32md3xx_ll_tim.o(.text.LL_TIM_OC_Init)
    LL_TIM_OC_SetCompareCH1                  0x08000eed   Thumb Code     8  foc.o(.text.LL_TIM_OC_SetCompareCH1)
    [Anonymous Symbol]                       0x08000eec   Section        0  foc.o(.text.LL_TIM_OC_SetCompareCH1)
    __arm_cp.8_0                             0x08000ef4   Number         4  foc.o(.text.LL_TIM_OC_SetCompareCH1)
    LL_TIM_OC_SetCompareCH1                  0x08000ef9   Thumb Code     4  py32md3xx_ll_tim.o(.text.LL_TIM_OC_SetCompareCH1)
    [Anonymous Symbol]                       0x08000ef8   Section        0  py32md3xx_ll_tim.o(.text.LL_TIM_OC_SetCompareCH1)
    LL_TIM_OC_SetCompareCH2                  0x08000efd   Thumb Code     8  foc.o(.text.LL_TIM_OC_SetCompareCH2)
    [Anonymous Symbol]                       0x08000efc   Section        0  foc.o(.text.LL_TIM_OC_SetCompareCH2)
    __arm_cp.9_0                             0x08000f04   Number         4  foc.o(.text.LL_TIM_OC_SetCompareCH2)
    LL_TIM_OC_SetCompareCH2                  0x08000f09   Thumb Code     4  py32md3xx_ll_tim.o(.text.LL_TIM_OC_SetCompareCH2)
    [Anonymous Symbol]                       0x08000f08   Section        0  py32md3xx_ll_tim.o(.text.LL_TIM_OC_SetCompareCH2)
    LL_TIM_OC_SetCompareCH3                  0x08000f0d   Thumb Code     8  foc.o(.text.LL_TIM_OC_SetCompareCH3)
    [Anonymous Symbol]                       0x08000f0c   Section        0  foc.o(.text.LL_TIM_OC_SetCompareCH3)
    __arm_cp.10_0                            0x08000f14   Number         4  foc.o(.text.LL_TIM_OC_SetCompareCH3)
    LL_TIM_OC_SetCompareCH3                  0x08000f19   Thumb Code     4  py32md3xx_ll_tim.o(.text.LL_TIM_OC_SetCompareCH3)
    [Anonymous Symbol]                       0x08000f18   Section        0  py32md3xx_ll_tim.o(.text.LL_TIM_OC_SetCompareCH3)
    LL_TIM_OC_SetCompareCH4                  0x08000f1d   Thumb Code     4  py32md3xx_ll_tim.o(.text.LL_TIM_OC_SetCompareCH4)
    [Anonymous Symbol]                       0x08000f1c   Section        0  py32md3xx_ll_tim.o(.text.LL_TIM_OC_SetCompareCH4)
    LL_TIM_SetAutoReload                     0x08000f21   Thumb Code     4  py32md3xx_ll_tim.o(.text.LL_TIM_SetAutoReload)
    [Anonymous Symbol]                       0x08000f20   Section        0  py32md3xx_ll_tim.o(.text.LL_TIM_SetAutoReload)
    LL_TIM_SetPrescaler                      0x08000f25   Thumb Code     4  py32md3xx_ll_tim.o(.text.LL_TIM_SetPrescaler)
    [Anonymous Symbol]                       0x08000f24   Section        0  py32md3xx_ll_tim.o(.text.LL_TIM_SetPrescaler)
    LL_TIM_SetRepetitionCounter              0x08000f29   Thumb Code     4  py32md3xx_ll_tim.o(.text.LL_TIM_SetRepetitionCounter)
    [Anonymous Symbol]                       0x08000f28   Section        0  py32md3xx_ll_tim.o(.text.LL_TIM_SetRepetitionCounter)
    LL_TIM_SetTriggerOutput                  0x08000f2d   Thumb Code    16  main.o(.text.LL_TIM_SetTriggerOutput)
    [Anonymous Symbol]                       0x08000f2c   Section        0  main.o(.text.LL_TIM_SetTriggerOutput)
    __arm_cp.78_0                            0x08000f3c   Number         4  main.o(.text.LL_TIM_SetTriggerOutput)
    LL_USART_ClearFlag_IDLE                  0x08000f41   Thumb Code    20  py32md3xx_it.o(.text.LL_USART_ClearFlag_IDLE)
    [Anonymous Symbol]                       0x08000f40   Section        0  py32md3xx_it.o(.text.LL_USART_ClearFlag_IDLE)
    LL_USART_ClearFlag_ORE                   0x08000f55   Thumb Code    20  main.o(.text.LL_USART_ClearFlag_ORE)
    [Anonymous Symbol]                       0x08000f54   Section        0  main.o(.text.LL_USART_ClearFlag_ORE)
    LL_USART_ClearFlag_ORE                   0x08000f69   Thumb Code    20  py32md3xx_it.o(.text.LL_USART_ClearFlag_ORE)
    [Anonymous Symbol]                       0x08000f68   Section        0  py32md3xx_it.o(.text.LL_USART_ClearFlag_ORE)
    LL_USART_ClearFlag_TC                    0x08000f7d   Thumb Code    12  main.o(.text.LL_USART_ClearFlag_TC)
    [Anonymous Symbol]                       0x08000f7c   Section        0  main.o(.text.LL_USART_ClearFlag_TC)
    LL_USART_ConfigAsyncMode                 0x08000f89   Thumb Code    24  main.o(.text.LL_USART_ConfigAsyncMode)
    [Anonymous Symbol]                       0x08000f88   Section        0  main.o(.text.LL_USART_ConfigAsyncMode)
    __arm_cp.61_0                            0x08000fa0   Number         4  main.o(.text.LL_USART_ConfigAsyncMode)
    LL_USART_Enable                          0x08000fa5   Thumb Code    16  main.o(.text.LL_USART_Enable)
    [Anonymous Symbol]                       0x08000fa4   Section        0  main.o(.text.LL_USART_Enable)
    LL_USART_EnableDMAReq_RX                 0x08000fb5   Thumb Code    12  main.o(.text.LL_USART_EnableDMAReq_RX)
    [Anonymous Symbol]                       0x08000fb4   Section        0  main.o(.text.LL_USART_EnableDMAReq_RX)
    LL_USART_EnableDMAReq_TX                 0x08000fc1   Thumb Code    12  main.o(.text.LL_USART_EnableDMAReq_TX)
    [Anonymous Symbol]                       0x08000fc0   Section        0  main.o(.text.LL_USART_EnableDMAReq_TX)
    __arm_cp.74_0                            0x08000fcc   Number         4  main.o(.text.LL_USART_EnableDMAReq_TX)
    LL_USART_EnableIT_IDLE                   0x08000fd1   Thumb Code    12  main.o(.text.LL_USART_EnableIT_IDLE)
    [Anonymous Symbol]                       0x08000fd0   Section        0  main.o(.text.LL_USART_EnableIT_IDLE)
    __arm_cp.63_0                            0x08000fdc   Number         4  main.o(.text.LL_USART_EnableIT_IDLE)
    [Anonymous Symbol]                       0x08000fe0   Section        0  py32md3xx_ll_usart.o(.text.LL_USART_Init)
    __arm_cp.5_0                             0x08001048   Number         4  py32md3xx_ll_usart.o(.text.LL_USART_Init)
    LL_USART_IsActiveFlag_IDLE               0x0800104d   Thumb Code    12  py32md3xx_it.o(.text.LL_USART_IsActiveFlag_IDLE)
    [Anonymous Symbol]                       0x0800104c   Section        0  py32md3xx_it.o(.text.LL_USART_IsActiveFlag_IDLE)
    LL_USART_IsActiveFlag_ORE                0x08001059   Thumb Code    12  py32md3xx_it.o(.text.LL_USART_IsActiveFlag_ORE)
    [Anonymous Symbol]                       0x08001058   Section        0  py32md3xx_it.o(.text.LL_USART_IsActiveFlag_ORE)
    __arm_cp.20_0                            0x08001064   Number         4  py32md3xx_it.o(.text.LL_USART_IsActiveFlag_ORE)
    LL_USART_IsEnabled                       0x08001069   Thumb Code     8  py32md3xx_ll_usart.o(.text.LL_USART_IsEnabled)
    [Anonymous Symbol]                       0x08001068   Section        0  py32md3xx_ll_usart.o(.text.LL_USART_IsEnabled)
    LL_USART_SetBaudRate                     0x08001071   Thumb Code   132  py32md3xx_ll_usart.o(.text.LL_USART_SetBaudRate)
    [Anonymous Symbol]                       0x08001070   Section        0  py32md3xx_ll_usart.o(.text.LL_USART_SetBaudRate)
    __arm_cp.9_0                             0x080010f4   Number         4  py32md3xx_ll_usart.o(.text.LL_USART_SetBaudRate)
    LL_USART_SetHWFlowCtrl                   0x080010f9   Thumb Code    14  py32md3xx_ll_usart.o(.text.LL_USART_SetHWFlowCtrl)
    [Anonymous Symbol]                       0x080010f8   Section        0  py32md3xx_ll_usart.o(.text.LL_USART_SetHWFlowCtrl)
    LL_USART_SetStopBitsLength               0x08001107   Thumb Code    14  py32md3xx_ll_usart.o(.text.LL_USART_SetStopBitsLength)
    [Anonymous Symbol]                       0x08001106   Section        0  py32md3xx_ll_usart.o(.text.LL_USART_SetStopBitsLength)
    [Anonymous Symbol]                       0x08001114   Section        0  py32md3xx_ll_utils.o(.text.LL_mDelay)
    __arm_cp.2_0                             0x08001138   Number         4  py32md3xx_ll_utils.o(.text.LL_mDelay)
    [Anonymous Symbol]                       0x0800113c   Section        0  main.o(.text.Load_MotorConf)
    __arm_cp.14_0                            0x0800115c   Number         4  main.o(.text.Load_MotorConf)
    __arm_cp.14_1                            0x08001160   Number         4  main.o(.text.Load_MotorConf)
    __arm_cp.14_2                            0x08001164   Number         4  main.o(.text.Load_MotorConf)
    [Anonymous Symbol]                       0x08001168   Section        0  py32md3xx_it.o(.text.NMI_Handler)
    NVIC_Config                              0x0800116b   Thumb Code    32  main.o(.text.NVIC_Config)
    [Anonymous Symbol]                       0x0800116a   Section        0  main.o(.text.NVIC_Config)
    OC1Config                                0x0800118d   Thumb Code   124  py32md3xx_ll_tim.o(.text.OC1Config)
    [Anonymous Symbol]                       0x0800118c   Section        0  py32md3xx_ll_tim.o(.text.OC1Config)
    __arm_cp.13_1                            0x08001208   Number         4  py32md3xx_ll_tim.o(.text.OC1Config)
    __arm_cp.13_2                            0x0800120c   Number         4  py32md3xx_ll_tim.o(.text.OC1Config)
    OC2Config                                0x08001211   Thumb Code   140  py32md3xx_ll_tim.o(.text.OC2Config)
    [Anonymous Symbol]                       0x08001210   Section        0  py32md3xx_ll_tim.o(.text.OC2Config)
    __arm_cp.14_3                            0x0800129c   Number         4  py32md3xx_ll_tim.o(.text.OC2Config)
    OC3Config                                0x080012a1   Thumb Code   140  py32md3xx_ll_tim.o(.text.OC3Config)
    [Anonymous Symbol]                       0x080012a0   Section        0  py32md3xx_ll_tim.o(.text.OC3Config)
    __arm_cp.15_0                            0x0800132c   Number         4  py32md3xx_ll_tim.o(.text.OC3Config)
    __arm_cp.15_4                            0x08001330   Number         4  py32md3xx_ll_tim.o(.text.OC3Config)
    OC4Config                                0x08001335   Thumb Code   112  py32md3xx_ll_tim.o(.text.OC4Config)
    [Anonymous Symbol]                       0x08001334   Section        0  py32md3xx_ll_tim.o(.text.OC4Config)
    __arm_cp.16_0                            0x080013a4   Number         4  py32md3xx_ll_tim.o(.text.OC4Config)
    __arm_cp.16_1                            0x080013a8   Number         4  py32md3xx_ll_tim.o(.text.OC4Config)
    __arm_cp.16_2                            0x080013ac   Number         4  py32md3xx_ll_tim.o(.text.OC4Config)
    [Anonymous Symbol]                       0x080013b0   Section        0  py32md3xx_it.o(.text.PendSV_Handler)
    Q15_Multiply                             0x080013b3   Thumb Code    14  py32md3xx_it.o(.text.Q15_Multiply)
    [Anonymous Symbol]                       0x080013b2   Section        0  py32md3xx_it.o(.text.Q15_Multiply)
    Q15_Multiply                             0x080013c1   Thumb Code    14  foc.o(.text.Q15_Multiply)
    [Anonymous Symbol]                       0x080013c0   Section        0  foc.o(.text.Q15_Multiply)
    [Anonymous Symbol]                       0x080013d0   Section        0  py32md3xx_ll_rcc.o(.text.RCC_GetHCLKClockFreq)
    __arm_cp.8_0                             0x080013ec   Number         4  py32md3xx_ll_rcc.o(.text.RCC_GetHCLKClockFreq)
    [Anonymous Symbol]                       0x080013f0   Section        0  py32md3xx_ll_rcc.o(.text.RCC_GetPCLK1ClockFreq)
    __arm_cp.9_0                             0x0800140c   Number         4  py32md3xx_ll_rcc.o(.text.RCC_GetPCLK1ClockFreq)
    [Anonymous Symbol]                       0x08001410   Section        0  py32md3xx_ll_rcc.o(.text.RCC_GetSystemClockFreq)
    __arm_cp.7_1                             0x08001448   Number         4  py32md3xx_ll_rcc.o(.text.RCC_GetSystemClockFreq)
    [Anonymous Symbol]                       0x0800144c   Section        0  py32md3xx_ll_rcc.o(.text.RCC_PLL_GetFreqDomain_SYS)
    [Anonymous Symbol]                       0x0800145a   Section        0  foc.o(.text.Read_encoder)
    [Anonymous Symbol]                       0x08001484   Section        0  py32md3xx_it.o(.text.SVC_Handler)
    [Anonymous Symbol]                       0x08001488   Section        0  main.o(.text.Save_MotorConf)
    __arm_cp.0_0                             0x0800150c   Number         4  main.o(.text.Save_MotorConf)
    [Anonymous Symbol]                       0x08001510   Section        0  py32md3xx_it.o(.text.SysTick_Handler)
    [Anonymous Symbol]                       0x08001514   Section        0  system_py32md3xx.o(.text.SystemInit)
    __arm_cp.1_0                             0x08001538   Number         4  system_py32md3xx.o(.text.SystemInit)
    __arm_cp.1_1                             0x0800153c   Number         4  system_py32md3xx.o(.text.SystemInit)
    __arm_cp.1_2                             0x08001540   Number         4  system_py32md3xx.o(.text.SystemInit)
    __arm_cp.1_3                             0x08001544   Number         4  system_py32md3xx.o(.text.SystemInit)
    __arm_cp.1_4                             0x08001548   Number         4  system_py32md3xx.o(.text.SystemInit)
    [Anonymous Symbol]                       0x0800154c   Section        0  py32md3xx_it.o(.text.TIM1_BRK_UP_TRG_COM_IRQHandler)
    __arm_cp.5_0                             0x0800179c   Number         4  py32md3xx_it.o(.text.TIM1_BRK_UP_TRG_COM_IRQHandler)
    __arm_cp.5_1                             0x080017a0   Number         4  py32md3xx_it.o(.text.TIM1_BRK_UP_TRG_COM_IRQHandler)
    __arm_cp.5_2                             0x080017a4   Number         4  py32md3xx_it.o(.text.TIM1_BRK_UP_TRG_COM_IRQHandler)
    __arm_cp.5_3                             0x080017a8   Number         4  py32md3xx_it.o(.text.TIM1_BRK_UP_TRG_COM_IRQHandler)
    __arm_cp.5_4                             0x080017ac   Number         4  py32md3xx_it.o(.text.TIM1_BRK_UP_TRG_COM_IRQHandler)
    __arm_cp.5_5                             0x080017b0   Number         4  py32md3xx_it.o(.text.TIM1_BRK_UP_TRG_COM_IRQHandler)
    __arm_cp.5_6                             0x080017b4   Number         4  py32md3xx_it.o(.text.TIM1_BRK_UP_TRG_COM_IRQHandler)
    __arm_cp.5_7                             0x080017b8   Number         4  py32md3xx_it.o(.text.TIM1_BRK_UP_TRG_COM_IRQHandler)
    __arm_cp.5_8                             0x080017bc   Number         4  py32md3xx_it.o(.text.TIM1_BRK_UP_TRG_COM_IRQHandler)
    __arm_cp.5_11                            0x080017c0   Number         4  py32md3xx_it.o(.text.TIM1_BRK_UP_TRG_COM_IRQHandler)
    __arm_cp.5_12                            0x080017c4   Number         4  py32md3xx_it.o(.text.TIM1_BRK_UP_TRG_COM_IRQHandler)
    __arm_cp.5_13                            0x080017c8   Number         4  py32md3xx_it.o(.text.TIM1_BRK_UP_TRG_COM_IRQHandler)
    __arm_cp.5_14                            0x080017cc   Number         4  py32md3xx_it.o(.text.TIM1_BRK_UP_TRG_COM_IRQHandler)
    [Anonymous Symbol]                       0x080017d0   Section        0  py32md3xx_it.o(.text.USART2_IRQHandler)
    __arm_cp.11_0                            0x08001a00   Number         4  py32md3xx_it.o(.text.USART2_IRQHandler)
    __arm_cp.11_1                            0x08001a04   Number         4  py32md3xx_it.o(.text.USART2_IRQHandler)
    __arm_cp.11_3                            0x08001a08   Number         4  py32md3xx_it.o(.text.USART2_IRQHandler)
    __arm_cp.11_4                            0x08001a0c   Number         4  py32md3xx_it.o(.text.USART2_IRQHandler)
    __arm_cp.11_5                            0x08001a10   Number         4  py32md3xx_it.o(.text.USART2_IRQHandler)
    __arm_cp.11_6                            0x08001a14   Number         4  py32md3xx_it.o(.text.USART2_IRQHandler)
    UTILS_EnablePLLAndSwitchSystem           0x08001a19   Thumb Code   120  py32md3xx_ll_utils.o(.text.UTILS_EnablePLLAndSwitchSystem)
    [Anonymous Symbol]                       0x08001a18   Section        0  py32md3xx_ll_utils.o(.text.UTILS_EnablePLLAndSwitchSystem)
    __arm_cp.10_0                            0x08001a90   Number         4  py32md3xx_ll_utils.o(.text.UTILS_EnablePLLAndSwitchSystem)
    __arm_cp.10_1                            0x08001a94   Number         4  py32md3xx_ll_utils.o(.text.UTILS_EnablePLLAndSwitchSystem)
    UTILS_PLL_IsBusy                         0x08001a99   Thumb Code    12  py32md3xx_ll_utils.o(.text.UTILS_PLL_IsBusy)
    [Anonymous Symbol]                       0x08001a98   Section        0  py32md3xx_ll_utils.o(.text.UTILS_PLL_IsBusy)
    __NVIC_EnableIRQ                         0x08001aa5   Thumb Code    16  main.o(.text.__NVIC_EnableIRQ)
    [Anonymous Symbol]                       0x08001aa4   Section        0  main.o(.text.__NVIC_EnableIRQ)
    __arm_cp.80_0                            0x08001ab4   Number         4  main.o(.text.__NVIC_EnableIRQ)
    __NVIC_SetPriority                       0x08001ab9   Thumb Code    28  main.o(.text.__NVIC_SetPriority)
    [Anonymous Symbol]                       0x08001ab8   Section        0  main.o(.text.__NVIC_SetPriority)
    __arm_cp.79_0                            0x08001ad4   Number         4  main.o(.text.__NVIC_SetPriority)
    fast_cos_q15_raw                         0x08001ad9   Thumb Code    16  py32md3xx_it.o(.text.fast_cos_q15_raw)
    [Anonymous Symbol]                       0x08001ad8   Section        0  py32md3xx_it.o(.text.fast_cos_q15_raw)
    fast_sin_q15_raw                         0x08001ae9   Thumb Code    40  py32md3xx_it.o(.text.fast_sin_q15_raw)
    [Anonymous Symbol]                       0x08001ae8   Section        0  py32md3xx_it.o(.text.fast_sin_q15_raw)
    __arm_cp.9_0                             0x08001b10   Number         4  py32md3xx_it.o(.text.fast_sin_q15_raw)
    __arm_cp.9_1                             0x08001b14   Number         4  py32md3xx_it.o(.text.fast_sin_q15_raw)
    [Anonymous Symbol]                       0x08001b18   Section        0  main.o(.text.main)
    __arm_cp.15_0                            0x08001b90   Number         4  main.o(.text.main)
    __arm_cp.15_1                            0x08001b94   Number         4  main.o(.text.main)
    __arm_cp.15_2                            0x08001b98   Number         4  main.o(.text.main)
    __arm_cp.15_3                            0x08001b9c   Number         4  main.o(.text.main)
    __arm_cp.15_4                            0x08001ba0   Number         4  main.o(.text.main)
    __arm_cp.15_5                            0x08001ba4   Number         4  main.o(.text.main)
    __arm_cp.15_6                            0x08001ba8   Number         4  main.o(.text.main)
    __arm_cp.15_7                            0x08001bac   Number         4  main.o(.text.main)
    __arm_cp.15_8                            0x08001bb0   Number         4  main.o(.text.main)
    [Anonymous Symbol]                       0x08001bb4   Section        0  foc.o(.text.setZero)
    __arm_cp.12_0                            0x08001c00   Number         4  foc.o(.text.setZero)
    __arm_cp.12_1                            0x08001c04   Number         4  foc.o(.text.setZero)
    __arm_cp.12_2                            0x08001c08   Number         4  foc.o(.text.setZero)
    __arm_cp.12_3                            0x08001c0c   Number         4  foc.o(.text.setZero)
    __arm_cp.12_4                            0x08001c10   Number         4  foc.o(.text.setZero)
    [Anonymous Symbol]                       0x08001c14   Section        0  foc.o(.text.set_PWM_level)
    __arm_cp.7_0                             0x08001db0   Number         4  foc.o(.text.set_PWM_level)
    __arm_cp.7_1                             0x08001db4   Number         4  foc.o(.text.set_PWM_level)
    __arm_cp.7_2                             0x08001db8   Number         4  foc.o(.text.set_PWM_level)
    sector_lookup                            0x08001dbc   Number         0  foc.o(.text.set_PWM_level)
    __arm_cp.7_4                             0x08001dc4   Number         4  foc.o(.text.set_PWM_level)
    __arm_cp.7_5                             0x08001dc8   Number         4  foc.o(.text.set_PWM_level)
    __arm_cp.7_6                             0x08001dcc   Number         4  foc.o(.text.set_PWM_level)
    __arm_cp.7_7                             0x08001dd0   Number         4  foc.o(.text.set_PWM_level)
    __arm_cp.7_8                             0x08001dd4   Number         4  foc.o(.text.set_PWM_level)
    i.__scatterload_copy                     0x08001dd8   Section       14  handlers.o(i.__scatterload_copy)
    i.__scatterload_null                     0x08001de6   Section        2  handlers.o(i.__scatterload_null)
    i.__scatterload_zeroinit                 0x08001de8   Section       14  handlers.o(i.__scatterload_zeroinit)
    CHANNEL_OFFSET_TAB                       0x08001e58   Data           3  main.o(.rodata.CHANNEL_OFFSET_TAB)
    [Anonymous Symbol]                       0x08001e58   Section        0  main.o(.rodata.CHANNEL_OFFSET_TAB)
    CHANNEL_OFFSET_TAB                       0x08001e5b   Data           3  py32md3xx_it.o(.rodata.CHANNEL_OFFSET_TAB)
    [Anonymous Symbol]                       0x08001e5b   Section        0  py32md3xx_it.o(.rodata.CHANNEL_OFFSET_TAB)
    T1                                       0x200000d0   Data           2  foc.o(.bss.T1)
    [Anonymous Symbol]                       0x200000d0   Section        0  foc.o(.bss.T1)
    T2                                       0x200000d2   Data           2  foc.o(.bss.T2)
    [Anonymous Symbol]                       0x200000d2   Section        0  foc.o(.bss.T2)
    level_u                                  0x20000170   Data           2  foc.o(.bss.level_u)
    [Anonymous Symbol]                       0x20000170   Section        0  foc.o(.bss.level_u)
    level_v                                  0x20000172   Data           2  foc.o(.bss.level_v)
    [Anonymous Symbol]                       0x20000172   Section        0  foc.o(.bss.level_v)
    level_w                                  0x20000174   Data           2  foc.o(.bss.level_w)
    [Anonymous Symbol]                       0x20000174   Section        0  foc.o(.bss.level_w)
    STACK                                    0x200001b0   Section     1024  startup_py32md320xx.o(STACK)

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv3M$S$PE$A:L22$X:L11$S22$IEEE1$IW$~IW$USESV6$~STKCKD$USESV7$~SHL$OTIME$EBA8$MICROLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    __decompress                              - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _microlib_exit                            - Undefined Weak Reference
    __Vectors_Size                           0x000000c0   Number         0  startup_py32md320xx.o ABSOLUTE
    __Vectors                                0x08000000   Data           4  startup_py32md320xx.o(RESET)
    __Vectors_End                            0x080000c0   Data           0  startup_py32md320xx.o(RESET)
    __main                                   0x080000c1   Thumb Code     0  entry.o(.ARM.Collect$$$$00000000)
    _main_stk                                0x080000c1   Thumb Code     0  entry2.o(.ARM.Collect$$$$00000001)
    _main_scatterload                        0x080000c5   Thumb Code     0  entry5.o(.ARM.Collect$$$$00000004)
    __main_after_scatterload                 0x080000c9   Thumb Code     0  entry5.o(.ARM.Collect$$$$00000004)
    _main_clock                              0x080000c9   Thumb Code     0  entry7b.o(.ARM.Collect$$$$00000008)
    _main_cpp_init                           0x080000c9   Thumb Code     0  entry8b.o(.ARM.Collect$$$$0000000A)
    _main_init                               0x080000c9   Thumb Code     0  entry9a.o(.ARM.Collect$$$$0000000B)
    __rt_final_cpp                           0x080000d1   Thumb Code     0  entry10a.o(.ARM.Collect$$$$0000000D)
    __rt_final_exit                          0x080000d1   Thumb Code     0  entry11a.o(.ARM.Collect$$$$0000000F)
    Reset_Handler                            0x080000d5   Thumb Code     8  startup_py32md320xx.o(.text)
    ADC_COMP_IRQHandler                      0x080000e7   Thumb Code     0  startup_py32md320xx.o(.text)
    DMA1_Channel1_IRQHandler                 0x080000e7   Thumb Code     0  startup_py32md320xx.o(.text)
    DMA1_Channel2_3_IRQHandler               0x080000e7   Thumb Code     0  startup_py32md320xx.o(.text)
    EXTI0_1_IRQHandler                       0x080000e7   Thumb Code     0  startup_py32md320xx.o(.text)
    EXTI2_3_IRQHandler                       0x080000e7   Thumb Code     0  startup_py32md320xx.o(.text)
    EXTI4_15_IRQHandler                      0x080000e7   Thumb Code     0  startup_py32md320xx.o(.text)
    FLASH_IRQHandler                         0x080000e7   Thumb Code     0  startup_py32md320xx.o(.text)
    I2C1_IRQHandler                          0x080000e7   Thumb Code     0  startup_py32md320xx.o(.text)
    LPTIM1_IRQHandler                        0x080000e7   Thumb Code     0  startup_py32md320xx.o(.text)
    PVD_IRQHandler                           0x080000e7   Thumb Code     0  startup_py32md320xx.o(.text)
    RCC_IRQHandler                           0x080000e7   Thumb Code     0  startup_py32md320xx.o(.text)
    RTC_IRQHandler                           0x080000e7   Thumb Code     0  startup_py32md320xx.o(.text)
    SPI1_IRQHandler                          0x080000e7   Thumb Code     0  startup_py32md320xx.o(.text)
    SPI2_IRQHandler                          0x080000e7   Thumb Code     0  startup_py32md320xx.o(.text)
    TIM14_IRQHandler                         0x080000e7   Thumb Code     0  startup_py32md320xx.o(.text)
    TIM16_IRQHandler                         0x080000e7   Thumb Code     0  startup_py32md320xx.o(.text)
    TIM17_IRQHandler                         0x080000e7   Thumb Code     0  startup_py32md320xx.o(.text)
    TIM1_CC_IRQHandler                       0x080000e7   Thumb Code     0  startup_py32md320xx.o(.text)
    TIM3_IRQHandler                          0x080000e7   Thumb Code     0  startup_py32md320xx.o(.text)
    USART1_IRQHandler                        0x080000e7   Thumb Code     0  startup_py32md320xx.o(.text)
    WWDG_IRQHandler                          0x080000e7   Thumb Code     0  startup_py32md320xx.o(.text)
    __aeabi_memset                           0x080000f1   Thumb Code    14  memseta.o(.text)
    __aeabi_memset4                          0x080000f1   Thumb Code     0  memseta.o(.text)
    __aeabi_memset8                          0x080000f1   Thumb Code     0  memseta.o(.text)
    __aeabi_memclr                           0x080000ff   Thumb Code     4  memseta.o(.text)
    __aeabi_memclr4                          0x080000ff   Thumb Code     0  memseta.o(.text)
    __aeabi_memclr8                          0x080000ff   Thumb Code     0  memseta.o(.text)
    _memset$wrapper                          0x08000103   Thumb Code    18  memseta.o(.text)
    __aeabi_uidiv                            0x08000115   Thumb Code     0  uidiv_div0.o(.text)
    __aeabi_uidivmod                         0x08000115   Thumb Code    62  uidiv_div0.o(.text)
    __scatterload                            0x08000155   Thumb Code    28  init.o(.text)
    __scatterload_rt2                        0x08000155   Thumb Code     0  init.o(.text)
    main                                     0x08000179   Thumb Code    36  system_py32md3xx.o(.text.$Sub$$main)
    HardFault_Handler                        0x08000579   Thumb Code     2  py32md3xx_it.o(.text.HardFault_Handler)
    LL_GPIO_Init                             0x08000911   Thumb Code   128  py32md3xx_ll_gpio.o(.text.LL_GPIO_Init)
    LL_Init1msTick                           0x08000a61   Thumb Code     8  py32md3xx_ll_utils.o(.text.LL_Init1msTick)
    LL_PLL_ConfigSystemClock_HSI             0x08000a89   Thumb Code    80  py32md3xx_ll_utils.o(.text.LL_PLL_ConfigSystemClock_HSI)
    LL_RCC_GetSystemClocksFreq               0x08000b19   Thumb Code    24  py32md3xx_ll_rcc.o(.text.LL_RCC_GetSystemClocksFreq)
    LL_SPI_Init                              0x08000c41   Thumb Code   104  py32md3xx_ll_spi.o(.text.LL_SPI_Init)
    LL_SetFlashLatency                       0x08000d35   Thumb Code    60  py32md3xx_ll_utils.o(.text.LL_SetFlashLatency)
    LL_SetSystemCoreClock                    0x08000d79   Thumb Code     8  py32md3xx_ll_utils.o(.text.LL_SetSystemCoreClock)
    LL_TIM_Init                              0x08000ded   Thumb Code   136  py32md3xx_ll_tim.o(.text.LL_TIM_Init)
    LL_TIM_OC_Init                           0x08000e9d   Thumb Code    80  py32md3xx_ll_tim.o(.text.LL_TIM_OC_Init)
    LL_USART_Init                            0x08000fe1   Thumb Code   104  py32md3xx_ll_usart.o(.text.LL_USART_Init)
    LL_mDelay                                0x08001115   Thumb Code    36  py32md3xx_ll_utils.o(.text.LL_mDelay)
    Load_MotorConf                           0x0800113d   Thumb Code    32  main.o(.text.Load_MotorConf)
    NMI_Handler                              0x08001169   Thumb Code     2  py32md3xx_it.o(.text.NMI_Handler)
    PendSV_Handler                           0x080013b1   Thumb Code     2  py32md3xx_it.o(.text.PendSV_Handler)
    RCC_GetHCLKClockFreq                     0x080013d1   Thumb Code    28  py32md3xx_ll_rcc.o(.text.RCC_GetHCLKClockFreq)
    RCC_GetPCLK1ClockFreq                    0x080013f1   Thumb Code    28  py32md3xx_ll_rcc.o(.text.RCC_GetPCLK1ClockFreq)
    RCC_GetSystemClockFreq                   0x08001411   Thumb Code    56  py32md3xx_ll_rcc.o(.text.RCC_GetSystemClockFreq)
    RCC_PLL_GetFreqDomain_SYS                0x0800144d   Thumb Code    14  py32md3xx_ll_rcc.o(.text.RCC_PLL_GetFreqDomain_SYS)
    Read_encoder                             0x0800145b   Thumb Code    42  foc.o(.text.Read_encoder)
    SVC_Handler                              0x08001485   Thumb Code     2  py32md3xx_it.o(.text.SVC_Handler)
    Save_MotorConf                           0x08001489   Thumb Code   132  main.o(.text.Save_MotorConf)
    SysTick_Handler                          0x08001511   Thumb Code     2  py32md3xx_it.o(.text.SysTick_Handler)
    SystemInit                               0x08001515   Thumb Code    36  system_py32md3xx.o(.text.SystemInit)
    TIM1_BRK_UP_TRG_COM_IRQHandler           0x0800154d   Thumb Code   592  py32md3xx_it.o(.text.TIM1_BRK_UP_TRG_COM_IRQHandler)
    USART2_IRQHandler                        0x080017d1   Thumb Code   560  py32md3xx_it.o(.text.USART2_IRQHandler)
    $Super$$main                             0x08001b19   Thumb Code   120  main.o(.text.main)
    setZero                                  0x08001bb5   Thumb Code    76  foc.o(.text.setZero)
    set_PWM_level                            0x08001c15   Thumb Code   412  foc.o(.text.set_PWM_level)
    __scatterload_copy                       0x08001dd9   Thumb Code    14  handlers.o(i.__scatterload_copy)
    __scatterload_null                       0x08001de7   Thumb Code     2  handlers.o(i.__scatterload_null)
    __scatterload_zeroinit                   0x08001de9   Thumb Code    14  handlers.o(i.__scatterload_zeroinit)
    AHBPrescTable                            0x08001df8   Data          64  system_py32md3xx.o(.rodata.AHBPrescTable)
    APBPrescTable                            0x08001e38   Data          32  system_py32md3xx.o(.rodata.APBPrescTable)
    HSIFreqTable                             0x08001e60   Data          32  system_py32md3xx.o(.rodata.HSIFreqTable)
    sin_q15_table_512                        0x08001e80   Data         258  trig_q15_func.o(.rodata.sin_q15_table_512)
    Region$$Table$$Base                      0x08001f84   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x08001fa4   Number         0  anon$$obj.o(Region$$Table)
    VECT_SRAM_TAB                            0x20000000   Data         192  system_py32md3xx.o(.ARM.__at_0x20000000)
    SystemCoreClock                          0x200000c0   Data           4  system_py32md3xx.o(.data.SystemCoreClock)
    CommandBuffer                            0x200000c8   Data           6  py32md3xx_it.o(.bss.CommandBuffer)
    Speed_subCounter                         0x200000ce   Data           1  py32md3xx_it.o(.bss.Speed_subCounter)
    conf                                     0x200000d4   Data          24  main.o(.bss.conf)
    d_raw_angle                              0x200000ec   Data           2  py32md3xx_it.o(.bss.d_raw_angle)
    electric_angle                           0x200000ee   Data           2  py32md3xx_it.o(.bss.electric_angle)
    flash_buffer                             0x200000f0   Data         128  main.o(.bss.flash_buffer)
    motor                                    0x20000176   Data          32  main.o(.bss.motor)
    position                                 0x20000196   Data          10  py32md3xx_it.o(.bss.position)
    sign                                     0x200001a0   Data           1  py32md3xx_it.o(.bss.sign)
    speed                                    0x200001a2   Data          10  py32md3xx_it.o(.bss.speed)
    __initial_sp                             0x200005b0   Data           0  startup_py32md320xx.o(STACK)



==============================================================================

Memory Map of the image

  Image Entry point : 0x080000c1

  Load Region LR_IROM1 (Base: 0x08000000, Size: 0x00002070, Max: 0x00010000, ABSOLUTE)

    Execution Region ER_IROM1 (Exec base: 0x08000000, Load base: 0x08000000, Size: 0x00001fa4, Max: 0x00010000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x08000000   0x08000000   0x000000c0   Data   RO           22    RESET               startup_py32md320xx.o
    0x080000c0   0x080000c0   0x00000000   Code   RO          836  * .ARM.Collect$$$$00000000  mc_p.l(entry.o)
    0x080000c0   0x080000c0   0x00000004   Code   RO          847    .ARM.Collect$$$$00000001  mc_p.l(entry2.o)
    0x080000c4   0x080000c4   0x00000004   Code   RO          850    .ARM.Collect$$$$00000004  mc_p.l(entry5.o)
    0x080000c8   0x080000c8   0x00000000   Code   RO          852    .ARM.Collect$$$$00000008  mc_p.l(entry7b.o)
    0x080000c8   0x080000c8   0x00000000   Code   RO          854    .ARM.Collect$$$$0000000A  mc_p.l(entry8b.o)
    0x080000c8   0x080000c8   0x00000008   Code   RO          855    .ARM.Collect$$$$0000000B  mc_p.l(entry9a.o)
    0x080000d0   0x080000d0   0x00000000   Code   RO          857    .ARM.Collect$$$$0000000D  mc_p.l(entry10a.o)
    0x080000d0   0x080000d0   0x00000000   Code   RO          859    .ARM.Collect$$$$0000000F  mc_p.l(entry11a.o)
    0x080000d0   0x080000d0   0x00000004   Code   RO          848    .ARM.Collect$$$$00002712  mc_p.l(entry2.o)
    0x080000d4   0x080000d4   0x0000001c   Code   RO           23    .text               startup_py32md320xx.o
    0x080000f0   0x080000f0   0x00000024   Code   RO          845    .text               mc_p.l(memseta.o)
    0x08000114   0x08000114   0x0000003e   Code   RO          865    .text               mc_p.l(uidiv_div0.o)
    0x08000152   0x08000152   0x00000002   PAD
    0x08000154   0x08000154   0x00000024   Code   RO          871    .text               mc_p.l(init.o)
    0x08000178   0x08000178   0x0000002c   Code   RO            6    .text.$Sub$$main    system_py32md3xx.o
    0x080001a4   0x080001a4   0x0000009a   Code   RO           68    .text.APP_ADCConfig  main.o
    0x0800023e   0x0800023e   0x00000002   PAD
    0x08000240   0x08000240   0x000000b4   Code   RO          154    .text.APP_DMAConfig  main.o
    0x080002f4   0x080002f4   0x0000002c   Code   RO           66    .text.APP_GPIOConfig  main.o
    0x08000320   0x08000320   0x000000a8   Code   RO           74    .text.APP_PWMChannelConfig  main.o
    0x080003c8   0x080003c8   0x000000b0   Code   RO           70    .text.APP_SPI1Config  main.o
    0x08000478   0x08000478   0x00000054   Code   RO           62    .text.APP_SystemClockConfig  main.o
    0x080004cc   0x080004cc   0x00000034   Code   RO           76    .text.APP_TIM1BaseConfig  main.o
    0x08000500   0x08000500   0x00000078   Code   RO           72    .text.APP_USARTConfig  main.o
    0x08000578   0x08000578   0x00000002   Code   RO          207    .text.HardFault_Handler  py32md3xx_it.o
    0x0800057a   0x0800057a   0x00000002   PAD
    0x0800057c   0x0800057c   0x00000010   Code   RO          138    .text.LL_ADC_Enable  main.o
    0x0800058c   0x0800058c   0x00000008   Code   RO          112    .text.LL_ADC_IsCalibrationOnGoing  main.o
    0x08000594   0x08000594   0x0000000c   Code   RO          106    .text.LL_ADC_REG_GetDMATransfer  main.o
    0x080005a0   0x080005a0   0x00000010   Code   RO          130    .text.LL_ADC_REG_SetContinuousMode  main.o
    0x080005b0   0x080005b0   0x00000010   Code   RO          108    .text.LL_ADC_REG_SetDMATransfer  main.o
    0x080005c0   0x080005c0   0x00000010   Code   RO          132    .text.LL_ADC_REG_SetOverrun  main.o
    0x080005d0   0x080005d0   0x0000000c   Code   RO          136    .text.LL_ADC_REG_SetSequencerChannels  main.o
    0x080005dc   0x080005dc   0x00000010   Code   RO          134    .text.LL_ADC_REG_SetSequencerDiscont  main.o
    0x080005ec   0x080005ec   0x00000014   Code   RO          128    .text.LL_ADC_REG_SetTriggerEdge  main.o
    0x08000600   0x08000600   0x00000014   Code   RO          126    .text.LL_ADC_REG_SetTriggerSource  main.o
    0x08000614   0x08000614   0x00000010   Code   RO          140    .text.LL_ADC_REG_StartConversion  main.o
    0x08000624   0x08000624   0x0000000c   Code   RO          102    .text.LL_ADC_Reset  main.o
    0x08000630   0x08000630   0x00000018   Code   RO          116    .text.LL_ADC_SetClock  main.o
    0x08000648   0x08000648   0x00000014   Code   RO          114    .text.LL_ADC_SetCommonPathInternalCh  main.o
    0x0800065c   0x0800065c   0x0000000c   Code   RO          120    .text.LL_ADC_SetDataAlignment  main.o
    0x08000668   0x08000668   0x00000010   Code   RO          122    .text.LL_ADC_SetLowPowerMode  main.o
    0x08000678   0x08000678   0x00000010   Code   RO          118    .text.LL_ADC_SetResolution  main.o
    0x08000688   0x08000688   0x00000010   Code   RO          124    .text.LL_ADC_SetSamplingTimeCommonChannels  main.o
    0x08000698   0x08000698   0x00000018   Code   RO          110    .text.LL_ADC_StartCalibration  main.o
    0x080006b0   0x080006b0   0x0000001c   Code   RO          160    .text.LL_AHB1_GRP1_EnableClock  main.o
    0x080006cc   0x080006cc   0x00000020   Code   RO          150    .text.LL_APB1_GRP1_EnableClock  main.o
    0x080006ec   0x080006ec   0x0000001c   Code   RO          104    .text.LL_APB1_GRP2_EnableClock  main.o
    0x08000708   0x08000708   0x00000010   Code   RO          142    .text.LL_APB1_GRP2_ForceReset  main.o
    0x08000718   0x08000718   0x00000014   Code   RO          144    .text.LL_APB1_GRP2_ReleaseReset  main.o
    0x0800072c   0x0800072c   0x0000001c   Code   RO          162    .text.LL_DMA_ConfigTransfer  main.o
    0x08000748   0x08000748   0x00000014   Code   RO          233    .text.LL_DMA_DisableChannel  py32md3xx_it.o
    0x0800075c   0x0800075c   0x00000014   Code   RO          184    .text.LL_DMA_EnableChannel  main.o
    0x08000770   0x08000770   0x00000018   Code   RO          241    .text.LL_DMA_EnableChannel  py32md3xx_it.o
    0x08000788   0x08000788   0x00000018   Code   RO          182    .text.LL_DMA_SetDataLength  main.o
    0x080007a0   0x080007a0   0x00000024   Code   RO          239    .text.LL_DMA_SetDataLength  py32md3xx_it.o
    0x080007c4   0x080007c4   0x00000014   Code   RO          170    .text.LL_DMA_SetMemoryAddress  main.o
    0x080007d8   0x080007d8   0x00000018   Code   RO          172    .text.LL_DMA_SetPeriphAddress  main.o
    0x080007f0   0x080007f0   0x00000008   Code   RO           44    .text.LL_FLASH_ClearFlag_EOP  main.o
    0x080007f8   0x080007f8   0x00000010   Code   RO           46    .text.LL_FLASH_DisableIT_EOP  main.o
    0x08000808   0x08000808   0x0000000c   Code   RO           48    .text.LL_FLASH_DisablePageErase  main.o
    0x08000814   0x08000814   0x0000000c   Code   RO           54    .text.LL_FLASH_DisablePageProgram  main.o
    0x08000820   0x08000820   0x00000010   Code   RO           36    .text.LL_FLASH_EnableIT_EOP  main.o
    0x08000830   0x08000830   0x0000000c   Code   RO           38    .text.LL_FLASH_EnablePageErase  main.o
    0x0800083c   0x0800083c   0x0000000c   Code   RO           50    .text.LL_FLASH_EnablePageProgram  main.o
    0x08000848   0x08000848   0x00000010   Code   RO           88    .text.LL_FLASH_EnablePageProgramStart  main.o
    0x08000858   0x08000858   0x0000000c   Code   RO          336    .text.LL_FLASH_GetLatency  py32md3xx_ll_utils.o
    0x08000864   0x08000864   0x0000000c   Code   RO           34    .text.LL_FLASH_IsActiveFlag_BUSY  main.o
    0x08000870   0x08000870   0x00000010   Code   RO           42    .text.LL_FLASH_IsActiveFlag_EOP  main.o
    0x08000880   0x08000880   0x00000014   Code   RO           56    .text.LL_FLASH_Lock  main.o
    0x08000894   0x08000894   0x00000038   Code   RO           52    .text.LL_FLASH_PageProgram  main.o
    0x080008cc   0x080008cc   0x00000010   Code   RO           40    .text.LL_FLASH_SetEraseAddress  main.o
    0x080008dc   0x080008dc   0x00000014   Code   RO          334    .text.LL_FLASH_SetLatency  py32md3xx_ll_utils.o
    0x080008f0   0x080008f0   0x00000020   Code   RO           32    .text.LL_FLASH_Unlock  main.o
    0x08000910   0x08000910   0x00000080   Code   RO          489    .text.LL_GPIO_Init  py32md3xx_ll_gpio.o
    0x08000990   0x08000990   0x00000008   Code   RO           78    .text.LL_GPIO_ResetOutputPin  main.o
    0x08000998   0x08000998   0x00000010   Code   RO          267    .text.LL_GPIO_ResetOutputPin  foc.o
    0x080009a8   0x080009a8   0x00000014   Code   RO          497    .text.LL_GPIO_SetAFPin_0_7  py32md3xx_ll_gpio.o
    0x080009bc   0x080009bc   0x00000016   Code   RO          499    .text.LL_GPIO_SetAFPin_8_15  py32md3xx_ll_gpio.o
    0x080009d2   0x080009d2   0x00000002   PAD
    0x080009d4   0x080009d4   0x0000000c   Code   RO          146    .text.LL_GPIO_SetOutputPin  main.o
    0x080009e0   0x080009e0   0x00000010   Code   RO          277    .text.LL_GPIO_SetOutputPin  foc.o
    0x080009f0   0x080009f0   0x00000012   Code   RO          491    .text.LL_GPIO_SetPinMode  py32md3xx_ll_gpio.o
    0x08000a02   0x08000a02   0x0000000c   Code   RO          501    .text.LL_GPIO_SetPinOutputType  py32md3xx_ll_gpio.o
    0x08000a0e   0x08000a0e   0x00000012   Code   RO          495    .text.LL_GPIO_SetPinPull  py32md3xx_ll_gpio.o
    0x08000a20   0x08000a20   0x00000012   Code   RO          493    .text.LL_GPIO_SetPinSpeed  py32md3xx_ll_gpio.o
    0x08000a32   0x08000a32   0x00000002   PAD
    0x08000a34   0x08000a34   0x00000010   Code   RO          243    .text.LL_GPIO_TogglePin  py32md3xx_it.o
    0x08000a44   0x08000a44   0x0000001c   Code   RO          100    .text.LL_IOP_GRP1_EnableClock  main.o
    0x08000a60   0x08000a60   0x00000008   Code   RO          310    .text.LL_Init1msTick  py32md3xx_ll_utils.o
    0x08000a68   0x08000a68   0x00000020   Code   RO          312    .text.LL_InitTick   py32md3xx_ll_utils.o
    0x08000a88   0x08000a88   0x00000054   Code   RO          318    .text.LL_PLL_ConfigSystemClock_HSI  py32md3xx_ll_utils.o
    0x08000adc   0x08000adc   0x0000000c   Code   RO          627    .text.LL_RCC_GetAHBPrescaler  py32md3xx_ll_rcc.o
    0x08000ae8   0x08000ae8   0x0000000c   Code   RO          629    .text.LL_RCC_GetAPB1Prescaler  py32md3xx_ll_rcc.o
    0x08000af4   0x08000af4   0x0000000c   Code   RO          625    .text.LL_RCC_GetHSIDiv  py32md3xx_ll_rcc.o
    0x08000b00   0x08000b00   0x0000000c   Code   RO          346    .text.LL_RCC_GetSysClkSource  py32md3xx_ll_utils.o
    0x08000b0c   0x08000b0c   0x0000000c   Code   RO          583    .text.LL_RCC_GetSysClkSource  py32md3xx_ll_rcc.o
    0x08000b18   0x08000b18   0x00000018   Code   RO          587    .text.LL_RCC_GetSystemClocksFreq  py32md3xx_ll_rcc.o
    0x08000b30   0x08000b30   0x00000010   Code   RO           90    .text.LL_RCC_HSI_Enable  main.o
    0x08000b40   0x08000b40   0x00000010   Code   RO          326    .text.LL_RCC_HSI_Enable  py32md3xx_ll_utils.o
    0x08000b50   0x08000b50   0x00000010   Code   RO          322    .text.LL_RCC_HSI_GetFreq  py32md3xx_ll_utils.o
    0x08000b60   0x08000b60   0x00000014   Code   RO          599    .text.LL_RCC_HSI_GetFreq  py32md3xx_ll_rcc.o
    0x08000b74   0x08000b74   0x0000000c   Code   RO           94    .text.LL_RCC_HSI_IsReady  main.o
    0x08000b80   0x08000b80   0x0000000c   Code   RO          324    .text.LL_RCC_HSI_IsReady  py32md3xx_ll_utils.o
    0x08000b8c   0x08000b8c   0x00000018   Code   RO           92    .text.LL_RCC_HSI_SetCalibFreq  main.o
    0x08000ba4   0x08000ba4   0x00000010   Code   RO          340    .text.LL_RCC_PLL_Enable  py32md3xx_ll_utils.o
    0x08000bb4   0x08000bb4   0x00000008   Code   RO          631    .text.LL_RCC_PLL_GetMainSource  py32md3xx_ll_rcc.o
    0x08000bbc   0x08000bbc   0x00000010   Code   RO          338    .text.LL_RCC_PLL_IsReady  py32md3xx_ll_utils.o
    0x08000bcc   0x08000bcc   0x00000010   Code   RO          328    .text.LL_RCC_PLL_SetMainSource  py32md3xx_ll_utils.o
    0x08000bdc   0x08000bdc   0x00000010   Code   RO           96    .text.LL_RCC_SetAHBPrescaler  main.o
    0x08000bec   0x08000bec   0x00000010   Code   RO          342    .text.LL_RCC_SetAHBPrescaler  py32md3xx_ll_utils.o
    0x08000bfc   0x08000bfc   0x00000010   Code   RO           98    .text.LL_RCC_SetAPB1Prescaler  main.o
    0x08000c0c   0x08000c0c   0x00000010   Code   RO          348    .text.LL_RCC_SetAPB1Prescaler  py32md3xx_ll_utils.o
    0x08000c1c   0x08000c1c   0x00000014   Code   RO          344    .text.LL_RCC_SetSysClkSource  py32md3xx_ll_utils.o
    0x08000c30   0x08000c30   0x00000010   Code   RO          148    .text.LL_SPI_Enable  main.o
    0x08000c40   0x08000c40   0x00000070   Code   RO          709    .text.LL_SPI_Init   py32md3xx_ll_spi.o
    0x08000cb0   0x08000cb0   0x0000000c   Code   RO          273    .text.LL_SPI_IsActiveFlag_RXNE  foc.o
    0x08000cbc   0x08000cbc   0x00000010   Code   RO          269    .text.LL_SPI_IsActiveFlag_TXE  foc.o
    0x08000ccc   0x08000ccc   0x00000008   Code   RO          711    .text.LL_SPI_IsEnabled  py32md3xx_ll_spi.o
    0x08000cd4   0x08000cd4   0x00000008   Code   RO          275    .text.LL_SPI_ReceiveData16  foc.o
    0x08000cdc   0x08000cdc   0x0000000e   Code   RO          713    .text.LL_SPI_SetRxFIFOThreshold  py32md3xx_ll_spi.o
    0x08000cea   0x08000cea   0x00000002   PAD
    0x08000cec   0x08000cec   0x00000010   Code   RO          271    .text.LL_SPI_TransmitData16  foc.o
    0x08000cfc   0x08000cfc   0x00000010   Code   RO          164    .text.LL_SYSCFG_SetDMARemap_CH1  main.o
    0x08000d0c   0x08000d0c   0x00000014   Code   RO          166    .text.LL_SYSCFG_SetDMARemap_CH2  main.o
    0x08000d20   0x08000d20   0x00000014   Code   RO          168    .text.LL_SYSCFG_SetDMARemap_CH3  main.o
    0x08000d34   0x08000d34   0x00000044   Code   RO          332    .text.LL_SetFlashLatency  py32md3xx_ll_utils.o
    0x08000d78   0x08000d78   0x0000000c   Code   RO          316    .text.LL_SetSystemCoreClock  py32md3xx_ll_utils.o
    0x08000d84   0x08000d84   0x0000000c   Code   RO          219    .text.LL_TIM_ClearFlag_UPDATE  py32md3xx_it.o
    0x08000d90   0x08000d90   0x00000010   Code   RO          235    .text.LL_TIM_DisableAllOutputs  py32md3xx_it.o
    0x08000da0   0x08000da0   0x00000010   Code   RO           82    .text.LL_TIM_EnableAllOutputs  main.o
    0x08000db0   0x08000db0   0x00000014   Code   RO          237    .text.LL_TIM_EnableAllOutputs  py32md3xx_it.o
    0x08000dc4   0x08000dc4   0x0000000c   Code   RO           84    .text.LL_TIM_EnableCounter  main.o
    0x08000dd0   0x08000dd0   0x00000010   Code   RO           80    .text.LL_TIM_EnableIT_UPDATE  main.o
    0x08000de0   0x08000de0   0x0000000a   Code   RO          745    .text.LL_TIM_GenerateEvent_UPDATE  py32md3xx_ll_tim.o
    0x08000dea   0x08000dea   0x00000002   PAD
    0x08000dec   0x08000dec   0x000000a0   Code   RO          737    .text.LL_TIM_Init   py32md3xx_ll_tim.o
    0x08000e8c   0x08000e8c   0x00000010   Code   RO          217    .text.LL_TIM_IsActiveFlag_UPDATE  py32md3xx_it.o
    0x08000e9c   0x08000e9c   0x00000050   Code   RO          749    .text.LL_TIM_OC_Init  py32md3xx_ll_tim.o
    0x08000eec   0x08000eec   0x0000000c   Code   RO          281    .text.LL_TIM_OC_SetCompareCH1  foc.o
    0x08000ef8   0x08000ef8   0x00000004   Code   RO          787    .text.LL_TIM_OC_SetCompareCH1  py32md3xx_ll_tim.o
    0x08000efc   0x08000efc   0x0000000c   Code   RO          283    .text.LL_TIM_OC_SetCompareCH2  foc.o
    0x08000f08   0x08000f08   0x00000004   Code   RO          781    .text.LL_TIM_OC_SetCompareCH2  py32md3xx_ll_tim.o
    0x08000f0c   0x08000f0c   0x0000000c   Code   RO          285    .text.LL_TIM_OC_SetCompareCH3  foc.o
    0x08000f18   0x08000f18   0x00000004   Code   RO          789    .text.LL_TIM_OC_SetCompareCH3  py32md3xx_ll_tim.o
    0x08000f1c   0x08000f1c   0x00000004   Code   RO          791    .text.LL_TIM_OC_SetCompareCH4  py32md3xx_ll_tim.o
    0x08000f20   0x08000f20   0x00000004   Code   RO          739    .text.LL_TIM_SetAutoReload  py32md3xx_ll_tim.o
    0x08000f24   0x08000f24   0x00000004   Code   RO          741    .text.LL_TIM_SetPrescaler  py32md3xx_ll_tim.o
    0x08000f28   0x08000f28   0x00000004   Code   RO          743    .text.LL_TIM_SetRepetitionCounter  py32md3xx_ll_tim.o
    0x08000f2c   0x08000f2c   0x00000014   Code   RO          186    .text.LL_TIM_SetTriggerOutput  main.o
    0x08000f40   0x08000f40   0x00000014   Code   RO          231    .text.LL_USART_ClearFlag_IDLE  py32md3xx_it.o
    0x08000f54   0x08000f54   0x00000014   Code   RO          174    .text.LL_USART_ClearFlag_ORE  main.o
    0x08000f68   0x08000f68   0x00000014   Code   RO          247    .text.LL_USART_ClearFlag_ORE  py32md3xx_it.o
    0x08000f7c   0x08000f7c   0x0000000c   Code   RO          176    .text.LL_USART_ClearFlag_TC  main.o
    0x08000f88   0x08000f88   0x0000001c   Code   RO          152    .text.LL_USART_ConfigAsyncMode  main.o
    0x08000fa4   0x08000fa4   0x00000010   Code   RO          158    .text.LL_USART_Enable  main.o
    0x08000fb4   0x08000fb4   0x0000000c   Code   RO          180    .text.LL_USART_EnableDMAReq_RX  main.o
    0x08000fc0   0x08000fc0   0x00000010   Code   RO          178    .text.LL_USART_EnableDMAReq_TX  main.o
    0x08000fd0   0x08000fd0   0x00000010   Code   RO          156    .text.LL_USART_EnableIT_IDLE  main.o
    0x08000fe0   0x08000fe0   0x0000006c   Code   RO          811    .text.LL_USART_Init  py32md3xx_ll_usart.o
    0x0800104c   0x0800104c   0x0000000c   Code   RO          229    .text.LL_USART_IsActiveFlag_IDLE  py32md3xx_it.o
    0x08001058   0x08001058   0x00000010   Code   RO          245    .text.LL_USART_IsActiveFlag_ORE  py32md3xx_it.o
    0x08001068   0x08001068   0x00000008   Code   RO          813    .text.LL_USART_IsEnabled  py32md3xx_ll_usart.o
    0x08001070   0x08001070   0x00000088   Code   RO          819    .text.LL_USART_SetBaudRate  py32md3xx_ll_usart.o
    0x080010f8   0x080010f8   0x0000000e   Code   RO          817    .text.LL_USART_SetHWFlowCtrl  py32md3xx_ll_usart.o
    0x08001106   0x08001106   0x0000000e   Code   RO          815    .text.LL_USART_SetStopBitsLength  py32md3xx_ll_usart.o
    0x08001114   0x08001114   0x00000028   Code   RO          314    .text.LL_mDelay     py32md3xx_ll_utils.o
    0x0800113c   0x0800113c   0x0000002c   Code   RO           58    .text.Load_MotorConf  main.o
    0x08001168   0x08001168   0x00000002   Code   RO          205    .text.NMI_Handler   py32md3xx_it.o
    0x0800116a   0x0800116a   0x00000020   Code   RO           64    .text.NVIC_Config   main.o
    0x0800118a   0x0800118a   0x00000002   PAD
    0x0800118c   0x0800118c   0x00000084   Code   RO          751    .text.OC1Config     py32md3xx_ll_tim.o
    0x08001210   0x08001210   0x00000090   Code   RO          753    .text.OC2Config     py32md3xx_ll_tim.o
    0x080012a0   0x080012a0   0x00000094   Code   RO          755    .text.OC3Config     py32md3xx_ll_tim.o
    0x08001334   0x08001334   0x0000007c   Code   RO          757    .text.OC4Config     py32md3xx_ll_tim.o
    0x080013b0   0x080013b0   0x00000002   Code   RO          211    .text.PendSV_Handler  py32md3xx_it.o
    0x080013b2   0x080013b2   0x0000000e   Code   RO          221    .text.Q15_Multiply  py32md3xx_it.o
    0x080013c0   0x080013c0   0x0000000e   Code   RO          287    .text.Q15_Multiply  foc.o
    0x080013ce   0x080013ce   0x00000002   PAD
    0x080013d0   0x080013d0   0x00000020   Code   RO          591    .text.RCC_GetHCLKClockFreq  py32md3xx_ll_rcc.o
    0x080013f0   0x080013f0   0x00000020   Code   RO          593    .text.RCC_GetPCLK1ClockFreq  py32md3xx_ll_rcc.o
    0x08001410   0x08001410   0x0000003c   Code   RO          589    .text.RCC_GetSystemClockFreq  py32md3xx_ll_rcc.o
    0x0800144c   0x0800144c   0x0000000e   Code   RO          601    .text.RCC_PLL_GetFreqDomain_SYS  py32md3xx_ll_rcc.o
    0x0800145a   0x0800145a   0x0000002a   Code   RO          265    .text.Read_encoder  foc.o
    0x08001484   0x08001484   0x00000002   Code   RO          209    .text.SVC_Handler   py32md3xx_it.o
    0x08001486   0x08001486   0x00000002   PAD
    0x08001488   0x08001488   0x00000088   Code   RO           30    .text.Save_MotorConf  main.o
    0x08001510   0x08001510   0x00000002   Code   RO          213    .text.SysTick_Handler  py32md3xx_it.o
    0x08001512   0x08001512   0x00000002   PAD
    0x08001514   0x08001514   0x00000038   Code   RO            4    .text.SystemInit    system_py32md3xx.o
    0x0800154c   0x0800154c   0x00000284   Code   RO          215    .text.TIM1_BRK_UP_TRG_COM_IRQHandler  py32md3xx_it.o
    0x080017d0   0x080017d0   0x00000248   Code   RO          227    .text.USART2_IRQHandler  py32md3xx_it.o
    0x08001a18   0x08001a18   0x00000080   Code   RO          330    .text.UTILS_EnablePLLAndSwitchSystem  py32md3xx_ll_utils.o
    0x08001a98   0x08001a98   0x0000000c   Code   RO          320    .text.UTILS_PLL_IsBusy  py32md3xx_ll_utils.o
    0x08001aa4   0x08001aa4   0x00000014   Code   RO          190    .text.__NVIC_EnableIRQ  main.o
    0x08001ab8   0x08001ab8   0x00000020   Code   RO          188    .text.__NVIC_SetPriority  main.o
    0x08001ad8   0x08001ad8   0x00000010   Code   RO          225    .text.fast_cos_q15_raw  py32md3xx_it.o
    0x08001ae8   0x08001ae8   0x00000030   Code   RO          223    .text.fast_sin_q15_raw  py32md3xx_it.o
    0x08001b18   0x08001b18   0x0000009c   Code   RO           60    .text.main          main.o
    0x08001bb4   0x08001bb4   0x00000060   Code   RO          289    .text.setZero       foc.o
    0x08001c14   0x08001c14   0x000001c4   Code   RO          279    .text.set_PWM_level  foc.o
    0x08001dd8   0x08001dd8   0x0000000e   Code   RO          875    i.__scatterload_copy  mc_p.l(handlers.o)
    0x08001de6   0x08001de6   0x00000002   Code   RO          876    i.__scatterload_null  mc_p.l(handlers.o)
    0x08001de8   0x08001de8   0x0000000e   Code   RO          877    i.__scatterload_zeroinit  mc_p.l(handlers.o)
    0x08001df6   0x08001df6   0x00000002   PAD
    0x08001df8   0x08001df8   0x00000040   Data   RO            9    .rodata.AHBPrescTable  system_py32md3xx.o
    0x08001e38   0x08001e38   0x00000020   Data   RO           10    .rodata.APBPrescTable  system_py32md3xx.o
    0x08001e58   0x08001e58   0x00000003   Data   RO          195    .rodata.CHANNEL_OFFSET_TAB  main.o
    0x08001e5b   0x08001e5b   0x00000003   Data   RO          256    .rodata.CHANNEL_OFFSET_TAB  py32md3xx_it.o
    0x08001e5e   0x08001e5e   0x00000002   PAD
    0x08001e60   0x08001e60   0x00000020   Data   RO           11    .rodata.HSIFreqTable  system_py32md3xx.o
    0x08001e80   0x08001e80   0x00000102   Data   RO          304    .rodata.sin_q15_table_512  trig_q15_func.o
    0x08001f82   0x08001f82   0x00000002   PAD
    0x08001f84   0x08001f84   0x00000020   Data   RO          874    Region$$Table       anon$$obj.o


    Execution Region RW_IRAM1 (Exec base: 0x20000000, Load base: 0x08001fa8, Size: 0x000005b0, Max: 0x00002000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000000   0x08001fa8   0x000000c0   Data   RW           12    .ARM.__at_0x20000000  system_py32md3xx.o
    0x200000c0   0x08002068   0x00000004   Data   RW            8    .data.SystemCoreClock  system_py32md3xx.o
    0x200000c4   0x0800206c   0x00000004   PAD
    0x200000c8        -       0x00000006   Zero   RW          249    .bss.CommandBuffer  py32md3xx_it.o
    0x200000ce        -       0x00000001   Zero   RW          250    .bss.Speed_subCounter  py32md3xx_it.o
    0x200000cf   0x0800206c   0x00000001   PAD
    0x200000d0        -       0x00000002   Zero   RW          291    .bss.T1             foc.o
    0x200000d2        -       0x00000002   Zero   RW          292    .bss.T2             foc.o
    0x200000d4        -       0x00000018   Zero   RW          193    .bss.conf           main.o
    0x200000ec        -       0x00000002   Zero   RW          251    .bss.d_raw_angle    py32md3xx_it.o
    0x200000ee        -       0x00000002   Zero   RW          253    .bss.electric_angle  py32md3xx_it.o
    0x200000f0        -       0x00000080   Zero   RW          194    .bss.flash_buffer   main.o
    0x20000170        -       0x00000002   Zero   RW          293    .bss.level_u        foc.o
    0x20000172        -       0x00000002   Zero   RW          294    .bss.level_v        foc.o
    0x20000174        -       0x00000002   Zero   RW          295    .bss.level_w        foc.o
    0x20000176        -       0x00000020   Zero   RW          192    .bss.motor          main.o
    0x20000196        -       0x0000000a   Zero   RW          255    .bss.position       py32md3xx_it.o
    0x200001a0        -       0x00000001   Zero   RW          252    .bss.sign           py32md3xx_it.o
    0x200001a1   0x0800206c   0x00000001   PAD
    0x200001a2        -       0x0000000a   Zero   RW          254    .bss.speed          py32md3xx_it.o
    0x200001ac   0x0800206c   0x00000004   PAD
    0x200001b0        -       0x00000400   Zero   RW           20    STACK               startup_py32md320xx.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

       724        122          0          0         10       4508   foc.o
      2590        240          3          0        184      18877   main.o
      1544        280          3          0         32       6662   py32md3xx_it.o
       236          0          0          0          0       4349   py32md3xx_ll_gpio.o
       238         16          0          0          0       6402   py32md3xx_ll_rcc.o
       134          8          0          0          0       3390   py32md3xx_ll_spi.o
       826         56          0          0          0      11977   py32md3xx_ll_tim.o
       280          8          0          0          0       5145   py32md3xx_ll_usart.o
       572         48          0          0          0       5818   py32md3xx_ll_utils.o
        28          8        192          0       1024        616   startup_py32md320xx.o
       100         28        128        196          0       2271   system_py32md3xx.o
         0          0        258          0          0        487   trig_q15_func.o

    ----------------------------------------------------------------------
      7292        814        620        196       1260      70502   Object Totals
         0          0         32          0          0          0   (incl. Generated)
        20          0          4          0         10          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

         0          0          0          0          0          0   entry.o
         0          0          0          0          0          0   entry10a.o
         0          0          0          0          0          0   entry11a.o
         8          4          0          0          0          0   entry2.o
         4          0          0          0          0          0   entry5.o
         0          0          0          0          0          0   entry7b.o
         0          0          0          0          0          0   entry8b.o
         8          4          0          0          0          0   entry9a.o
        30          0          0          0          0          0   handlers.o
        36          8          0          0          0         68   init.o
        36          0          0          0          0        100   memseta.o
        62          0          0          0          0         72   uidiv_div0.o

    ----------------------------------------------------------------------
       188         16          0          0          0        240   Library Totals
         4          0          0          0          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

       184         16          0          0          0        240   mc_p.l

    ----------------------------------------------------------------------
       188         16          0          0          0        240   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

      7480        830        620        196       1260      70714   Grand Totals
      7480        830        620        196       1260      70714   ELF Image Totals
      7480        830        620        196          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                 8100 (   7.91kB)
    Total RW  Size (RW Data + ZI Data)              1456 (   1.42kB)
    Total ROM Size (Code + RO Data + RW Data)       8296 (   8.10kB)

==============================================================================

