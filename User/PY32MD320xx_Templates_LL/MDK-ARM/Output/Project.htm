<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Output\Project.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Output\Project.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 6160001: Last Updated: Mon Oct  6 06:41:00 2025
<BR><P>
<H3>Maximum Stack Usage =        152 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; $Super$$main &rArr; APP_USARTConfig &rArr; LL_USART_Init &rArr; LL_USART_SetBaudRate &rArr; __aeabi_uidiv
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[10]">ADC_COMP_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[10]">ADC_COMP_IRQHandler</a><BR>
 <LI><a href="#[2]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2]">HardFault_Handler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[10]">ADC_COMP_IRQHandler</a> from startup_py32md320xx.o(.text) referenced from startup_py32md320xx.o(RESET)
 <LI><a href="#[e]">DMA1_Channel1_IRQHandler</a> from startup_py32md320xx.o(.text) referenced from startup_py32md320xx.o(RESET)
 <LI><a href="#[f]">DMA1_Channel2_3_IRQHandler</a> from startup_py32md320xx.o(.text) referenced from startup_py32md320xx.o(RESET)
 <LI><a href="#[b]">EXTI0_1_IRQHandler</a> from startup_py32md320xx.o(.text) referenced from startup_py32md320xx.o(RESET)
 <LI><a href="#[c]">EXTI2_3_IRQHandler</a> from startup_py32md320xx.o(.text) referenced from startup_py32md320xx.o(RESET)
 <LI><a href="#[d]">EXTI4_15_IRQHandler</a> from startup_py32md320xx.o(.text) referenced from startup_py32md320xx.o(RESET)
 <LI><a href="#[9]">FLASH_IRQHandler</a> from startup_py32md320xx.o(.text) referenced from startup_py32md320xx.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from py32md3xx_it.o(.text.HardFault_Handler) referenced from startup_py32md320xx.o(RESET)
 <LI><a href="#[18]">I2C1_IRQHandler</a> from startup_py32md320xx.o(.text) referenced from startup_py32md320xx.o(RESET)
 <LI><a href="#[14]">LPTIM1_IRQHandler</a> from startup_py32md320xx.o(.text) referenced from startup_py32md320xx.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from py32md3xx_it.o(.text.NMI_Handler) referenced from startup_py32md320xx.o(RESET)
 <LI><a href="#[7]">PVD_IRQHandler</a> from startup_py32md320xx.o(.text) referenced from startup_py32md320xx.o(RESET)
 <LI><a href="#[4]">PendSV_Handler</a> from py32md3xx_it.o(.text.PendSV_Handler) referenced from startup_py32md320xx.o(RESET)
 <LI><a href="#[a]">RCC_IRQHandler</a> from startup_py32md320xx.o(.text) referenced from startup_py32md320xx.o(RESET)
 <LI><a href="#[8]">RTC_IRQHandler</a> from startup_py32md320xx.o(.text) referenced from startup_py32md320xx.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_py32md320xx.o(.text) referenced from startup_py32md320xx.o(RESET)
 <LI><a href="#[19]">SPI1_IRQHandler</a> from startup_py32md320xx.o(.text) referenced from startup_py32md320xx.o(RESET)
 <LI><a href="#[1a]">SPI2_IRQHandler</a> from startup_py32md320xx.o(.text) referenced from startup_py32md320xx.o(RESET)
 <LI><a href="#[3]">SVC_Handler</a> from py32md3xx_it.o(.text.SVC_Handler) referenced from startup_py32md320xx.o(RESET)
 <LI><a href="#[5]">SysTick_Handler</a> from py32md3xx_it.o(.text.SysTick_Handler) referenced from startup_py32md320xx.o(RESET)
 <LI><a href="#[1e]">SystemInit</a> from system_py32md3xx.o(.text.SystemInit) referenced from startup_py32md320xx.o(.text)
 <LI><a href="#[15]">TIM14_IRQHandler</a> from startup_py32md320xx.o(.text) referenced from startup_py32md320xx.o(RESET)
 <LI><a href="#[16]">TIM16_IRQHandler</a> from startup_py32md320xx.o(.text) referenced from startup_py32md320xx.o(RESET)
 <LI><a href="#[17]">TIM17_IRQHandler</a> from startup_py32md320xx.o(.text) referenced from startup_py32md320xx.o(RESET)
 <LI><a href="#[11]">TIM1_BRK_UP_TRG_COM_IRQHandler</a> from py32md3xx_it.o(.text.TIM1_BRK_UP_TRG_COM_IRQHandler) referenced from startup_py32md320xx.o(RESET)
 <LI><a href="#[12]">TIM1_CC_IRQHandler</a> from startup_py32md320xx.o(.text) referenced from startup_py32md320xx.o(RESET)
 <LI><a href="#[13]">TIM3_IRQHandler</a> from startup_py32md320xx.o(.text) referenced from startup_py32md320xx.o(RESET)
 <LI><a href="#[1b]">USART1_IRQHandler</a> from startup_py32md320xx.o(.text) referenced from startup_py32md320xx.o(RESET)
 <LI><a href="#[1c]">USART2_IRQHandler</a> from py32md3xx_it.o(.text.USART2_IRQHandler) referenced from startup_py32md320xx.o(RESET)
 <LI><a href="#[6]">WWDG_IRQHandler</a> from startup_py32md320xx.o(.text) referenced from startup_py32md320xx.o(RESET)
 <LI><a href="#[1f]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_py32md320xx.o(.text)
 <LI><a href="#[1d]">main</a> from system_py32md3xx.o(.text.$Sub$$main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[1f]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32md320xx.o(.text)
</UL>
<P><STRONG><a name="[b5]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[20]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[25]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[b6]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[b7]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[b8]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[b9]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[ba]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_py32md320xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32md320xx.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>ADC_COMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_py32md320xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_COMP_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_COMP_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_py32md320xx.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>DMA1_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_py32md320xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32md320xx.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>DMA1_Channel2_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_py32md320xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32md320xx.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>EXTI0_1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_py32md320xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32md320xx.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>EXTI2_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_py32md320xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32md320xx.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>EXTI4_15_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_py32md320xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32md320xx.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_py32md320xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32md320xx.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>I2C1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_py32md320xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32md320xx.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>LPTIM1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_py32md320xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32md320xx.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>PVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_py32md320xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32md320xx.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_py32md320xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32md320xx.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_py32md320xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32md320xx.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_py32md320xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32md320xx.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_py32md320xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32md320xx.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>TIM14_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_py32md320xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32md320xx.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>TIM16_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_py32md320xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32md320xx.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>TIM17_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_py32md320xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32md320xx.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_py32md320xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32md320xx.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>TIM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_py32md320xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32md320xx.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>USART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_py32md320xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32md320xx.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_py32md320xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32md320xx.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[8c]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Save_MotorConf
</UL>

<P><STRONG><a name="[bb]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[22]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[39]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_SPI1Config
</UL>

<P><STRONG><a name="[bc]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[24]"></a>_memset$wrapper</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[5b]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, uidiv_div0.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_uidiv
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_InitTick
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_USART_SetBaudRate
</UL>

<P><STRONG><a name="[bd]"></a>__aeabi_uidivmod</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, uidiv_div0.o(.text), UNUSED)

<P><STRONG><a name="[21]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[be]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[1d]"></a>main</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, system_py32md3xx.o(.text.$Sub$$main))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = main &rArr; $Super$$main &rArr; APP_USARTConfig &rArr; LL_USART_Init &rArr; LL_USART_SetBaudRate &rArr; __aeabi_uidiv
</UL>
<BR>[Calls]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, py32md3xx_it.o(.text.HardFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_py32md320xx.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>LL_GPIO_Init</STRONG> (Thumb, 128 bytes, Stack size 24 bytes, py32md3xx_ll_gpio.o(.text.LL_GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_GPIO_SetPinSpeed
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_GPIO_SetPinPull
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_GPIO_SetPinOutputType
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_GPIO_SetPinMode
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_GPIO_SetAFPin_8_15
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_GPIO_SetAFPin_0_7
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_USARTConfig
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_SPI1Config
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_PWMChannelConfig
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GPIOConfig
</UL>

<P><STRONG><a name="[42]"></a>LL_Init1msTick</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, py32md3xx_ll_utils.o(.text.LL_Init1msTick))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = LL_Init1msTick &rArr; LL_InitTick &rArr; __aeabi_uidiv
</UL>
<BR>[Calls]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_InitTick
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_SystemClockConfig
</UL>

<P><STRONG><a name="[41]"></a>LL_PLL_ConfigSystemClock_HSI</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, py32md3xx_ll_utils.o(.text.LL_PLL_ConfigSystemClock_HSI))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = LL_PLL_ConfigSystemClock_HSI &rArr; UTILS_EnablePLLAndSwitchSystem &rArr; LL_SetFlashLatency
</UL>
<BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UTILS_PLL_IsBusy
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UTILS_EnablePLLAndSwitchSystem
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RCC_PLL_SetMainSource
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RCC_HSI_IsReady
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RCC_HSI_GetFreq
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RCC_HSI_Enable
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_SystemClockConfig
</UL>

<P><STRONG><a name="[62]"></a>LL_RCC_GetSystemClocksFreq</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, py32md3xx_ll_rcc.o(.text.LL_RCC_GetSystemClocksFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LL_RCC_GetSystemClocksFreq &rArr; RCC_GetSystemClockFreq &rArr; RCC_PLL_GetFreqDomain_SYS
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetSystemClockFreq
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetPCLK1ClockFreq
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetHCLKClockFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_USART_Init
</UL>

<P><STRONG><a name="[3b]"></a>LL_SPI_Init</STRONG> (Thumb, 104 bytes, Stack size 16 bytes, py32md3xx_ll_spi.o(.text.LL_SPI_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LL_SPI_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_SPI_SetRxFIFOThreshold
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_SPI_IsEnabled
</UL>
<BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_SPI1Config
</UL>

<P><STRONG><a name="[68]"></a>LL_SetFlashLatency</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, py32md3xx_ll_utils.o(.text.LL_SetFlashLatency))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LL_SetFlashLatency
</UL>
<BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_FLASH_SetLatency
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_FLASH_GetLatency
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UTILS_EnablePLLAndSwitchSystem
</UL>

<P><STRONG><a name="[43]"></a>LL_SetSystemCoreClock</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, py32md3xx_ll_utils.o(.text.LL_SetSystemCoreClock))
<BR><BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UTILS_EnablePLLAndSwitchSystem
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_SystemClockConfig
</UL>

<P><STRONG><a name="[47]"></a>LL_TIM_Init</STRONG> (Thumb, 136 bytes, Stack size 16 bytes, py32md3xx_ll_tim.o(.text.LL_TIM_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LL_TIM_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_TIM_SetRepetitionCounter
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_TIM_SetPrescaler
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_TIM_SetAutoReload
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_TIM_GenerateEvent_UPDATE
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_TIM1BaseConfig
</UL>

<P><STRONG><a name="[37]"></a>LL_TIM_OC_Init</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, py32md3xx_ll_tim.o(.text.LL_TIM_OC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = LL_TIM_OC_Init &rArr; OC3Config
</UL>
<BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OC4Config
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OC3Config
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OC2Config
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OC1Config
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_PWMChannelConfig
</UL>

<P><STRONG><a name="[4e]"></a>LL_USART_Init</STRONG> (Thumb, 104 bytes, Stack size 32 bytes, py32md3xx_ll_usart.o(.text.LL_USART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = LL_USART_Init &rArr; LL_USART_SetBaudRate &rArr; __aeabi_uidiv
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RCC_GetSystemClocksFreq
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_USART_SetStopBitsLength
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_USART_SetHWFlowCtrl
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_USART_SetBaudRate
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_USART_IsEnabled
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_USARTConfig
</UL>

<P><STRONG><a name="[ae]"></a>Load_MotorConf</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, main.o(.text.Load_MotorConf))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Load_MotorConf
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
</UL>

<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, py32md3xx_it.o(.text.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32md320xx.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, py32md3xx_it.o(.text.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32md320xx.o(RESET)
</UL>
<P><STRONG><a name="[64]"></a>RCC_GetHCLKClockFreq</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, py32md3xx_ll_rcc.o(.text.RCC_GetHCLKClockFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RCC_GetHCLKClockFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RCC_GetAHBPrescaler
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RCC_GetSystemClocksFreq
</UL>

<P><STRONG><a name="[65]"></a>RCC_GetPCLK1ClockFreq</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, py32md3xx_ll_rcc.o(.text.RCC_GetPCLK1ClockFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RCC_GetPCLK1ClockFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RCC_GetAPB1Prescaler
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RCC_GetSystemClocksFreq
</UL>

<P><STRONG><a name="[63]"></a>RCC_GetSystemClockFreq</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, py32md3xx_ll_rcc.o(.text.RCC_GetSystemClockFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = RCC_GetSystemClockFreq &rArr; RCC_PLL_GetFreqDomain_SYS
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_PLL_GetFreqDomain_SYS
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RCC_GetSysClkSource
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RCC_GetHSIDiv
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RCC_GetSystemClocksFreq
</UL>

<P><STRONG><a name="[7f]"></a>RCC_PLL_GetFreqDomain_SYS</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, py32md3xx_ll_rcc.o(.text.RCC_PLL_GetFreqDomain_SYS))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RCC_PLL_GetFreqDomain_SYS
</UL>
<BR>[Calls]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RCC_PLL_GetMainSource
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RCC_HSI_GetFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetSystemClockFreq
</UL>

<P><STRONG><a name="[83]"></a>Read_encoder</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, foc.o(.text.Read_encoder))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Read_encoder
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_SPI_TransmitData16
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_SPI_ReceiveData16
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_SPI_IsActiveFlag_TXE
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_SPI_IsActiveFlag_RXNE
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_GPIO_SetOutputPin
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_GPIO_ResetOutputPin
</UL>
<BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM1_BRK_UP_TRG_COM_IRQHandler
</UL>

<P><STRONG><a name="[3]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, py32md3xx_it.o(.text.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32md320xx.o(RESET)
</UL>
<P><STRONG><a name="[8a]"></a>Save_MotorConf</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, main.o(.text.Save_MotorConf))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Save_MotorConf &rArr; LL_FLASH_PageProgram
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_FLASH_Unlock
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_FLASH_PageProgram
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_FLASH_Lock
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_FLASH_IsActiveFlag_EOP
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_FLASH_IsActiveFlag_BUSY
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_FLASH_EnablePageProgram
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_FLASH_EnableIT_EOP
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_FLASH_DisablePageProgram
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_FLASH_DisableIT_EOP
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_FLASH_ClearFlag_EOP
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset4
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_IRQHandler
</UL>

<P><STRONG><a name="[5]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, py32md3xx_it.o(.text.SysTick_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32md320xx.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>SystemInit</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, system_py32md3xx.o(.text.SystemInit))
<BR>[Address Reference Count : 1]<UL><LI> startup_py32md320xx.o(.text)
</UL>
<P><STRONG><a name="[11]"></a>TIM1_BRK_UP_TRG_COM_IRQHandler</STRONG> (Thumb, 488 bytes, Stack size 24 bytes, py32md3xx_it.o(.text.TIM1_BRK_UP_TRG_COM_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = TIM1_BRK_UP_TRG_COM_IRQHandler &rArr; set_PWM_level
</UL>
<BR>[Calls]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_PWM_level
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_encoder
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fast_sin_q15_raw
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fast_cos_q15_raw
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Q15_Multiply
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_TIM_IsActiveFlag_UPDATE
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_TIM_ClearFlag_UPDATE
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_py32md320xx.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>USART2_IRQHandler</STRONG> (Thumb, 496 bytes, Stack size 24 bytes, py32md3xx_it.o(.text.USART2_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = USART2_IRQHandler &rArr; Save_MotorConf &rArr; LL_FLASH_PageProgram
</UL>
<BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Q15_Multiply
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_USART_IsActiveFlag_ORE
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_USART_IsActiveFlag_IDLE
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_USART_ClearFlag_ORE
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_USART_ClearFlag_IDLE
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_TIM_EnableIT_UPDATE
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_TIM_EnableAllOutputs
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_TIM_DisableIT_UPDATE
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_TIM_DisableAllOutputs
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_GPIO_TogglePin
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_DMA_SetMemoryAddress
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_DMA_SetDataLength
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_DMA_EnableChannel
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_DMA_DisableChannel
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Save_MotorConf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_py32md320xx.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>$Super$$main</STRONG> (Thumb, 92 bytes, Stack size 0 bytes, main.o(.text.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = $Super$$main &rArr; APP_USARTConfig &rArr; LL_USART_Init &rArr; LL_USART_SetBaudRate &rArr; __aeabi_uidiv
</UL>
<BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Load_MotorConf
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Config
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_TIM_EnableIT_UPDATE
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_GPIO_ResetOutputPin
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_USARTConfig
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_TIM1BaseConfig
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_SystemClockConfig
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_SPI1Config
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_PWMChannelConfig
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GPIOConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[9a]"></a>set_PWM_level</STRONG> (Thumb, 412 bytes, Stack size 40 bytes, foc.o(.text.set_PWM_level))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = set_PWM_level
</UL>
<BR>[Calls]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Q15_Multiply
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_TIM_OC_SetCompareCH3
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_TIM_OC_SetCompareCH2
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_TIM_OC_SetCompareCH1
</UL>
<BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM1_BRK_UP_TRG_COM_IRQHandler
</UL>

<P><STRONG><a name="[bf]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[c0]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[c1]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[27]"></a>APP_DMAConfig</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, main.o(.text.APP_DMAConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = APP_DMAConfig &rArr; LL_DMA_ConfigTransfer
</UL>
<BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_USART_EnableDMAReq_RX
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_USART_ClearFlag_ORE
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_SYSCFG_SetDMARemap_CH2
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_SYSCFG_SetDMARemap_CH1
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_DMA_SetPeriphAddress
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_DMA_SetMemoryAddress
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_DMA_SetDataLength
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_DMA_EnableChannel
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_DMA_ConfigTransfer
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_APB1_GRP2_EnableClock
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_AHB1_GRP1_EnableClock
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_USARTConfig
</UL>

<P><STRONG><a name="[33]"></a>APP_GPIOConfig</STRONG> (Thumb, 44 bytes, Stack size 32 bytes, main.o(.text.APP_GPIOConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = APP_GPIOConfig &rArr; LL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_GPIO_Init
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_IOP_GRP1_EnableClock
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
</UL>

<P><STRONG><a name="[36]"></a>APP_PWMChannelConfig</STRONG> (Thumb, 168 bytes, Stack size 80 bytes, main.o(.text.APP_PWMChannelConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = APP_PWMChannelConfig &rArr; LL_TIM_OC_Init &rArr; OC3Config
</UL>
<BR>[Calls]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_TIM_OC_Init
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_GPIO_Init
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_IOP_GRP1_EnableClock
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_APB1_GRP2_EnableClock
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
</UL>

<P><STRONG><a name="[38]"></a>APP_SPI1Config</STRONG> (Thumb, 168 bytes, Stack size 96 bytes, main.o(.text.APP_SPI1Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = APP_SPI1Config &rArr; LL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_SPI_Init
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_GPIO_Init
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_SPI_Enable
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_IOP_GRP1_EnableClock
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_GPIO_SetOutputPin
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_APB1_GRP2_EnableClock
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
</UL>

<P><STRONG><a name="[3d]"></a>APP_SystemClockConfig</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, main.o(.text.APP_SystemClockConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = APP_SystemClockConfig &rArr; LL_PLL_ConfigSystemClock_HSI &rArr; UTILS_EnablePLLAndSwitchSystem &rArr; LL_SetFlashLatency
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_SetSystemCoreClock
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_PLL_ConfigSystemClock_HSI
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_Init1msTick
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RCC_SetAPB1Prescaler
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RCC_SetAHBPrescaler
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RCC_HSI_SetCalibFreq
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RCC_HSI_IsReady
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RCC_HSI_Enable
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
</UL>

<P><STRONG><a name="[46]"></a>APP_TIM1BaseConfig</STRONG> (Thumb, 44 bytes, Stack size 32 bytes, main.o(.text.APP_TIM1BaseConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = APP_TIM1BaseConfig &rArr; LL_TIM_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_TIM_Init
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_TIM_EnableCounter
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_TIM_EnableAllOutputs
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
</UL>

<P><STRONG><a name="[4a]"></a>APP_USARTConfig</STRONG> (Thumb, 132 bytes, Stack size 72 bytes, main.o(.text.APP_USARTConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = APP_USARTConfig &rArr; LL_USART_Init &rArr; LL_USART_SetBaudRate &rArr; __aeabi_uidiv
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_USART_Init
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_GPIO_Init
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_EnableIRQ
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_USART_EnableIT_IDLE
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_USART_Enable
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_USART_ConfigAsyncMode
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_IOP_GRP1_EnableClock
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_APB1_GRP1_EnableClock
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_DMAConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
</UL>

<P><STRONG><a name="[28]"></a>LL_AHB1_GRP1_EnableClock</STRONG> (Thumb, 24 bytes, Stack size 4 bytes, main.o(.text.LL_AHB1_GRP1_EnableClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = LL_AHB1_GRP1_EnableClock
</UL>
<BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_DMAConfig
</UL>

<P><STRONG><a name="[4b]"></a>LL_APB1_GRP1_EnableClock</STRONG> (Thumb, 28 bytes, Stack size 4 bytes, main.o(.text.LL_APB1_GRP1_EnableClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = LL_APB1_GRP1_EnableClock
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_USARTConfig
</UL>

<P><STRONG><a name="[29]"></a>LL_APB1_GRP2_EnableClock</STRONG> (Thumb, 24 bytes, Stack size 4 bytes, main.o(.text.LL_APB1_GRP2_EnableClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = LL_APB1_GRP2_EnableClock
</UL>
<BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_SPI1Config
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_PWMChannelConfig
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_DMAConfig
</UL>

<P><STRONG><a name="[2a]"></a>LL_DMA_ConfigTransfer</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, main.o(.text.LL_DMA_ConfigTransfer))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LL_DMA_ConfigTransfer
</UL>
<BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_DMAConfig
</UL>

<P><STRONG><a name="[30]"></a>LL_DMA_EnableChannel</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, main.o(.text.LL_DMA_EnableChannel))
<BR><BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_DMAConfig
</UL>

<P><STRONG><a name="[2f]"></a>LL_DMA_SetDataLength</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, main.o(.text.LL_DMA_SetDataLength))
<BR><BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_DMAConfig
</UL>

<P><STRONG><a name="[2d]"></a>LL_DMA_SetMemoryAddress</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, main.o(.text.LL_DMA_SetMemoryAddress))
<BR><BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_DMAConfig
</UL>

<P><STRONG><a name="[2e]"></a>LL_DMA_SetPeriphAddress</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, main.o(.text.LL_DMA_SetPeriphAddress))
<BR><BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_DMAConfig
</UL>

<P><STRONG><a name="[91]"></a>LL_FLASH_ClearFlag_EOP</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, main.o(.text.LL_FLASH_ClearFlag_EOP))
<BR><BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Save_MotorConf
</UL>

<P><STRONG><a name="[92]"></a>LL_FLASH_DisableIT_EOP</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, main.o(.text.LL_FLASH_DisableIT_EOP))
<BR><BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Save_MotorConf
</UL>

<P><STRONG><a name="[93]"></a>LL_FLASH_DisablePageProgram</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, main.o(.text.LL_FLASH_DisablePageProgram))
<BR><BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Save_MotorConf
</UL>

<P><STRONG><a name="[8d]"></a>LL_FLASH_EnableIT_EOP</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, main.o(.text.LL_FLASH_EnableIT_EOP))
<BR><BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Save_MotorConf
</UL>

<P><STRONG><a name="[8e]"></a>LL_FLASH_EnablePageProgram</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, main.o(.text.LL_FLASH_EnablePageProgram))
<BR><BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Save_MotorConf
</UL>

<P><STRONG><a name="[53]"></a>LL_FLASH_EnablePageProgramStart</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, main.o(.text.LL_FLASH_EnablePageProgramStart))
<BR><BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_FLASH_PageProgram
</UL>

<P><STRONG><a name="[8f]"></a>LL_FLASH_IsActiveFlag_BUSY</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, main.o(.text.LL_FLASH_IsActiveFlag_BUSY))
<BR><BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Save_MotorConf
</UL>

<P><STRONG><a name="[90]"></a>LL_FLASH_IsActiveFlag_EOP</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, main.o(.text.LL_FLASH_IsActiveFlag_EOP))
<BR><BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Save_MotorConf
</UL>

<P><STRONG><a name="[94]"></a>LL_FLASH_Lock</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, main.o(.text.LL_FLASH_Lock))
<BR><BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Save_MotorConf
</UL>

<P><STRONG><a name="[52]"></a>LL_FLASH_PageProgram</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, main.o(.text.LL_FLASH_PageProgram))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LL_FLASH_PageProgram
</UL>
<BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_FLASH_EnablePageProgramStart
</UL>
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Save_MotorConf
</UL>

<P><STRONG><a name="[8b]"></a>LL_FLASH_Unlock</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, main.o(.text.LL_FLASH_Unlock))
<BR><BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Save_MotorConf
</UL>

<P><STRONG><a name="[af]"></a>LL_GPIO_ResetOutputPin</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, main.o(.text.LL_GPIO_ResetOutputPin))
<BR><BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
</UL>

<P><STRONG><a name="[3a]"></a>LL_GPIO_SetOutputPin</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, main.o(.text.LL_GPIO_SetOutputPin))
<BR><BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_SPI1Config
</UL>

<P><STRONG><a name="[34]"></a>LL_IOP_GRP1_EnableClock</STRONG> (Thumb, 24 bytes, Stack size 4 bytes, main.o(.text.LL_IOP_GRP1_EnableClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = LL_IOP_GRP1_EnableClock
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_USARTConfig
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_SPI1Config
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_PWMChannelConfig
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_GPIOConfig
</UL>

<P><STRONG><a name="[3e]"></a>LL_RCC_HSI_Enable</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, main.o(.text.LL_RCC_HSI_Enable))
<BR><BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_SystemClockConfig
</UL>

<P><STRONG><a name="[40]"></a>LL_RCC_HSI_IsReady</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, main.o(.text.LL_RCC_HSI_IsReady))
<BR><BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_SystemClockConfig
</UL>

<P><STRONG><a name="[3f]"></a>LL_RCC_HSI_SetCalibFreq</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, main.o(.text.LL_RCC_HSI_SetCalibFreq))
<BR><BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_SystemClockConfig
</UL>

<P><STRONG><a name="[44]"></a>LL_RCC_SetAHBPrescaler</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, main.o(.text.LL_RCC_SetAHBPrescaler))
<BR><BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_SystemClockConfig
</UL>

<P><STRONG><a name="[45]"></a>LL_RCC_SetAPB1Prescaler</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, main.o(.text.LL_RCC_SetAPB1Prescaler))
<BR><BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_SystemClockConfig
</UL>

<P><STRONG><a name="[3c]"></a>LL_SPI_Enable</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, main.o(.text.LL_SPI_Enable))
<BR><BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_SPI1Config
</UL>

<P><STRONG><a name="[2b]"></a>LL_SYSCFG_SetDMARemap_CH1</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, main.o(.text.LL_SYSCFG_SetDMARemap_CH1))
<BR><BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_DMAConfig
</UL>

<P><STRONG><a name="[2c]"></a>LL_SYSCFG_SetDMARemap_CH2</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, main.o(.text.LL_SYSCFG_SetDMARemap_CH2))
<BR><BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_DMAConfig
</UL>

<P><STRONG><a name="[48]"></a>LL_TIM_EnableAllOutputs</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, main.o(.text.LL_TIM_EnableAllOutputs))
<BR><BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_TIM1BaseConfig
</UL>

<P><STRONG><a name="[49]"></a>LL_TIM_EnableCounter</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, main.o(.text.LL_TIM_EnableCounter))
<BR><BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_TIM1BaseConfig
</UL>

<P><STRONG><a name="[b0]"></a>LL_TIM_EnableIT_UPDATE</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, main.o(.text.LL_TIM_EnableIT_UPDATE))
<BR><BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
</UL>

<P><STRONG><a name="[31]"></a>LL_USART_ClearFlag_ORE</STRONG> (Thumb, 20 bytes, Stack size 4 bytes, main.o(.text.LL_USART_ClearFlag_ORE))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = LL_USART_ClearFlag_ORE
</UL>
<BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_DMAConfig
</UL>

<P><STRONG><a name="[4f]"></a>LL_USART_ConfigAsyncMode</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, main.o(.text.LL_USART_ConfigAsyncMode))
<BR><BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_USARTConfig
</UL>

<P><STRONG><a name="[51]"></a>LL_USART_Enable</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, main.o(.text.LL_USART_Enable))
<BR><BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_USARTConfig
</UL>

<P><STRONG><a name="[32]"></a>LL_USART_EnableDMAReq_RX</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, main.o(.text.LL_USART_EnableDMAReq_RX))
<BR><BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_DMAConfig
</UL>

<P><STRONG><a name="[50]"></a>LL_USART_EnableIT_IDLE</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, main.o(.text.LL_USART_EnableIT_IDLE))
<BR><BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_USARTConfig
</UL>

<P><STRONG><a name="[77]"></a>NVIC_Config</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, main.o(.text.NVIC_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = NVIC_Config &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;$Super$$main
</UL>

<P><STRONG><a name="[4d]"></a>__NVIC_EnableIRQ</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, main.o(.text.__NVIC_EnableIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Config
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_USARTConfig
</UL>

<P><STRONG><a name="[4c]"></a>__NVIC_SetPriority</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, main.o(.text.__NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Config
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_USARTConfig
</UL>

<P><STRONG><a name="[9d]"></a>LL_DMA_DisableChannel</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, py32md3xx_it.o(.text.LL_DMA_DisableChannel))
<BR><BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_IRQHandler
</UL>

<P><STRONG><a name="[a5]"></a>LL_DMA_EnableChannel</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, py32md3xx_it.o(.text.LL_DMA_EnableChannel))
<BR><BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_IRQHandler
</UL>

<P><STRONG><a name="[a4]"></a>LL_DMA_SetDataLength</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, py32md3xx_it.o(.text.LL_DMA_SetDataLength))
<BR><BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_IRQHandler
</UL>

<P><STRONG><a name="[a3]"></a>LL_DMA_SetMemoryAddress</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, py32md3xx_it.o(.text.LL_DMA_SetMemoryAddress))
<BR><BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_IRQHandler
</UL>

<P><STRONG><a name="[a2]"></a>LL_GPIO_TogglePin</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, py32md3xx_it.o(.text.LL_GPIO_TogglePin))
<BR><BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_IRQHandler
</UL>

<P><STRONG><a name="[96]"></a>LL_TIM_ClearFlag_UPDATE</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, py32md3xx_it.o(.text.LL_TIM_ClearFlag_UPDATE))
<BR><BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM1_BRK_UP_TRG_COM_IRQHandler
</UL>

<P><STRONG><a name="[9e]"></a>LL_TIM_DisableAllOutputs</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, py32md3xx_it.o(.text.LL_TIM_DisableAllOutputs))
<BR><BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_IRQHandler
</UL>

<P><STRONG><a name="[9f]"></a>LL_TIM_DisableIT_UPDATE</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, py32md3xx_it.o(.text.LL_TIM_DisableIT_UPDATE))
<BR><BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_IRQHandler
</UL>

<P><STRONG><a name="[a0]"></a>LL_TIM_EnableAllOutputs</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, py32md3xx_it.o(.text.LL_TIM_EnableAllOutputs))
<BR><BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_IRQHandler
</UL>

<P><STRONG><a name="[a1]"></a>LL_TIM_EnableIT_UPDATE</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, py32md3xx_it.o(.text.LL_TIM_EnableIT_UPDATE))
<BR><BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_IRQHandler
</UL>

<P><STRONG><a name="[95]"></a>LL_TIM_IsActiveFlag_UPDATE</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, py32md3xx_it.o(.text.LL_TIM_IsActiveFlag_UPDATE))
<BR><BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM1_BRK_UP_TRG_COM_IRQHandler
</UL>

<P><STRONG><a name="[9c]"></a>LL_USART_ClearFlag_IDLE</STRONG> (Thumb, 20 bytes, Stack size 4 bytes, py32md3xx_it.o(.text.LL_USART_ClearFlag_IDLE))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = LL_USART_ClearFlag_IDLE
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_IRQHandler
</UL>

<P><STRONG><a name="[a7]"></a>LL_USART_ClearFlag_ORE</STRONG> (Thumb, 20 bytes, Stack size 4 bytes, py32md3xx_it.o(.text.LL_USART_ClearFlag_ORE))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = LL_USART_ClearFlag_ORE
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_IRQHandler
</UL>

<P><STRONG><a name="[9b]"></a>LL_USART_IsActiveFlag_IDLE</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, py32md3xx_it.o(.text.LL_USART_IsActiveFlag_IDLE))
<BR><BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_IRQHandler
</UL>

<P><STRONG><a name="[a6]"></a>LL_USART_IsActiveFlag_ORE</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, py32md3xx_it.o(.text.LL_USART_IsActiveFlag_ORE))
<BR><BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_IRQHandler
</UL>

<P><STRONG><a name="[97]"></a>Q15_Multiply</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, py32md3xx_it.o(.text.Q15_Multiply))
<BR><BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_IRQHandler
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM1_BRK_UP_TRG_COM_IRQHandler
</UL>

<P><STRONG><a name="[99]"></a>fast_cos_q15_raw</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, py32md3xx_it.o(.text.fast_cos_q15_raw))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = fast_cos_q15_raw
</UL>
<BR>[Calls]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fast_sin_q15_raw
</UL>
<BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM1_BRK_UP_TRG_COM_IRQHandler
</UL>

<P><STRONG><a name="[98]"></a>fast_sin_q15_raw</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, py32md3xx_it.o(.text.fast_sin_q15_raw))
<BR><BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM1_BRK_UP_TRG_COM_IRQHandler
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fast_cos_q15_raw
</UL>

<P><STRONG><a name="[84]"></a>LL_GPIO_ResetOutputPin</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, foc.o(.text.LL_GPIO_ResetOutputPin))
<BR><BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_encoder
</UL>

<P><STRONG><a name="[89]"></a>LL_GPIO_SetOutputPin</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, foc.o(.text.LL_GPIO_SetOutputPin))
<BR><BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_encoder
</UL>

<P><STRONG><a name="[87]"></a>LL_SPI_IsActiveFlag_RXNE</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, foc.o(.text.LL_SPI_IsActiveFlag_RXNE))
<BR><BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_encoder
</UL>

<P><STRONG><a name="[85]"></a>LL_SPI_IsActiveFlag_TXE</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, foc.o(.text.LL_SPI_IsActiveFlag_TXE))
<BR><BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_encoder
</UL>

<P><STRONG><a name="[88]"></a>LL_SPI_ReceiveData16</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, foc.o(.text.LL_SPI_ReceiveData16))
<BR><BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_encoder
</UL>

<P><STRONG><a name="[86]"></a>LL_SPI_TransmitData16</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, foc.o(.text.LL_SPI_TransmitData16))
<BR><BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_encoder
</UL>

<P><STRONG><a name="[b2]"></a>LL_TIM_OC_SetCompareCH1</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, foc.o(.text.LL_TIM_OC_SetCompareCH1))
<BR><BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_PWM_level
</UL>

<P><STRONG><a name="[b3]"></a>LL_TIM_OC_SetCompareCH2</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, foc.o(.text.LL_TIM_OC_SetCompareCH2))
<BR><BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_PWM_level
</UL>

<P><STRONG><a name="[b4]"></a>LL_TIM_OC_SetCompareCH3</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, foc.o(.text.LL_TIM_OC_SetCompareCH3))
<BR><BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_PWM_level
</UL>

<P><STRONG><a name="[b1]"></a>Q15_Multiply</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, foc.o(.text.Q15_Multiply))
<BR><BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_PWM_level
</UL>

<P><STRONG><a name="[6a]"></a>LL_FLASH_GetLatency</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, py32md3xx_ll_utils.o(.text.LL_FLASH_GetLatency))
<BR><BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_SetFlashLatency
</UL>

<P><STRONG><a name="[69]"></a>LL_FLASH_SetLatency</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, py32md3xx_ll_utils.o(.text.LL_FLASH_SetLatency))
<BR><BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_SetFlashLatency
</UL>

<P><STRONG><a name="[5a]"></a>LL_InitTick</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, py32md3xx_ll_utils.o(.text.LL_InitTick))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LL_InitTick &rArr; __aeabi_uidiv
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidiv
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_Init1msTick
</UL>

<P><STRONG><a name="[ac]"></a>LL_RCC_GetSysClkSource</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, py32md3xx_ll_utils.o(.text.LL_RCC_GetSysClkSource))
<BR><BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UTILS_EnablePLLAndSwitchSystem
</UL>

<P><STRONG><a name="[5f]"></a>LL_RCC_HSI_Enable</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, py32md3xx_ll_utils.o(.text.LL_RCC_HSI_Enable))
<BR><BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_PLL_ConfigSystemClock_HSI
</UL>

<P><STRONG><a name="[5d]"></a>LL_RCC_HSI_GetFreq</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, py32md3xx_ll_utils.o(.text.LL_RCC_HSI_GetFreq))
<BR><BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_PLL_ConfigSystemClock_HSI
</UL>

<P><STRONG><a name="[5e]"></a>LL_RCC_HSI_IsReady</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, py32md3xx_ll_utils.o(.text.LL_RCC_HSI_IsReady))
<BR><BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_PLL_ConfigSystemClock_HSI
</UL>

<P><STRONG><a name="[a8]"></a>LL_RCC_PLL_Enable</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, py32md3xx_ll_utils.o(.text.LL_RCC_PLL_Enable))
<BR><BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UTILS_EnablePLLAndSwitchSystem
</UL>

<P><STRONG><a name="[a9]"></a>LL_RCC_PLL_IsReady</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, py32md3xx_ll_utils.o(.text.LL_RCC_PLL_IsReady))
<BR><BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UTILS_PLL_IsBusy
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UTILS_EnablePLLAndSwitchSystem
</UL>

<P><STRONG><a name="[60]"></a>LL_RCC_PLL_SetMainSource</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, py32md3xx_ll_utils.o(.text.LL_RCC_PLL_SetMainSource))
<BR><BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_PLL_ConfigSystemClock_HSI
</UL>

<P><STRONG><a name="[aa]"></a>LL_RCC_SetAHBPrescaler</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, py32md3xx_ll_utils.o(.text.LL_RCC_SetAHBPrescaler))
<BR><BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UTILS_EnablePLLAndSwitchSystem
</UL>

<P><STRONG><a name="[ad]"></a>LL_RCC_SetAPB1Prescaler</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, py32md3xx_ll_utils.o(.text.LL_RCC_SetAPB1Prescaler))
<BR><BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UTILS_EnablePLLAndSwitchSystem
</UL>

<P><STRONG><a name="[ab]"></a>LL_RCC_SetSysClkSource</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, py32md3xx_ll_utils.o(.text.LL_RCC_SetSysClkSource))
<BR><BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UTILS_EnablePLLAndSwitchSystem
</UL>

<P><STRONG><a name="[61]"></a>UTILS_EnablePLLAndSwitchSystem</STRONG> (Thumb, 120 bytes, Stack size 24 bytes, py32md3xx_ll_utils.o(.text.UTILS_EnablePLLAndSwitchSystem))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = UTILS_EnablePLLAndSwitchSystem &rArr; LL_SetFlashLatency
</UL>
<BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_SetFlashLatency
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RCC_SetSysClkSource
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RCC_SetAPB1Prescaler
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RCC_SetAHBPrescaler
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RCC_PLL_IsReady
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RCC_PLL_Enable
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RCC_GetSysClkSource
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_SetSystemCoreClock
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_PLL_ConfigSystemClock_HSI
</UL>

<P><STRONG><a name="[5c]"></a>UTILS_PLL_IsBusy</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, py32md3xx_ll_utils.o(.text.UTILS_PLL_IsBusy))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UTILS_PLL_IsBusy
</UL>
<BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RCC_PLL_IsReady
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_PLL_ConfigSystemClock_HSI
</UL>

<P><STRONG><a name="[58]"></a>LL_GPIO_SetAFPin_0_7</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, py32md3xx_ll_gpio.o(.text.LL_GPIO_SetAFPin_0_7))
<BR><BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_GPIO_Init
</UL>

<P><STRONG><a name="[54]"></a>LL_GPIO_SetAFPin_8_15</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, py32md3xx_ll_gpio.o(.text.LL_GPIO_SetAFPin_8_15))
<BR><BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_GPIO_Init
</UL>

<P><STRONG><a name="[55]"></a>LL_GPIO_SetPinMode</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, py32md3xx_ll_gpio.o(.text.LL_GPIO_SetPinMode))
<BR><BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_GPIO_Init
</UL>

<P><STRONG><a name="[59]"></a>LL_GPIO_SetPinOutputType</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, py32md3xx_ll_gpio.o(.text.LL_GPIO_SetPinOutputType))
<BR><BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_GPIO_Init
</UL>

<P><STRONG><a name="[57]"></a>LL_GPIO_SetPinPull</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, py32md3xx_ll_gpio.o(.text.LL_GPIO_SetPinPull))
<BR><BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_GPIO_Init
</UL>

<P><STRONG><a name="[56]"></a>LL_GPIO_SetPinSpeed</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, py32md3xx_ll_gpio.o(.text.LL_GPIO_SetPinSpeed))
<BR><BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_GPIO_Init
</UL>

<P><STRONG><a name="[7c]"></a>LL_RCC_GetAHBPrescaler</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, py32md3xx_ll_rcc.o(.text.LL_RCC_GetAHBPrescaler))
<BR><BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetHCLKClockFreq
</UL>

<P><STRONG><a name="[7d]"></a>LL_RCC_GetAPB1Prescaler</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, py32md3xx_ll_rcc.o(.text.LL_RCC_GetAPB1Prescaler))
<BR><BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetPCLK1ClockFreq
</UL>

<P><STRONG><a name="[80]"></a>LL_RCC_GetHSIDiv</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, py32md3xx_ll_rcc.o(.text.LL_RCC_GetHSIDiv))
<BR><BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetSystemClockFreq
</UL>

<P><STRONG><a name="[7e]"></a>LL_RCC_GetSysClkSource</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, py32md3xx_ll_rcc.o(.text.LL_RCC_GetSysClkSource))
<BR><BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetSystemClockFreq
</UL>

<P><STRONG><a name="[82]"></a>LL_RCC_HSI_GetFreq</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, py32md3xx_ll_rcc.o(.text.LL_RCC_HSI_GetFreq))
<BR><BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_PLL_GetFreqDomain_SYS
</UL>

<P><STRONG><a name="[81]"></a>LL_RCC_PLL_GetMainSource</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, py32md3xx_ll_rcc.o(.text.LL_RCC_PLL_GetMainSource))
<BR><BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_PLL_GetFreqDomain_SYS
</UL>

<P><STRONG><a name="[66]"></a>LL_SPI_IsEnabled</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, py32md3xx_ll_spi.o(.text.LL_SPI_IsEnabled))
<BR><BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_SPI_Init
</UL>

<P><STRONG><a name="[67]"></a>LL_SPI_SetRxFIFOThreshold</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, py32md3xx_ll_spi.o(.text.LL_SPI_SetRxFIFOThreshold))
<BR><BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_SPI_Init
</UL>

<P><STRONG><a name="[6e]"></a>LL_TIM_GenerateEvent_UPDATE</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, py32md3xx_ll_tim.o(.text.LL_TIM_GenerateEvent_UPDATE))
<BR><BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_TIM_Init
</UL>

<P><STRONG><a name="[78]"></a>LL_TIM_OC_SetCompareCH1</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, py32md3xx_ll_tim.o(.text.LL_TIM_OC_SetCompareCH1))
<BR><BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OC1Config
</UL>

<P><STRONG><a name="[79]"></a>LL_TIM_OC_SetCompareCH2</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, py32md3xx_ll_tim.o(.text.LL_TIM_OC_SetCompareCH2))
<BR><BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OC2Config
</UL>

<P><STRONG><a name="[7a]"></a>LL_TIM_OC_SetCompareCH3</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, py32md3xx_ll_tim.o(.text.LL_TIM_OC_SetCompareCH3))
<BR><BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OC3Config
</UL>

<P><STRONG><a name="[7b]"></a>LL_TIM_OC_SetCompareCH4</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, py32md3xx_ll_tim.o(.text.LL_TIM_OC_SetCompareCH4))
<BR><BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OC4Config
</UL>

<P><STRONG><a name="[6b]"></a>LL_TIM_SetAutoReload</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, py32md3xx_ll_tim.o(.text.LL_TIM_SetAutoReload))
<BR><BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_TIM_Init
</UL>

<P><STRONG><a name="[6c]"></a>LL_TIM_SetPrescaler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, py32md3xx_ll_tim.o(.text.LL_TIM_SetPrescaler))
<BR><BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_TIM_Init
</UL>

<P><STRONG><a name="[6d]"></a>LL_TIM_SetRepetitionCounter</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, py32md3xx_ll_tim.o(.text.LL_TIM_SetRepetitionCounter))
<BR><BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_TIM_Init
</UL>

<P><STRONG><a name="[71]"></a>OC1Config</STRONG> (Thumb, 124 bytes, Stack size 32 bytes, py32md3xx_ll_tim.o(.text.OC1Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = OC1Config
</UL>
<BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_TIM_OC_SetCompareCH1
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_TIM_OC_Init
</UL>

<P><STRONG><a name="[6f]"></a>OC2Config</STRONG> (Thumb, 140 bytes, Stack size 32 bytes, py32md3xx_ll_tim.o(.text.OC2Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = OC2Config
</UL>
<BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_TIM_OC_SetCompareCH2
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_TIM_OC_Init
</UL>

<P><STRONG><a name="[72]"></a>OC3Config</STRONG> (Thumb, 140 bytes, Stack size 40 bytes, py32md3xx_ll_tim.o(.text.OC3Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = OC3Config
</UL>
<BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_TIM_OC_SetCompareCH3
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_TIM_OC_Init
</UL>

<P><STRONG><a name="[70]"></a>OC4Config</STRONG> (Thumb, 112 bytes, Stack size 32 bytes, py32md3xx_ll_tim.o(.text.OC4Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = OC4Config
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_TIM_OC_SetCompareCH4
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_TIM_OC_Init
</UL>

<P><STRONG><a name="[73]"></a>LL_USART_IsEnabled</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, py32md3xx_ll_usart.o(.text.LL_USART_IsEnabled))
<BR><BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_USART_Init
</UL>

<P><STRONG><a name="[76]"></a>LL_USART_SetBaudRate</STRONG> (Thumb, 132 bytes, Stack size 24 bytes, py32md3xx_ll_usart.o(.text.LL_USART_SetBaudRate))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = LL_USART_SetBaudRate &rArr; __aeabi_uidiv
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidiv
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_USART_Init
</UL>

<P><STRONG><a name="[75]"></a>LL_USART_SetHWFlowCtrl</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, py32md3xx_ll_usart.o(.text.LL_USART_SetHWFlowCtrl))
<BR><BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_USART_Init
</UL>

<P><STRONG><a name="[74]"></a>LL_USART_SetStopBitsLength</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, py32md3xx_ll_usart.o(.text.LL_USART_SetStopBitsLength))
<BR><BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_USART_Init
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
